-- MySQL dump 10.13  Distrib 5.6.26, for Linux (x86_64)
--
-- Host: 127.0.0.1    Database: 9TlIUpI8
-- ------------------------------------------------------
-- Server version	5.6.26

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `9TlIUpI8`
--

/*!40000 DROP DATABASE IF EXISTS `9TlIUpI8`*/;

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `9TlIUpI8` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `9TlIUpI8`;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
INSERT INTO `wp_commentmeta` VALUES (1,1,'_wp_trash_meta_status','1');
INSERT INTO `wp_commentmeta` VALUES (2,1,'_wp_trash_meta_time','1455950731');
INSERT INTO `wp_commentmeta` VALUES (3,2,'_wp_trash_meta_status','1');
INSERT INTO `wp_commentmeta` VALUES (4,2,'_wp_trash_meta_time','1455968893');
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (1,1,'WordPress先生','','https://wordpress.org/','','2016-02-20 12:58:59','2016-02-20 04:58:59','您好，这是一条评论。\n要删除评论，请先登录，然后再查看这篇文章的评论。登录后您可以看到编辑或者删除评论的选项。',0,'trash','','',0,0);
INSERT INTO `wp_comments` VALUES (2,1,'破土君','happyjiahan@gmail.com','http://www.codingcoder.com','116.230.148.226','2016-02-20 19:47:51','2016-02-20 11:47:51','这个评论',0,'trash','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.47 Safari/537.36','',0,1);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `option_value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=MyISAM AUTO_INCREMENT=6945 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://codingcoder.com','yes');
INSERT INTO `wp_options` VALUES (2,'home','http://codingcoder.com','yes');
INSERT INTO `wp_options` VALUES (3,'blogname','破土踩坑','yes');
INSERT INTO `wp_options` VALUES (4,'blogdescription','分享并快乐着','yes');
INSERT INTO `wp_options` VALUES (5,'users_can_register','1','yes');
INSERT INTO `wp_options` VALUES (6,'admin_email','happyjiahan@gmail.com','yes');
INSERT INTO `wp_options` VALUES (7,'start_of_week','1','yes');
INSERT INTO `wp_options` VALUES (8,'use_balanceTags','0','yes');
INSERT INTO `wp_options` VALUES (9,'use_smilies','1','yes');
INSERT INTO `wp_options` VALUES (10,'require_name_email','1','yes');
INSERT INTO `wp_options` VALUES (11,'comments_notify','1','yes');
INSERT INTO `wp_options` VALUES (12,'posts_per_rss','10','yes');
INSERT INTO `wp_options` VALUES (13,'rss_use_excerpt','0','yes');
INSERT INTO `wp_options` VALUES (14,'mailserver_url','mail.example.com','yes');
INSERT INTO `wp_options` VALUES (15,'mailserver_login','login@example.com','yes');
INSERT INTO `wp_options` VALUES (16,'mailserver_pass','password','yes');
INSERT INTO `wp_options` VALUES (17,'mailserver_port','110','yes');
INSERT INTO `wp_options` VALUES (18,'default_category','3','yes');
INSERT INTO `wp_options` VALUES (19,'default_comment_status','open','yes');
INSERT INTO `wp_options` VALUES (20,'default_ping_status','open','yes');
INSERT INTO `wp_options` VALUES (21,'default_pingback_flag','1','yes');
INSERT INTO `wp_options` VALUES (22,'posts_per_page','10','yes');
INSERT INTO `wp_options` VALUES (23,'date_format','Y年n月j日','yes');
INSERT INTO `wp_options` VALUES (24,'time_format','ag:i','yes');
INSERT INTO `wp_options` VALUES (25,'links_updated_date_format','Y年n月j日ag:i','yes');
INSERT INTO `wp_options` VALUES (26,'comment_moderation','0','yes');
INSERT INTO `wp_options` VALUES (27,'moderation_notify','1','yes');
INSERT INTO `wp_options` VALUES (28,'permalink_structure','','yes');
INSERT INTO `wp_options` VALUES (30,'hack_file','0','yes');
INSERT INTO `wp_options` VALUES (31,'blog_charset','UTF-8','yes');
INSERT INTO `wp_options` VALUES (32,'moderation_keys','','no');
INSERT INTO `wp_options` VALUES (33,'active_plugins','a:6:{i:0;s:45:\"crayon-syntax-highlighter/crayon_wp.class.php\";i:1;s:45:\"disable-google-fonts/disable-google-fonts.php\";i:2;s:32:\"gif-animation-preview/plugin.php\";i:3;s:19:\"jetpack/jetpack.php\";i:4;s:25:\"tablepress/tablepress.php\";i:6;s:31:\"wp-quicklatex/wp-quicklatex.php\";}','yes');
INSERT INTO `wp_options` VALUES (34,'category_base','','yes');
INSERT INTO `wp_options` VALUES (35,'ping_sites','http://rpc.pingomatic.com/','yes');
INSERT INTO `wp_options` VALUES (37,'comment_max_links','2','yes');
INSERT INTO `wp_options` VALUES (38,'gmt_offset','','yes');
INSERT INTO `wp_options` VALUES (39,'default_email_category','1','yes');
INSERT INTO `wp_options` VALUES (40,'recently_edited','a:5:{i:0;s:86:\"/yjdata/www/wordpress/wp-content/plugins/crayon-syntax-highlighter/crayon_wp.class.php\";i:1;s:84:\"/yjdata/www/wordpress/wp-content/plugins/easy-code-placement/easy-code-placement.php\";i:2;s:60:\"/yjdata/www/wordpress/wp-content/plugins/akismet/akismet.php\";i:3;s:60:\"/yjdata/www/wordpress/wp-content/plugins/jetpack/jetpack.php\";i:4;s:0:\"\";}','no');
INSERT INTO `wp_options` VALUES (41,'template','twentyfifteen','yes');
INSERT INTO `wp_options` VALUES (42,'stylesheet','twentyfifteen','yes');
INSERT INTO `wp_options` VALUES (43,'comment_whitelist','1','yes');
INSERT INTO `wp_options` VALUES (44,'blacklist_keys','','no');
INSERT INTO `wp_options` VALUES (45,'comment_registration','0','yes');
INSERT INTO `wp_options` VALUES (46,'html_type','text/html','yes');
INSERT INTO `wp_options` VALUES (47,'use_trackback','0','yes');
INSERT INTO `wp_options` VALUES (48,'default_role','subscriber','yes');
INSERT INTO `wp_options` VALUES (49,'db_version','35700','yes');
INSERT INTO `wp_options` VALUES (50,'uploads_use_yearmonth_folders','1','yes');
INSERT INTO `wp_options` VALUES (51,'upload_path','','yes');
INSERT INTO `wp_options` VALUES (52,'blog_public','1','yes');
INSERT INTO `wp_options` VALUES (53,'default_link_category','0','yes');
INSERT INTO `wp_options` VALUES (54,'show_on_front','posts','yes');
INSERT INTO `wp_options` VALUES (55,'tag_base','','yes');
INSERT INTO `wp_options` VALUES (56,'show_avatars','1','yes');
INSERT INTO `wp_options` VALUES (57,'avatar_rating','G','yes');
INSERT INTO `wp_options` VALUES (58,'upload_url_path','','yes');
INSERT INTO `wp_options` VALUES (59,'thumbnail_size_w','150','yes');
INSERT INTO `wp_options` VALUES (60,'thumbnail_size_h','150','yes');
INSERT INTO `wp_options` VALUES (61,'thumbnail_crop','1','yes');
INSERT INTO `wp_options` VALUES (62,'medium_size_w','300','yes');
INSERT INTO `wp_options` VALUES (63,'medium_size_h','300','yes');
INSERT INTO `wp_options` VALUES (64,'avatar_default','mystery','yes');
INSERT INTO `wp_options` VALUES (65,'large_size_w','1024','yes');
INSERT INTO `wp_options` VALUES (66,'large_size_h','1024','yes');
INSERT INTO `wp_options` VALUES (67,'image_default_link_type','file','yes');
INSERT INTO `wp_options` VALUES (68,'image_default_size','','yes');
INSERT INTO `wp_options` VALUES (69,'image_default_align','','yes');
INSERT INTO `wp_options` VALUES (70,'close_comments_for_old_posts','0','yes');
INSERT INTO `wp_options` VALUES (71,'close_comments_days_old','14','yes');
INSERT INTO `wp_options` VALUES (72,'thread_comments','1','yes');
INSERT INTO `wp_options` VALUES (73,'thread_comments_depth','5','yes');
INSERT INTO `wp_options` VALUES (74,'page_comments','0','yes');
INSERT INTO `wp_options` VALUES (75,'comments_per_page','50','yes');
INSERT INTO `wp_options` VALUES (76,'default_comments_page','newest','yes');
INSERT INTO `wp_options` VALUES (77,'comment_order','asc','yes');
INSERT INTO `wp_options` VALUES (78,'sticky_posts','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (79,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:1;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (80,'widget_text','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (81,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (82,'uninstall_plugins','a:5:{s:27:\"wp-super-cache/wp-cache.php\";s:22:\"wpsupercache_uninstall\";s:27:\"wp-markdown/wp-markdown.php\";a:2:{i:0;s:18:\"WordPress_Markdown\";i:1;s:9:\"uninstall\";}s:31:\"wp-quicklatex/wp-quicklatex.php\";s:20:\"uninstall_quicklatex\";s:43:\"easy-code-placement/easy-code-placement.php\";s:17:\"ecp_net_uninstall\";s:32:\"gif-animation-preview/plugin.php\";s:15:\"gap_del_options\";}','no');
INSERT INTO `wp_options` VALUES (83,'timezone_string','Asia/Shanghai','yes');
INSERT INTO `wp_options` VALUES (84,'page_for_posts','0','yes');
INSERT INTO `wp_options` VALUES (85,'page_on_front','0','yes');
INSERT INTO `wp_options` VALUES (86,'default_post_format','0','yes');
INSERT INTO `wp_options` VALUES (87,'link_manager_enabled','0','yes');
INSERT INTO `wp_options` VALUES (88,'finished_splitting_shared_terms','1','yes');
INSERT INTO `wp_options` VALUES (89,'initial_db_version','33056','yes');
INSERT INTO `wp_options` VALUES (90,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:72:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;s:22:\"tablepress_edit_tables\";b:1;s:24:\"tablepress_delete_tables\";b:1;s:22:\"tablepress_list_tables\";b:1;s:21:\"tablepress_add_tables\";b:1;s:22:\"tablepress_copy_tables\";b:1;s:24:\"tablepress_import_tables\";b:1;s:24:\"tablepress_export_tables\";b:1;s:32:\"tablepress_access_options_screen\";b:1;s:30:\"tablepress_access_about_screen\";b:1;s:29:\"tablepress_import_tables_wptr\";b:1;s:23:\"tablepress_edit_options\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:43:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:22:\"tablepress_edit_tables\";b:1;s:24:\"tablepress_delete_tables\";b:1;s:22:\"tablepress_list_tables\";b:1;s:21:\"tablepress_add_tables\";b:1;s:22:\"tablepress_copy_tables\";b:1;s:24:\"tablepress_import_tables\";b:1;s:24:\"tablepress_export_tables\";b:1;s:32:\"tablepress_access_options_screen\";b:1;s:30:\"tablepress_access_about_screen\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:19:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:22:\"tablepress_edit_tables\";b:1;s:24:\"tablepress_delete_tables\";b:1;s:22:\"tablepress_list_tables\";b:1;s:21:\"tablepress_add_tables\";b:1;s:22:\"tablepress_copy_tables\";b:1;s:24:\"tablepress_import_tables\";b:1;s:24:\"tablepress_export_tables\";b:1;s:32:\"tablepress_access_options_screen\";b:1;s:30:\"tablepress_access_about_screen\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes');
INSERT INTO `wp_options` VALUES (91,'WPLANG','zh_CN','yes');
INSERT INTO `wp_options` VALUES (92,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (93,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (94,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (95,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (96,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:6:\"订阅\";}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (97,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:1:{i:0;s:11:\"tag_cloud-3\";}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:13:\"array_version\";i:3;}','yes');
INSERT INTO `wp_options` VALUES (6906,'_site_transient_timeout_theme_roots','1458054677','yes');
INSERT INTO `wp_options` VALUES (6907,'_site_transient_theme_roots','a:5:{s:5:\"bulan\";s:7:\"/themes\";s:13:\"twentyfifteen\";s:7:\"/themes\";s:14:\"twentyfourteen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";s:14:\"twentythirteen\";s:7:\"/themes\";}','yes');
INSERT INTO `wp_options` VALUES (157,'ossdl_off_cdn_url','http://115.159.76.183','yes');
INSERT INTO `wp_options` VALUES (158,'ossdl_off_include_dirs','wp-content,wp-includes','yes');
INSERT INTO `wp_options` VALUES (159,'ossdl_off_exclude','.php','yes');
INSERT INTO `wp_options` VALUES (160,'ossdl_cname','','yes');
INSERT INTO `wp_options` VALUES (505,'_site_transient_wporg_theme_feature_list','a:4:{s:6:\"Colors\";a:15:{i:0;s:5:\"black\";i:1;s:4:\"blue\";i:2;s:5:\"brown\";i:3;s:4:\"gray\";i:4;s:5:\"green\";i:5;s:6:\"orange\";i:6;s:4:\"pink\";i:7;s:6:\"purple\";i:8;s:3:\"red\";i:9;s:6:\"silver\";i:10;s:3:\"tan\";i:11;s:5:\"white\";i:12;s:6:\"yellow\";i:13;s:4:\"dark\";i:14;s:5:\"light\";}s:6:\"Layout\";a:9:{i:0;s:12:\"fixed-layout\";i:1;s:12:\"fluid-layout\";i:2;s:17:\"responsive-layout\";i:3;s:10:\"one-column\";i:4;s:11:\"two-columns\";i:5;s:13:\"three-columns\";i:6;s:12:\"four-columns\";i:7;s:12:\"left-sidebar\";i:8;s:13:\"right-sidebar\";}s:8:\"Features\";a:20:{i:0;s:19:\"accessibility-ready\";i:1;s:8:\"blavatar\";i:2;s:10:\"buddypress\";i:3;s:17:\"custom-background\";i:4;s:13:\"custom-colors\";i:5;s:13:\"custom-header\";i:6;s:11:\"custom-menu\";i:7;s:12:\"editor-style\";i:8;s:21:\"featured-image-header\";i:9;s:15:\"featured-images\";i:10;s:15:\"flexible-header\";i:11;s:20:\"front-page-post-form\";i:12;s:19:\"full-width-template\";i:13;s:12:\"microformats\";i:14;s:12:\"post-formats\";i:15;s:20:\"rtl-language-support\";i:16;s:11:\"sticky-post\";i:17;s:13:\"theme-options\";i:18;s:17:\"threaded-comments\";i:19;s:17:\"translation-ready\";}s:7:\"Subject\";a:3:{i:0;s:7:\"holiday\";i:1;s:13:\"photoblogging\";i:2;s:8:\"seasonal\";}}','yes');
INSERT INTO `wp_options` VALUES (504,'_site_transient_timeout_wporg_theme_feature_list','1456764140','yes');
INSERT INTO `wp_options` VALUES (148,'can_compress_scripts','1','yes');
INSERT INTO `wp_options` VALUES (119,'auto_core_update_notified','a:4:{s:4:\"type\";s:7:\"success\";s:5:\"email\";s:19:\"admin@localhost.com\";s:7:\"version\";s:5:\"4.3.3\";s:9:\"timestamp\";i:1455944438;}','yes');
INSERT INTO `wp_options` VALUES (100,'cron','a:8:{i:1458057180;a:1:{s:40:\"jetpack_display_posts_widget_cron_update\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"minutes_10\";s:4:\"args\";a:0:{}s:8:\"interval\";i:600;}}}i:1458059580;a:1:{s:20:\"jetpack_clean_nonces\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1458061214;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1458104446;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1458106405;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1458130075;a:1:{s:24:\"jp_purge_transients_cron\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1458138785;a:1:{s:20:\"jetpack_v2_heartbeat\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes');
INSERT INTO `wp_options` VALUES (113,'_transient_random_seed','9f9866d83f6ea77e40651047c8eb0f00','yes');
INSERT INTO `wp_options` VALUES (115,'_site_transient_timeout_browser_52af006d978fd28b6940ecc9febb05d3','1456549235','yes');
INSERT INTO `wp_options` VALUES (116,'_site_transient_browser_52af006d978fd28b6940ecc9febb05d3','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"49.0.2623.47\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes');
INSERT INTO `wp_options` VALUES (6922,'_transient_feed_b9388c83948825c1edaef0d856b7b109','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:117:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"WordPress Plugins » View: Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://wordpress.org/plugins/browse/popular/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"WordPress Plugins » View: Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 15 Mar 2016 14:32:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:30:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Google XML Sitemaps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wordpress.org/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"132@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Arne Brachhold\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WordPress Importer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wordpress-importer/#post-18101\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 17:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"18101@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Brian Colinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Really Simple CAPTCHA\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"https://wordpress.org/plugins/really-simple-captcha/#post-9542\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 09 Mar 2009 02:17:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"9542@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:138:\"Really Simple CAPTCHA is a CAPTCHA module intended to be called from other plugins. It is originally created for my Contact Form 7 plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Hello Dolly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://wordpress.org/plugins/hello-dolly/#post-5790\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 29 May 2008 22:11:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"5790@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"This is not just a plugin, it symbolizes the hope and enthusiasm of an entire generation summed up in two words sung most famously by Louis Armstrong.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Contact Form 7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2141@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WP Super Cache\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/wp-super-cache/#post-2572\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Nov 2007 11:40:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2572@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"A very fast caching engine for WordPress that produces static html files.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Donncha O Caoimh\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Yoast SEO\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://wordpress.org/plugins/wordpress-seo/#post-8321\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Jan 2009 20:34:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"8321@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:114:\"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using Yoast SEO plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Google Analytics by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wordpress.org/plugins/google-analytics-for-wordpress/#post-2316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2007 12:15:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2316@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:124:\"Track your WordPress site easily with the latest tracking codes and lots added data for search result pages and error pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Akismet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"15@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet Web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"All in One SEO Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"753@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"The most downloaded plugin for WordPress (almost 30 million downloads). Use All in One SEO Pack to automatically optimize your site for Search Engines\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WooCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/plugins/woocommerce/#post-29860\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Sep 2011 08:13:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29860@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"WooThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Jetpack by WordPress.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://wordpress.org/plugins/jetpack/#post-23862\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Jan 2011 02:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"23862@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"Increase your traffic, view your stats, speed up your site, and protect yourself from hackers with Jetpack.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Tim Moore\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"TinyMCE Advanced\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://wordpress.org/plugins/tinymce-advanced/#post-2082\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Jun 2007 15:00:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2082@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Enables the advanced features of TinyMCE, the WordPress WYSIWYG editor.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Andrew Ozz\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Advanced Custom Fields\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wordpress.org/plugins/advanced-custom-fields/#post-25254\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 17 Mar 2011 04:07:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"25254@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"Customise WordPress with powerful, professional and intuitive fields\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"elliotcondon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"NextGEN Gallery\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/nextgen-gallery/#post-1169\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 23 Apr 2007 20:08:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"1169@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 13 million downloads.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Alex Rabe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Duplicate Post\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/duplicate-post/#post-2646\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 05 Dec 2007 17:40:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2646@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Clone posts and pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Lopo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Regenerate Thumbnails\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"https://wordpress.org/plugins/regenerate-thumbnails/#post-6743\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 23 Aug 2008 14:38:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"6743@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"Allows you to regenerate your thumbnails after changing the thumbnail sizes.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Alex Mills (Viper007Bond)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Wordfence Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wordfence/#post-29832\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 04 Sep 2011 03:13:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29832@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:138:\"The Wordfence WordPress security plugin provides free enterprise-class WordPress security, protecting your website from hacks and malware.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Wordfence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WP-PageNavi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wp-pagenavi/#post-363\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 23:17:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"363@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"Adds a more advanced paging navigation interface.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Lester Chan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"W3 Total Cache\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/w3-total-cache/#post-12073\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 29 Jul 2009 18:46:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"12073@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:132:\"Easy Web Performance Optimization (WPO) using caching: browser, page, object, database, minify and content delivery network support.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Frederick Townes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Disable Comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wordpress.org/plugins/disable-comments/#post-26907\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 27 May 2011 04:42:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"26907@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:134:\"Allows administrators to globally disable comments on their site. Comments can be disabled according to post type. Multisite friendly.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Samir Shah\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Page Builder by SiteOrigin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/siteorigin-panels/#post-51888\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 10:36:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"51888@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"Build responsive page layouts using the widgets you know and love using this simple drag and drop page builder.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Greg Priday\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WP Multibyte Patch\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wp-multibyte-patch/#post-28395\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 14 Jul 2011 12:22:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"28395@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Multibyte functionality enhancement for the WordPress Japanese package.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"plugin-master\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Black Studio TinyMCE Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/plugins/black-studio-tinymce-widget/#post-31973\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 10 Nov 2011 15:06:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"31973@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"The visual editor widget for Wordpress.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Marco Chiesi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"Google Analytics Dashboard for WP\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"https://wordpress.org/plugins/google-analytics-dashboard-for-wp/#post-50539\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 10 Mar 2013 17:07:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"50539@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:127:\"Displays Google Analytics reports in your WordPress Dashboard. Inserts the latest Google Analytics tracking code in your pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Alin Marcu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"iThemes Security (formerly Better WP Security)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/better-wp-security/#post-21738\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 22 Oct 2010 22:06:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"21738@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"Protect your WordPress site by hiding vital areas of your site, protecting access to important files, preventing brute-force login attempts, detecting\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"iThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Clef Two-Factor Authentication\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://wordpress.org/plugins/wpclef/#post-47509\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 Dec 2012 01:25:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"47509@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:138:\"Modern two-factor that people love to use: strong authentication without passwords or tokens; single sign on/off; magical user experience.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Dave Ross\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"UpdraftPlus Backup and Restoration\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/plugins/updraftplus/#post-38058\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 21 May 2012 15:14:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"38058@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:148:\"Backup and restoration made easy. Complete backups; manual or scheduled (backup to S3, Dropbox, Google Drive, Rackspace, FTP, SFTP, email + others).\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"David Anderson\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Duplicator\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://wordpress.org/plugins/duplicator/#post-26607\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 16 May 2011 12:15:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"26607@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"Duplicate, clone, backup, move and transfer an entire site from one location to another.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Cory Lamle\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Meta Slider\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/ml-slider/#post-49521\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 14 Feb 2013 16:56:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"49521@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:145:\"Easy to use WordPress slider plugin. Create SEO optimised responsive slideshows with Nivo Slider, Flex Slider, Coin Slider and Responsive Slides.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Matcha Labs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:46:\"https://wordpress.org/plugins/rss/view/popular\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:12:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 15 Mar 2016 14:49:30 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:25:\"strict-transport-security\";s:11:\"max-age=360\";s:7:\"expires\";s:29:\"Tue, 15 Mar 2016 15:07:45 GMT\";s:13:\"cache-control\";s:0:\"\";s:6:\"pragma\";s:0:\"\";s:13:\"last-modified\";s:31:\"Tue, 15 Mar 2016 14:32:45 +0000\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 249\";}s:5:\"build\";s:14:\"20130911040210\";}','no');
INSERT INTO `wp_options` VALUES (5218,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1458018099;s:7:\"checked\";a:5:{s:5:\"bulan\";s:5:\"1.0.7\";s:13:\"twentyfifteen\";s:3:\"1.4\";s:14:\"twentyfourteen\";s:3:\"1.6\";s:13:\"twentysixteen\";s:3:\"1.1\";s:14:\"twentythirteen\";s:3:\"1.7\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','yes');
INSERT INTO `wp_options` VALUES (1910,'wp-short-pixel-query-id-stop','233','yes');
INSERT INTO `wp_options` VALUES (1911,'wp-short-pixel-query-id-start','233','yes');
INSERT INTO `wp_options` VALUES (1912,'wp-short-pixel-verifiedKey','1','yes');
INSERT INTO `wp_options` VALUES (1914,'wp-short-pixel-activation-date','1457097513','yes');
INSERT INTO `wp_options` VALUES (1915,'wp-short-pixel-apiKey','yyOMZnFIfpdBAm3hFM0x','yes');
INSERT INTO `wp_options` VALUES (1916,'wp-short-pixel-compression','1','yes');
INSERT INTO `wp_options` VALUES (1917,'wp-short-process_thumbnails','1','yes');
INSERT INTO `wp_options` VALUES (1918,'wp-short-pixel_cmyk2rgb','1','yes');
INSERT INTO `wp_options` VALUES (1919,'wp-short-backup_images','1','yes');
INSERT INTO `wp_options` VALUES (1920,'wp-short-pixel-fileCount','95','yes');
INSERT INTO `wp_options` VALUES (1921,'wp-short-pixel-thumbnail-count','71','yes');
INSERT INTO `wp_options` VALUES (1922,'wp-short-pixel-files-under-5-percent','0','yes');
INSERT INTO `wp_options` VALUES (1923,'wp-short-pixel-savedSpace','4109435','yes');
INSERT INTO `wp_options` VALUES (1924,'wp-short-pixel-api-retries','0','yes');
INSERT INTO `wp_options` VALUES (1925,'wp-short-pixel-quota-exceeded','1','yes');
INSERT INTO `wp_options` VALUES (1926,'wp-short-pixel-total-original','6776692','yes');
INSERT INTO `wp_options` VALUES (1927,'wp-short-pixel-total-optimized','2667257','yes');
INSERT INTO `wp_options` VALUES (1928,'wp-short-pixel-protocol','https','yes');
INSERT INTO `wp_options` VALUES (1929,'wp-short-pixel-resize-images','0','yes');
INSERT INTO `wp_options` VALUES (1930,'wp-short-pixel-resize-width','0','yes');
INSERT INTO `wp_options` VALUES (1931,'wp-short-pixel-resize-height','0','yes');
INSERT INTO `wp_options` VALUES (1940,'wp-short-pixel-view-mode','','yes');
INSERT INTO `wp_options` VALUES (1942,'wp-short-pixel-dismissed-notices','a:1:{s:2:\"2h\";b:1;}','yes');
INSERT INTO `wp_options` VALUES (6668,'_transient_timeout_jpp_headers_updated_recently','1458091650','no');
INSERT INTO `wp_options` VALUES (6669,'_transient_jpp_headers_updated_recently','1','no');
INSERT INTO `wp_options` VALUES (6912,'_transient_twentyfifteen_categories','2','yes');
INSERT INTO `wp_options` VALUES (6911,'_transient_is_multi_author','0','yes');
INSERT INTO `wp_options` VALUES (6885,'_transient_timeout_jpp_li_db38b89c098bc8bad4cfa2874a8340b4','1458053777','no');
INSERT INTO `wp_options` VALUES (6886,'_transient_jpp_li_db38b89c098bc8bad4cfa2874a8340b4','a:5:{s:6:\"status\";s:2:\"ok\";s:3:\"msg\";s:52:\"No current blocks on this IP address (68.180.231.57)\";s:17:\"seconds_remaining\";i:3600;s:16:\"blocked_attempts\";s:2:\"40\";s:6:\"expire\";i:1458053777;}','no');
INSERT INTO `wp_options` VALUES (6915,'widget_widget_twentyfourteen_ephemera','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (6916,'_transient_twentyfourteen_category_count','9','yes');
INSERT INTO `wp_options` VALUES (430,'_site_transient_timeout_browser_a9eb3ced984d8de5a64de9f71d3bf813','1457018339','yes');
INSERT INTO `wp_options` VALUES (431,'_site_transient_browser_a9eb3ced984d8de5a64de9f71d3bf813','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"49.0.2623.63\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes');
INSERT INTO `wp_options` VALUES (6649,'_transient_timeout_tablepress_c3b5188a653b5ab71ce17dffbbadfd2a','1458088645','no');
INSERT INTO `wp_options` VALUES (6650,'_transient_tablepress_c3b5188a653b5ab71ce17dffbbadfd2a','\n<table id=\"tablepress-1\" class=\"tablepress tablepress-id-1\">\n<thead>\n<tr class=\"row-1 odd\">\n	<th class=\"column-1\">属性</th><th class=\"column-2\">作用描述</th>\n</tr>\n</thead>\n<tbody class=\"row-hover\">\n<tr class=\"row-2 even\">\n	<td class=\"column-1\">大小（Size）</td><td class=\"column-2\">渲染纹理 (Render Texture) 的大小（以像素为单位）。只能选择二的幂值大小。</td>\n</tr>\n<tr class=\"row-3 odd\">\n	<td class=\"column-1\">抗锯齿（Anti-Aliasing）</td><td class=\"column-2\">抗锯齿的等级，可以选择：无、2个、4个或者8个临近像素采样混合。</td>\n</tr>\n<tr class=\"row-4 even\">\n	<td class=\"column-1\">深度缓冲区（Depth Buffer）</td><td class=\"column-2\">深度缓冲区的类型，可以选在无深度缓冲、或者16位、24位深度缓冲。</td>\n</tr>\n<tr class=\"row-5 odd\">\n	<td class=\"column-1\">循环模式（Wrap Mode）</td><td class=\"column-2\">当平铺时，纹理是被拉伸还是重复。</td>\n</tr>\n<tr class=\"row-6 even\">\n	<td class=\"column-1\">过滤模式（Filter Mode）</td><td class=\"column-2\">纹理经三维变换拉伸时的过滤方式。</td>\n</tr>\n<tr class=\"row-7 odd\">\n	<td class=\"column-1\">不过滤模式（No Filtering）</td><td class=\"column-2\">纹理在近距离变成块状。</td>\n</tr>\n<tr class=\"row-8 even\">\n	<td class=\"column-1\">双线性过滤模式（Bilinear）</td><td class=\"column-2\">纹理在近距离变得模糊。</td>\n</tr>\n<tr class=\"row-9 odd\">\n	<td class=\"column-1\">三线性过滤模式（Trilinear）</td><td class=\"column-2\">类似双线性，但纹理也在不同的纹理层次(mip levels)之间变模糊。</td>\n</tr>\n<tr class=\"row-10 even\">\n	<td class=\"column-1\">各向异性等级（Aniso Level）</td><td class=\"column-2\">在一个陡峭的角度观看纹理时提高纹理的质量。适用于地板和地面纹理。</td>\n</tr>\n</tbody>\n</table>\n','no');
INSERT INTO `wp_options` VALUES (437,'theme_mods_bulan','a:3:{i:0;b:0;s:13:\"bulan-twitter\";s:31:\"https://twitter.com/happyjiahan\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1456753628;s:4:\"data\";a:2:{s:19:\"wp_inactive_widgets\";a:4:{i:0;s:10:\"archives-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:11:\"tag_cloud-3\";}s:7:\"primary\";a:4:{i:0;s:8:\"search-2\";i:1;s:12:\"categories-2\";i:2;s:6:\"meta-2\";i:3;s:14:\"bulan-social-3\";}}}}','yes');
INSERT INTO `wp_options` VALUES (438,'widget_bulan-recent','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (439,'widget_bulan-social','a:2:{s:12:\"_multiwidget\";i:1;i:3;a:8:{s:5:\"title\";s:9:\"Follow us\";s:8:\"facebook\";s:0:\"\";s:7:\"twitter\";s:31:\"https://twitter.com/happyjiahan\";s:5:\"gplus\";s:0:\"\";s:9:\"pinterest\";s:0:\"\";s:8:\"linkedin\";s:0:\"\";s:9:\"instagram\";s:0:\"\";s:3:\"rss\";s:0:\"\";}}','yes');
INSERT INTO `wp_options` VALUES (6921,'_transient_timeout_feed_b9388c83948825c1edaef0d856b7b109','1458096571','no');
INSERT INTO `wp_options` VALUES (2676,'wp-short-pixel-bulk-last-status','a:3:{s:6:\"Status\";i:-3;s:7:\"Message\";s:15:\"Quota exceeded.\";s:7:\"ImageID\";s:3:\"107\";}','yes');
INSERT INTO `wp_options` VALUES (2675,'wp-short-pixel-keep-exif','0','yes');
INSERT INTO `wp_options` VALUES (2679,'wp-short-pixel-bulk-ever-ran','1','yes');
INSERT INTO `wp_options` VALUES (2683,'wp-short-pixel-averageCompression','0','yes');
INSERT INTO `wp_options` VALUES (2684,'wp-short-pixel-failed-imgs','','yes');
INSERT INTO `wp_options` VALUES (2703,'gap-type','2','yes');
INSERT INTO `wp_options` VALUES (2704,'gap-mobile','1','yes');
INSERT INTO `wp_options` VALUES (2705,'gap-effect','1','yes');
INSERT INTO `wp_options` VALUES (2706,'gap-hover','1','yes');
INSERT INTO `wp_options` VALUES (2707,'GAP_HOVER_METADATA_NAME','0','yes');
INSERT INTO `wp_options` VALUES (2708,'gap-thumbnail','1','yes');
INSERT INTO `wp_options` VALUES (6923,'_transient_timeout_feed_mod_b9388c83948825c1edaef0d856b7b109','1458096571','no');
INSERT INTO `wp_options` VALUES (6924,'_transient_feed_mod_b9388c83948825c1edaef0d856b7b109','1458053371','no');
INSERT INTO `wp_options` VALUES (540,'latex_imgcss','vertical-align: middle; border: none;','yes');
INSERT INTO `wp_options` VALUES (541,'latex_img_server','http://chart.apis.google.com/chart?cht=tx&chl=','yes');
INSERT INTO `wp_options` VALUES (542,'mathjax_server','http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML','yes');
INSERT INTO `wp_options` VALUES (543,'latex_cache_path','/yjdata/www/wordpress/wp-content/plugins/latex/cache/','yes');
INSERT INTO `wp_options` VALUES (544,'latex_turnoff','1','yes');
INSERT INTO `wp_options` VALUES (545,'latex_mathjax_config','<script type=\"text/x-mathjax-config\"> \\n        MathJax.Hub.Config({ \\n                TeX: {equationNumbers: {autoNumber: [\"AMS\"], useLabelIds: true}}, \\n                \"HTML-CSS\": {linebreaks: {automatic: true}}, \\n                SVG: {linebreaks: {automatic: true}}\\n        }); \\n</script>','yes');
INSERT INTO `wp_options` VALUES (799,'jetpack_options','a:10:{s:7:\"version\";s:16:\"3.9.4:1457706661\";s:11:\"old_version\";s:16:\"3.9.2:1456842716\";s:28:\"fallback_no_verify_ssl_certs\";i:0;s:9:\"time_diff\";i:0;s:2:\"id\";i:107758049;s:6:\"public\";i:0;s:9:\"jumpstart\";s:19:\"jumpstart_activated\";s:11:\"master_user\";i:1;s:14:\"last_heartbeat\";i:1458052577;s:9:\"hide_jitm\";a:1:{s:6:\"editor\";s:4:\"hide\";}}','yes');
INSERT INTO `wp_options` VALUES (800,'jetpack_activated','1','yes');
INSERT INTO `wp_options` VALUES (5217,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1458018096;s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:6:{s:45:\"crayon-syntax-highlighter/crayon_wp.class.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"24611\";s:4:\"slug\";s:25:\"crayon-syntax-highlighter\";s:6:\"plugin\";s:45:\"crayon-syntax-highlighter/crayon_wp.class.php\";s:11:\"new_version\";s:5:\"2.8.0\";s:3:\"url\";s:56:\"https://wordpress.org/plugins/crayon-syntax-highlighter/\";s:7:\"package\";s:68:\"https://downloads.wordpress.org/plugin/crayon-syntax-highlighter.zip\";}s:45:\"disable-google-fonts/disable-google-fonts.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"46033\";s:4:\"slug\";s:20:\"disable-google-fonts\";s:6:\"plugin\";s:45:\"disable-google-fonts/disable-google-fonts.php\";s:11:\"new_version\";s:3:\"1.2\";s:3:\"url\";s:51:\"https://wordpress.org/plugins/disable-google-fonts/\";s:7:\"package\";s:67:\"https://downloads.wordpress.org/plugin/disable-google-fonts.1.2.zip\";}s:32:\"gif-animation-preview/plugin.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"43368\";s:4:\"slug\";s:21:\"gif-animation-preview\";s:6:\"plugin\";s:32:\"gif-animation-preview/plugin.php\";s:11:\"new_version\";s:6:\"1.10.3\";s:3:\"url\";s:52:\"https://wordpress.org/plugins/gif-animation-preview/\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/plugin/gif-animation-preview.1.10.3.zip\";}s:19:\"jetpack/jetpack.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"20101\";s:4:\"slug\";s:7:\"jetpack\";s:6:\"plugin\";s:19:\"jetpack/jetpack.php\";s:11:\"new_version\";s:5:\"3.9.4\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/jetpack/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/jetpack.3.9.4.zip\";}s:25:\"tablepress/tablepress.php\";O:8:\"stdClass\":7:{s:2:\"id\";s:5:\"32125\";s:4:\"slug\";s:10:\"tablepress\";s:6:\"plugin\";s:25:\"tablepress/tablepress.php\";s:11:\"new_version\";s:3:\"1.7\";s:3:\"url\";s:41:\"https://wordpress.org/plugins/tablepress/\";s:7:\"package\";s:57:\"https://downloads.wordpress.org/plugin/tablepress.1.7.zip\";s:14:\"upgrade_notice\";s:92:\"This update is a stability, maintenance, and compatibility release. Updating is recommended.\";}s:31:\"wp-quicklatex/wp-quicklatex.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:4:\"8068\";s:4:\"slug\";s:13:\"wp-quicklatex\";s:6:\"plugin\";s:31:\"wp-quicklatex/wp-quicklatex.php\";s:11:\"new_version\";s:5:\"3.8.4\";s:3:\"url\";s:44:\"https://wordpress.org/plugins/wp-quicklatex/\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/plugin/wp-quicklatex.3.8.4.zip\";}}}','yes');
INSERT INTO `wp_options` VALUES (802,'jetpack_active_modules','a:29:{i:0;s:18:\"after-the-deadline\";i:1;s:12:\"contact-form\";i:2;s:20:\"custom-content-types\";i:3;s:10:\"custom-css\";i:4;s:21:\"enhanced-distribution\";i:5;s:19:\"gravatar-hovercards\";i:6;s:8:\"json-api\";i:8;s:5:\"notes\";i:9;s:10:\"omnisearch\";i:10;s:13:\"post-by-email\";i:11;s:7:\"protect\";i:12;s:9:\"publicize\";i:13;s:10:\"sharedaddy\";i:14;s:10:\"shortcodes\";i:15;s:10:\"shortlinks\";i:16;s:8:\"sitemaps\";i:17;s:5:\"stats\";i:18;s:13:\"subscriptions\";i:20;s:18:\"verification-tools\";i:21;s:17:\"widget-visibility\";i:22;s:7:\"widgets\";i:23;s:6:\"manage\";i:24;s:8:\"carousel\";i:26;s:13:\"related-posts\";i:27;s:3:\"sso\";i:28;s:5:\"latex\";i:29;s:8:\"markdown\";i:30;s:6:\"photon\";i:31;s:7:\"monitor\";}','yes');
INSERT INTO `wp_options` VALUES (560,'jetpack_file_data','a:1:{s:5:\"3.9.4\";a:49:{s:32:\"31e5b9ae08b62c2b0cd8a7792242298b\";a:14:{s:4:\"name\";s:20:\"Spelling and Grammar\";s:11:\"description\";s:89:\"Check your spelling, style, and grammar with the After the Deadline proofreading service.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"6\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:115:\"after the deadline, afterthedeadline, spell, spellchecker, spelling, grammar, proofreading, style, language, cliche\";}s:32:\"3f41b2d629265b5de8108b463abbe8e2\";a:14:{s:4:\"name\";s:8:\"Carousel\";s:11:\"description\";s:63:\"Transform standard image galleries into full-screen slideshows.\";s:14:\"jumpstart_desc\";s:79:\"Brings your photos and images to life as full-size, easily navigable galleries.\";s:4:\"sort\";s:2:\"22\";s:20:\"recommendation_order\";s:2:\"12\";s:10:\"introduced\";s:3:\"1.5\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:17:\"Photos and Videos\";s:7:\"feature\";s:9:\"Jumpstart\";s:25:\"additional_search_queries\";s:80:\"gallery, carousel, diaporama, slideshow, images, lightbox, exif, metadata, image\";}s:32:\"c6ebb418dde302de09600a6025370583\";a:14:{s:4:\"name\";s:8:\"Comments\";s:11:\"description\";s:79:\"Let readers comment with WordPress.com, Twitter, Facebook, or Google+ accounts.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"20\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:53:\"comments, comment, facebook, twitter, google+, social\";}s:32:\"836f9485669e1bbb02920cb474730df0\";a:14:{s:4:\"name\";s:12:\"Contact Form\";s:11:\"description\";s:44:\"Insert a contact form anywhere on your site.\";s:14:\"jumpstart_desc\";s:111:\"Adds a button to your post and page editors, allowing you to build simple forms to help visitors stay in touch.\";s:4:\"sort\";s:2:\"15\";s:20:\"recommendation_order\";s:2:\"14\";s:10:\"introduced\";s:3:\"1.3\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:5:\"Other\";s:7:\"feature\";s:9:\"Jumpstart\";s:25:\"additional_search_queries\";s:44:\"contact, form, grunion, feedback, submission\";}s:32:\"ea3970eebf8aac55fc3eca5dca0e0157\";a:14:{s:4:\"name\";s:20:\"Custom Content Types\";s:11:\"description\";s:92:\"Organize and display different types of content on your site, separate from posts and pages.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"34\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:72:\"cpt, custom post types, portfolio, portfolios, testimonial, testimonials\";}s:32:\"d2bb05ccad3d8789df40ca3abb97336c\";a:14:{s:4:\"name\";s:10:\"Custom CSS\";s:11:\"description\";s:57:\"Customize your site’s CSS without modifying your theme.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"2\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.7\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:10:\"Appearance\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:108:\"css, customize, custom, style, editor, less, sass, preprocessor, font, mobile, appearance, theme, stylesheet\";}s:32:\"a2064eec5b9c7e0d816af71dee7a715f\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"53a4ec755022ef3953699734c343da02\";a:14:{s:4:\"name\";s:21:\"Enhanced Distribution\";s:11:\"description\";s:27:\"Increase reach and traffic.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"5\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:6:\"Public\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:7:\"Traffic\";s:25:\"additional_search_queries\";s:54:\"google, seo, firehose, search, broadcast, broadcasting\";}s:32:\"72fecb67ee6704ba0a33e0225316ad06\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"d56e2886185a9eace719cc57d46770df\";a:14:{s:4:\"name\";s:19:\"Gravatar Hovercards\";s:11:\"description\";s:58:\"Enable pop-up business cards over commenters’ Gravatars.\";s:14:\"jumpstart_desc\";s:131:\"Let commenters link their profiles to their Gravatar accounts, making it easy for your visitors to learn more about your community.\";s:4:\"sort\";s:2:\"11\";s:20:\"recommendation_order\";s:2:\"13\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:18:\"Social, Appearance\";s:7:\"feature\";s:9:\"Jumpstart\";s:25:\"additional_search_queries\";s:20:\"gravatar, hovercards\";}s:32:\"e391e760617bd0e0736550e34a73d7fe\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:8:\"2.0.3 ??\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"2e345370766346c616b3c5046e817720\";a:14:{s:4:\"name\";s:15:\"Infinite Scroll\";s:11:\"description\";s:46:\"Add support for infinite scroll to your theme.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"26\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:10:\"Appearance\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:33:\"scroll, infinite, infinite scroll\";}s:32:\"bd69edbf134de5fae8fdcf2e70a45b56\";a:14:{s:4:\"name\";s:8:\"JSON API\";s:11:\"description\";s:69:\"Allow applications to securely access your content through the cloud.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"19\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:6:\"Public\";s:11:\"module_tags\";s:19:\"Writing, Developers\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:50:\"api, rest, develop, developers, json, klout, oauth\";}s:32:\"8110b7a4423aaa619dfa46b8843e10d1\";a:14:{s:4:\"name\";s:14:\"Beautiful Math\";s:11:\"description\";s:85:\"Use LaTeX markup language in posts and pages for complex equations and other geekery.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"12\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:47:\"latex, math, equation, equations, formula, code\";}s:32:\"fd7e85d3b4887fa6b6f997d6592c1f33\";a:14:{s:4:\"name\";s:5:\"Likes\";s:11:\"description\";s:70:\"Give visitors an easy way to show their appreciation for your content.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"23\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:26:\"like, likes, wordpress.com\";}s:32:\"c5dfef41fad5bcdcaae8e315e5cfc420\";a:14:{s:4:\"name\";s:6:\"Manage\";s:11:\"description\";s:76:\"Manage all your sites from a centralized place, https://wordpress.com/sites.\";s:14:\"jumpstart_desc\";s:151:\"Helps you remotely manage plugins, turn on automated updates, and more from <a href=\"https://wordpress.com/plugins/\" target=\"_blank\">wordpress.com</a>.\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:1:\"3\";s:10:\"introduced\";s:3:\"3.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:35:\"Centralized Management, Recommended\";s:7:\"feature\";s:22:\"Recommended, Jumpstart\";s:25:\"additional_search_queries\";s:26:\"manage, management, remote\";}s:32:\"fd6dc399b92bce76013427e3107c314f\";a:14:{s:4:\"name\";s:8:\"Markdown\";s:11:\"description\";s:51:\"Write posts or pages in plain-text Markdown syntax.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"31\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.8\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:12:\"md, markdown\";}s:32:\"c49a35b6482b0426cb07ad28ecf5d7df\";a:14:{s:4:\"name\";s:12:\"Mobile Theme\";s:11:\"description\";s:64:\"Optimize your site with a mobile-friendly theme for smartphones.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"21\";s:20:\"recommendation_order\";s:2:\"11\";s:10:\"introduced\";s:3:\"1.8\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:31:\"Appearance, Mobile, Recommended\";s:7:\"feature\";s:11:\"Recommended\";s:25:\"additional_search_queries\";s:24:\"mobile, theme, minileven\";}s:32:\"b42e38f6fafd2e4104ebe5bf39b4be47\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"771cfeeba0d3d23ec344d5e781fb0ae2\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"54f0661d27c814fc8bde39580181d939\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"46c4c413b5c72bbd3c3dbd14ff8f8adc\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"9ea52fa25783e5ceeb6bfaed3268e64e\";a:14:{s:4:\"name\";s:7:\"Monitor\";s:11:\"description\";s:25:\"Reports on site downtime.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"28\";s:20:\"recommendation_order\";s:2:\"10\";s:10:\"introduced\";s:3:\"2.6\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:11:\"Recommended\";s:7:\"feature\";s:33:\"Recommended, Performance-Security\";s:25:\"additional_search_queries\";s:37:\"monitor, uptime, downtime, monitoring\";}s:32:\"cfcaafd0fcad087899d715e0b877474d\";a:14:{s:4:\"name\";s:13:\"Notifications\";s:11:\"description\";s:84:\"Receive notification of site activity via the admin toolbar and your Mobile devices.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"13\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:5:\"Other\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:62:\"notification, notifications, toolbar, adminbar, push, comments\";}s:32:\"0d18bfa69bec61550c1d813ce64149b0\";a:14:{s:4:\"name\";s:10:\"Omnisearch\";s:11:\"description\";s:66:\"Search your entire database from a single field in your Dashboard.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"16\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.3\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:10:\"Developers\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:6:\"search\";}s:32:\"3f0a11e23118f0788d424b646a6d465f\";a:14:{s:4:\"name\";s:6:\"Photon\";s:11:\"description\";s:27:\"Speed up images and photos.\";s:14:\"jumpstart_desc\";s:141:\"Mirrors and serves your images from our free and fast image CDN, improving your site’s performance with no additional load on your servers.\";s:4:\"sort\";s:2:\"25\";s:20:\"recommendation_order\";s:1:\"1\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:42:\"Photos and Videos, Appearance, Recommended\";s:7:\"feature\";s:44:\"Recommended, Jumpstart, Performance-Security\";s:25:\"additional_search_queries\";s:38:\"photon, image, cdn, performance, speed\";}s:32:\"e37cfbcb72323fb1fe8255a2edb4d738\";a:14:{s:4:\"name\";s:13:\"Post by Email\";s:11:\"description\";s:58:\"Publish posts by email, using any device and email client.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"14\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:7:\"Writing\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:20:\"post by email, email\";}s:32:\"728290d131a480bfe7b9e405d7cd925f\";a:14:{s:4:\"name\";s:7:\"Protect\";s:11:\"description\";s:28:\"Prevent brute force attacks.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:1:\"4\";s:10:\"introduced\";s:3:\"3.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:11:\"Recommended\";s:7:\"feature\";s:33:\"Recommended, Performance-Security\";s:25:\"additional_search_queries\";s:65:\"security, secure, protection, botnet, brute force, protect, login\";}s:32:\"f9ce784babbbf4dcca99b8cd2ceb420c\";a:14:{s:4:\"name\";s:9:\"Publicize\";s:11:\"description\";s:30:\"Automatically promote content.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"10\";s:20:\"recommendation_order\";s:1:\"7\";s:10:\"introduced\";s:3:\"2.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:19:\"Social, Recommended\";s:7:\"feature\";s:20:\"Recommended, Traffic\";s:25:\"additional_search_queries\";s:107:\"facebook, twitter, google+, googleplus, google, path, tumblr, linkedin, social, tweet, connections, sharing\";}s:32:\"052c03877dd3d296a71531cb07ad939a\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"52edecb2a75222e75b2dce4356a4efce\";a:14:{s:4:\"name\";s:13:\"Related Posts\";s:11:\"description\";s:24:\"Display similar content.\";s:14:\"jumpstart_desc\";s:113:\"Keep visitors engaged on your blog by highlighting relevant and new content at the bottom of each published post.\";s:4:\"sort\";s:2:\"29\";s:20:\"recommendation_order\";s:1:\"9\";s:10:\"introduced\";s:3:\"2.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:11:\"Recommended\";s:7:\"feature\";s:31:\"Recommended, Jumpstart, Traffic\";s:25:\"additional_search_queries\";s:22:\"related, related posts\";}s:32:\"8b059cb50a66b717f1ec842e736b858c\";a:14:{s:4:\"name\";s:7:\"Sharing\";s:11:\"description\";s:32:\"Visitors can share your content.\";s:14:\"jumpstart_desc\";s:116:\"Twitter, Facebook and Google+ buttons at the bottom of each post, making it easy for visitors to share your content.\";s:4:\"sort\";s:1:\"7\";s:20:\"recommendation_order\";s:1:\"6\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:3:\"1.2\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:19:\"Social, Recommended\";s:7:\"feature\";s:31:\"Recommended, Jumpstart, Traffic\";s:25:\"additional_search_queries\";s:141:\"share, sharing, sharedaddy, buttons, icons, email, facebook, twitter, google+, linkedin, pinterest, pocket, press this, print, reddit, tumblr\";}s:32:\"a6d2394329871857401255533a9873f7\";a:14:{s:4:\"name\";s:16:\"Shortcode Embeds\";s:11:\"description\";s:77:\"Embed content from YouTube, Vimeo, SlideShare, and more, no coding necessary.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"3\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:3:\"1.2\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:46:\"Photos and Videos, Social, Writing, Appearance\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:251:\"shortcodes, shortcode, embeds, media, bandcamp, blip.tv, dailymotion, digg, facebook, flickr, google calendars, google maps, google+, polldaddy, recipe, recipes, scribd, slideshare, slideshow, slideshows, soundcloud, ted, twitter, vimeo, vine, youtube\";}s:32:\"21496e2897ea5f81605e2f2ac3beb921\";a:14:{s:4:\"name\";s:16:\"WP.me Shortlinks\";s:11:\"description\";s:56:\"Enable WP.me-powered shortlinks for all posts and pages.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"8\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:17:\"shortlinks, wp.me\";}s:32:\"e2a54a5d7879a4162709e6ffb540dd08\";a:14:{s:4:\"name\";s:9:\"Site Icon\";s:11:\"description\";s:29:\"Add a site icon to your site.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"22\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:5:\"Other\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:24:\"favicon, icon, site icon\";}s:32:\"f5c537bc304f55b29c1a87e30be0cd24\";a:14:{s:4:\"name\";s:8:\"Sitemaps\";s:11:\"description\";s:75:\"Creates sitemaps to allow your site to be easily indexed by search engines.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"13\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.9\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:6:\"Public\";s:11:\"module_tags\";s:20:\"Recommended, Traffic\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:39:\"sitemap, traffic, search, site map, seo\";}s:32:\"59a23643437358a9b557f1d1e20ab040\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"6a90f97c3194cfca5671728eaaeaf15e\";a:14:{s:4:\"name\";s:14:\"Single Sign On\";s:11:\"description\";s:27:\"Secure user authentication.\";s:14:\"jumpstart_desc\";s:98:\"Lets you log in to all your Jetpack-enabled sites with one click using your WordPress.com account.\";s:4:\"sort\";s:2:\"30\";s:20:\"recommendation_order\";s:1:\"5\";s:10:\"introduced\";s:3:\"2.6\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:10:\"Developers\";s:7:\"feature\";s:31:\"Jumpstart, Performance-Security\";s:25:\"additional_search_queries\";s:34:\"sso, single sign on, login, log in\";}s:32:\"b65604e920392e2f7134b646760b75e8\";a:14:{s:4:\"name\";s:10:\"Site Stats\";s:11:\"description\";s:35:\"Collect traffic stats and insights.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"1\";s:20:\"recommendation_order\";s:1:\"2\";s:10:\"introduced\";s:3:\"1.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:23:\"Site Stats, Recommended\";s:7:\"feature\";s:20:\"Recommended, Traffic\";s:25:\"additional_search_queries\";s:54:\"statistics, tracking, analytics, views, traffic, stats\";}s:32:\"23a586dd7ead00e69ec53eb32ef740e4\";a:14:{s:4:\"name\";s:13:\"Subscriptions\";s:11:\"description\";s:88:\"Allow users to subscribe to your posts and comments and receive notifications via email.\";s:14:\"jumpstart_desc\";s:126:\"Give visitors two easy subscription options — while commenting, or via a separate email subscription widget you can display.\";s:4:\"sort\";s:1:\"9\";s:20:\"recommendation_order\";s:1:\"8\";s:10:\"introduced\";s:3:\"1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:6:\"Social\";s:7:\"feature\";s:9:\"Jumpstart\";s:25:\"additional_search_queries\";s:74:\"subscriptions, subscription, email, follow, followers, subscribers, signup\";}s:32:\"1d978b8d84d2f378fe1a702a67633b6d\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"b3b983461d7f3d27322a3551ed8a9405\";a:14:{s:4:\"name\";s:15:\"Tiled Galleries\";s:11:\"description\";s:73:\"Display your image galleries in a variety of sleek, graphic arrangements.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"24\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.1\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:2:\"No\";s:11:\"module_tags\";s:17:\"Photos and Videos\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:43:\"gallery, tiles, tiled, grid, mosaic, images\";}s:32:\"d924e5b05722b0e104448543598f54c0\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}s:32:\"36741583b10c521997e563ad8e1e8b77\";a:14:{s:4:\"name\";s:12:\"Data Backups\";s:11:\"description\";s:27:\"Daily or real-time backups.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"32\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:5:\"0:1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:5:\"false\";s:4:\"free\";s:5:\"false\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:20:\"Performance-Security\";s:25:\"additional_search_queries\";s:28:\"vaultpress, backup, security\";}s:32:\"2b9b44f09b5459617d68dd82ee17002a\";a:14:{s:4:\"name\";s:17:\"Site Verification\";s:11:\"description\";s:77:\"Verify your site or domain with Google Search Console, Pinterest, and others.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"33\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"3.0\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:56:\"webmaster, seo, google, bing, pinterest, search, console\";}s:32:\"5ab4c0db7c42e10e646342da0274c491\";a:14:{s:4:\"name\";s:10:\"VideoPress\";s:11:\"description\";s:68:\"Upload and embed videos right on your site. (Subscription required.)\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"27\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.5\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:5:\"false\";s:19:\"requires_connection\";s:3:\"Yes\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:17:\"Photos and Videos\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:25:\"video, videos, videopress\";}s:32:\"60a1d3aa38bc0fe1039e59dd60888543\";a:14:{s:4:\"name\";s:17:\"Widget Visibility\";s:11:\"description\";s:57:\"Specify which widgets appear on which pages of your site.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:2:\"17\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"2.4\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:10:\"Appearance\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:54:\"widget visibility, logic, conditional, widgets, widget\";}s:32:\"174ed3416476c2cb9ff5b0f671280b15\";a:14:{s:4:\"name\";s:21:\"Extra Sidebar Widgets\";s:11:\"description\";s:79:\"Add images, Twitter streams, your site’s RSS links, and more to your sidebar.\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:1:\"4\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:3:\"1.2\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:2:\"No\";s:13:\"auto_activate\";s:3:\"Yes\";s:11:\"module_tags\";s:18:\"Social, Appearance\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:65:\"widget, widgets, facebook, gallery, twitter, gravatar, image, rss\";}s:32:\"28b931a1db19bd24869bd54b14e733d5\";a:14:{s:4:\"name\";s:0:\"\";s:11:\"description\";s:0:\"\";s:14:\"jumpstart_desc\";s:0:\"\";s:4:\"sort\";s:0:\"\";s:20:\"recommendation_order\";s:0:\"\";s:10:\"introduced\";s:0:\"\";s:7:\"changed\";s:0:\"\";s:10:\"deactivate\";s:0:\"\";s:4:\"free\";s:0:\"\";s:19:\"requires_connection\";s:0:\"\";s:13:\"auto_activate\";s:0:\"\";s:11:\"module_tags\";s:0:\"\";s:7:\"feature\";s:0:\"\";s:25:\"additional_search_queries\";s:0:\"\";}}}','yes');
INSERT INTO `wp_options` VALUES (6925,'_transient_timeout_plugin_slugs','1458139771','no');
INSERT INTO `wp_options` VALUES (6926,'_transient_plugin_slugs','a:6:{i:0;s:45:\"crayon-syntax-highlighter/crayon_wp.class.php\";i:1;s:45:\"disable-google-fonts/disable-google-fonts.php\";i:2;s:32:\"gif-animation-preview/plugin.php\";i:3;s:19:\"jetpack/jetpack.php\";i:4;s:25:\"tablepress/tablepress.php\";i:5;s:31:\"wp-quicklatex/wp-quicklatex.php\";}','no');
INSERT INTO `wp_options` VALUES (6917,'_transient_timeout_feed_7d1d7866a17d17cf5f79e1f075b87a31','1458096559','no');
INSERT INTO `wp_options` VALUES (6918,'_transient_feed_7d1d7866a17d17cf5f79e1f075b87a31','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:49:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"China 简体中文\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"https://cn.wordpress.org\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"官方 WordPress China 简体中文站点\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 05 Jan 2016 13:19:01 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"zh-CN\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"https://wordpress.org/?v=4.5-beta3-36998\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.4“Clifford”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://cn.wordpress.org/2015/12/13/clifford/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://cn.wordpress.org/2015/12/13/clifford/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 12 Dec 2015 22:52:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://cn.wordpress.org/?p=1011\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"WordPress 4.4简体中文版现已开放下载，或在您的WordPress仪表盘中升级。我们将此版本命名为“ [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:37859:\"<div style=\"width: 692px\">\n<p>WordPress 4.4简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Clifford”，以纪念爵士小号手<a href=\"https://en.wikipedia.org/wiki/Clifford_Brown\">克利福德·布朗</a>。4.4让您的网站更具连接性且反应敏捷。Clifford也带来了全新的默认主题，二〇一六。</p>\n<hr />\n<h2>介绍二〇一六</h2>\n<p><img class=\"aligncenter size-full wp-image-3994\" src=\"https://wordpress.org/news/files/2015/12/ipad-white-desktop-2x.png\" alt=\"A screenshot of Twenty Sixteen set in an iPad frame\" width=\"632\" height=\"428\" /></p>\n<p>我们最新的默认主题，二〇一六，是一个具现代感又不失经典博客设计风格的主题。</p>\n<p>二〇一六在任何设备上都看起来很棒。一个流动式网格设计、灵活页首，搭配各式趣味的配色，让你的内容大放异彩。</p>\n<hr />\n<h2>自适应图片</h2>\n<p><img class=\"aligncenter wp-image-3995 size-full\" src=\"https://wordpress.org/news/files/2015/12/responsive-devices-ipad-2x.png\" alt=\"An image of a laptop, iPad, Android phone, and iPhone containing the same image displayed at multiple sizes to demonstrate responsive image features.\" width=\"632\" height=\"290\" /></p>\n<p>WordPress现在以更聪明的方式显示适合任何设备的图片尺寸，确保每次皆完美呈现。您甚至不需要修改您的主题，</p>\n<hr />\n<h2>嵌入一切</h2>\n<blockquote data-secret=\"wce2ngsMIS\" class=\"wp-embedded-content\"><p><a href=\"https://make.wordpress.org/core/2015/10/28/new-embeds-feature-in-wordpress-4-4/\">New Embeds Feature in WordPress 4.4</a></p></blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"display:none;\" src=\"https://make.wordpress.org/core/2015/10/28/new-embeds-feature-in-wordpress-4-4/embed/#?secret=wce2ngsMIS\" data-secret=\"wce2ngsMIS\" width=\"600\" height=\"338\" title=\"Embedded WordPress Post\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>现在您可以将文章嵌入到其他WordPress网站。只要将文章URL贴入编辑器，即可看到即时嵌入预览，完整的标题、摘要及特色图片（如果您有设定），甚至会包含您的网站图标以及评论与分享链接。</p>\n<p>除了文章嵌入外，WordPress 4.4还加入五个新的oEmbed提供者：Cloudup、Reddit留言、ReverbNation、Speaker Deck及VideoPress。</p>\n<hr />\n<h2>引擎盖下</h2>\n<p><img class=\"aligncenter size-full wp-image-4003\" src=\"https://wordpress.org/news/files/2015/12/banner-1544x500.jpg\" alt=\"The WordPress REST API logo\" width=\"1544\" height=\"500\" /></p>\n<h3>REST API基础设施</h3>\n<p>REST API基础设施已整合于WordPress的核心中，将开发模式带入一个崭新的纪元。REST API为开发者提供在WordPress之上建设并扩展RESTful API的道路。</p>\n<p>基础设施是REST API多阶段推出的第一部分，而将会在未来的发布中包含核心节点。要了解更多关于核心节点或是扩展REST API的信息，请查阅官方<a href=\"https://wordpress.org/plugins/rest-api/\">WordPress REST API</a>扩展。</p>\n<h3>项目元数据</h3>\n<p>项目现在像文章一样支持元数据。请参阅<a href=\"https://developer.wordpress.org/reference/functions/add_term_meta\"><code>add_term_meta()</code></a>、<a href=\"https://developer.wordpress.org/reference/functions/get_term_meta\"><code>get_term_meta()</code></a>和<a href=\"https://developer.wordpress.org/reference/functions/update_term_meta\"><code>update_term_meta()</code></a>来获得更多信息。</p>\n<h3>评论查询改善</h3>\n<p>评论查询现在有缓存机制来改善性能。全新<code>WP_Comment_Query</code>参数能更轻松地调用、访问评论。</p>\n<h3>项目、评论以及网络对象</h3>\n<p>新的<code>WP_Term</code>、<code>WP_Comment</code>和<code>WP_Network</code>对象让与项目、评论和网络的交互变得更直观、更可预测。</p>\n<hr />\n<h2>开发团队</h2>\n<p>此次发布由<a href=\"http://scotty-t.com/\">Scott Taylor</a>领头，并得到了以下个人的帮助。这次发布包含了471人的贡献（创下新高！）。在您喜欢的音乐服务中听听克利福德·布朗，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/_smartik_\">_smartik_</a>、<a href=\"https://profiles.wordpress.org/a5hleyrich\">A5hleyRich</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/aaronrutley\">Aaron Rutley</a>、<a href=\"https://profiles.wordpress.org/kawauso\">Adam Harley (Kawauso)</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adamholisky\">adamholisky</a>、<a href=\"https://profiles.wordpress.org/aduth\">aduth</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Bjorklund</a>、<a href=\"https://profiles.wordpress.org/albertoct\">AlbertoCT</a>、<a href=\"https://profiles.wordpress.org/akirk\">Alex Kirk</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/gounder\">Alexander Gounder</a>、<a href=\"https://profiles.wordpress.org/alireza1375\">alireza1375</a>、<a href=\"https://profiles.wordpress.org/shedonist\">Amanda Giles</a>、<a href=\"https://profiles.wordpress.org/amereservant\">amereservant</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>、<a href=\"https://profiles.wordpress.org/amandato\">Angelo Mandato</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">Anthony Burchell</a>、<a href=\"https://profiles.wordpress.org/apkoponen\">ap.koponen</a>、<a href=\"https://profiles.wordpress.org/apokalyptik\">apokalyptik</a>、<a href=\"https://profiles.wordpress.org/athsear\">Athsear&#8217;J.S.</a>、<a href=\"https://profiles.wordpress.org/atomicjack\">atomicjack</a>、<a href=\"https://profiles.wordpress.org/austinginder\">Austin Ginder</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/barryceelen\">Barry Ceelen</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/bcworkz\">bcworkz</a>、<a href=\"https://profiles.wordpress.org/bdn3504\">BdN3504</a>、<a href=\"https://profiles.wordpress.org/pixolin\">Bego Mario Garde</a>、<a href=\"https://profiles.wordpress.org/benjmay\">Ben May</a>、<a href=\"https://profiles.wordpress.org/benjaminpick\">Benjamin Pick</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/bigdawggi\">bigdawggi</a>、<a href=\"https://profiles.wordpress.org/bilalcoder\">bilalcoder</a>、<a href=\"https://profiles.wordpress.org/binarykitten\">BinaryKitten</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjorn Johansen</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/gitlost\">bonger</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bradparbs\">bradparbs</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/bravokeyl\">bravokeyl</a>、<a href=\"https://profiles.wordpress.org/brentvr\">brentvr</a>、<a href=\"https://profiles.wordpress.org/brettz95\">brettz95</a>、<a href=\"https://profiles.wordpress.org/mckilem\">Bruno Kos</a>、<a href=\"https://profiles.wordpress.org/crazycoolcam\">Cam</a>、<a href=\"https://profiles.wordpress.org/camikaos\">Cami Kaos</a>、<a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>、<a href=\"https://profiles.wordpress.org/misterbisson\">Casey Bisson</a>、<a href=\"https://profiles.wordpress.org/cdog\">Catalin Dogaru</a>、<a href=\"https://profiles.wordpress.org/ch1902\">ch1902</a>、<a href=\"https://profiles.wordpress.org/chacha102\">chacha102</a>、<a href=\"https://profiles.wordpress.org/nhuja\">Chandra M</a>、<a href=\"https://profiles.wordpress.org/chasewiseman\">Chase Wiseman</a>、<a href=\"https://profiles.wordpress.org/chiara_09\">Chiara Dossena</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">Chris Christoff</a>、<a href=\"https://profiles.wordpress.org/chrismkindred\">Chris Kindred</a>、<a href=\"https://profiles.wordpress.org/cklosows\">Chris Klosowski</a>、<a href=\"https://profiles.wordpress.org/chriscoyier\">chriscoyier</a>、<a href=\"https://profiles.wordpress.org/chrisdc1\">Chrisdc1</a>、<a href=\"https://profiles.wordpress.org/lovememore\">christianoliff</a>、<a href=\"https://profiles.wordpress.org/christophherr\">Christoph Herr</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/chrisvendiadvertisingcom\">cjhaas</a>、<a href=\"https://profiles.wordpress.org/codeelite\">codeelite</a>、<a href=\"https://profiles.wordpress.org/coenjacobs\">Coen Jacobs</a>、<a href=\"https://profiles.wordpress.org/compute\">Compute</a>、<a href=\"https://profiles.wordpress.org/couturefreak\">Courtney Ivey</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/cgrymala\">Curtiss Grymala</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/dboulet\">Dan Boulet</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/daniel-koskinen\">Daniel Koskinen</a>、<a href=\"https://profiles.wordpress.org/dmenard\">Daniel Menard</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/daniellandau\">daniellandau</a>、<a href=\"https://profiles.wordpress.org/daniloercoli\">daniloercoli</a>、<a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/dattaparad\">Datta Parad</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dshanske\">David Shanske</a>、<a href=\"https://profiles.wordpress.org/davidbinda\">david.binda</a>、<a href=\"https://profiles.wordpress.org/debaat\">DeBAAT</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/downstairsdev\">Devin Price</a>、<a href=\"https://profiles.wordpress.org/dezzy\">Dezzy</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipalidhole27gmailcom\">Dipali Dhole</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/dbru\">Dominik Bruderer</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/drebbitsweb\">Dreb Bits</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustinbolton\">dustinbolton</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/edirect24\">edirect24</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/eduardozulian\">Eduardo Zulian</a>、<a href=\"https://profiles.wordpress.org/cais\">Edward Caissie</a>、<a href=\"https://profiles.wordpress.org/egill\">Egill R. Erlendsson</a>、<a href=\"https://profiles.wordpress.org/egower\">egower</a>、<a href=\"https://profiles.wordpress.org/iehsanir\">Ehsaan</a>、<a href=\"https://profiles.wordpress.org/ehtis\">ehtis</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/ellieroepken\">Ellie Strejlau</a>、<a href=\"https://profiles.wordpress.org/elliott-stocks\">Elliott Stocks</a>、<a href=\"https://profiles.wordpress.org/elusiveunit\">elusiveunit</a>、<a href=\"https://profiles.wordpress.org/enshrined\">enshrined</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericdaams\">Eric Daams</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/ericjuden\">ericjuden</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/f4rkie\">F4rkie</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/fsylum\">Firdaus Zahari</a>、<a href=\"https://profiles.wordpress.org/fonglh\">fonglh</a>、<a href=\"https://profiles.wordpress.org/francoisb\">francoisb</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/fjarrett\">Frankie Jarrett</a>、<a href=\"https://profiles.wordpress.org/frozzare\">Fredrik Forsmo</a>、<a href=\"https://profiles.wordpress.org/gaelan\">Gaelan Lloyd</a>、<a href=\"https://profiles.wordpress.org/gagan0123\">Gagan Deep Singh</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/garza\">garza</a>、<a href=\"https://profiles.wordpress.org/grvrulz\">Gaurav Pareek</a>、<a href=\"https://profiles.wordpress.org/gautamgupta\">Gautam Gupta</a>、<a href=\"https://profiles.wordpress.org/geminorum\">geminorum</a>、<a href=\"https://profiles.wordpress.org/kloon\">Gerhard Potgieter</a>、<a href=\"https://profiles.wordpress.org/gezamiklo\">geza.miklo</a>、<a href=\"https://profiles.wordpress.org/gizburdt\">Gijs Jorissen</a>、<a href=\"https://profiles.wordpress.org/garusky\">Giuseppe Mamone</a>、<a href=\"https://profiles.wordpress.org/jubstuff\">Giustino Borzacchiello</a>、<a href=\"https://profiles.wordpress.org/gnaka08\">gnaka08</a>、<a href=\"https://profiles.wordpress.org/gradyetc\">gradyetc</a>、<a href=\"https://profiles.wordpress.org/gregrickaby\">Greg Rickaby</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/webord\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/gwinhlopez\">gwinh.lopez</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hrishiv90\">Hrishikesh Vaipurkar</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/iandstewart\">Ian Stewart</a>、<a href=\"https://profiles.wordpress.org/icetee\">icetee</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/headonfire\">Ihor Vorotnov</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ippetkov\">ippetkov</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>、<a href=\"https://profiles.wordpress.org/macmanx\">James Huff</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jaspermdegroot\">Jasper de Groot</a>、<a href=\"https://profiles.wordpress.org/jazbek\">jazbek</a>、<a href=\"https://profiles.wordpress.org/jcroucher\">jcroucher</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeffmatson\">JeffMatson</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeffrey de Wit</a>、<a href=\"https://profiles.wordpress.org/jeichorn\">jeichorn</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jim912\">jim912</a>、<a href=\"https://profiles.wordpress.org/jliman\">jliman</a>、<a href=\"https://profiles.wordpress.org/jmayhak\">jmayhak</a>、<a href=\"https://profiles.wordpress.org/jnylen0\">jnylen0</a>、<a href=\"https://profiles.wordpress.org/jobst\">Jobst Schmalenbach</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/joehills\">joehills</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/mindctrl\">John Parris</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jonathanbardo\">Jonathan Bardo</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/koke\">Jorge Bernal</a>、<a href=\"https://profiles.wordpress.org/betzster\">Josh Betz</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juhise\">Juhi Saxena</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/justdaiv\">justdaiv</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jshreve\">Justin Shreve</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/greenshady\">Justin Tadlock</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kalenjohnson\">KalenJohnson</a>、<a href=\"https://profiles.wordpress.org/karinedo\">karinedo</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinb\">Kevin Behrens</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kevinatelement\">kevinatelement</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kraftner\">kraftner</a>、<a href=\"https://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/laceous\">laceous</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/offereins\">Laurens Offereins</a>、<a href=\"https://profiles.wordpress.org/lcherpit\">lcherpit</a>、<a href=\"https://profiles.wordpress.org/ldinclaux\">ldinclaux</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leemon\">leemon</a>、<a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>、<a href=\"https://profiles.wordpress.org/linuxologos\">linuxologos</a>、<a href=\"https://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>、<a href=\"https://profiles.wordpress.org/lucatume\">lucatume</a>、<a href=\"https://profiles.wordpress.org/luciole135\">luciole135</a>、<a href=\"https://profiles.wordpress.org/lucymtc\">lucymtc</a>、<a href=\"https://profiles.wordpress.org/lukecarbis\">Luke Carbis</a>、<a href=\"https://profiles.wordpress.org/madalinungureanu\">madalin.ungureanu</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/manolis09\">manolis09</a>、<a href=\"https://profiles.wordpress.org/iworks\">Marcin Pietrzak</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mechter\">Markus</a>、<a href=\"https://profiles.wordpress.org/wilto\">Mat Marquis</a>、<a href=\"https://profiles.wordpress.org/matheusfd\">Matheus Martins</a>、<a href=\"https://profiles.wordpress.org/mattbagwell\">Matt Bagwell</a>、<a href=\"https://profiles.wordpress.org/mgibbs189\">Matt Gibbs</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mazurstas\">mazurstas</a>、<a href=\"https://profiles.wordpress.org/mbrandys\">mbrandys</a>、<a href=\"https://profiles.wordpress.org/mdmcginn\">mdmcginn</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">mehulkaklotar</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/micahmills\">micahmills</a>、<a href=\"https://profiles.wordpress.org/micahwave\">micahwave</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/michielhab\">Michiel Habraken</a>、<a href=\"https://profiles.wordpress.org/mcguive7\">Mickey Kay</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/thaicloud\">Mike Jordan</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/mikeschroder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mismith227\">mismith227</a>、<a href=\"https://profiles.wordpress.org/misterunknown\">misterunknown</a>、<a href=\"https://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>、<a href=\"https://profiles.wordpress.org/monika\">Monika</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi ( mt8.biz )</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mrmist\">mrmist</a>、<a href=\"https://profiles.wordpress.org/mulvane\">mulvane</a>、<a href=\"https://profiles.wordpress.org/neoscrib\">neoscrib</a>、<a href=\"https://profiles.wordpress.org/next-season\">NExT-Season</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/nicholas_io\">nicholas_io</a>、<a href=\"https://profiles.wordpress.org/nickciske\">Nick Ciske</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nickduncan\">NickDuncan</a>、<a href=\"https://profiles.wordpress.org/rahe\">Nicolas Juen</a>、<a href=\"https://profiles.wordpress.org/nikeo\">nikeo</a>、<a href=\"https://profiles.wordpress.org/nikschavan\">Nikhil Chavan</a>、<a href=\"https://profiles.wordpress.org/niklasbr\">Niklas</a>、<a href=\"https://profiles.wordpress.org/nikolovtmw\">Nikola Nikolov</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/obrienlabs\">Pat O&#8217;Brien</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/figureone\">Paul Ryan</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/walbo\">Petter Walbo Johnsgard</a>、<a href=\"https://profiles.wordpress.org/petya\">Petya Raykovska</a>、<a href=\"https://profiles.wordpress.org/pfefferle\">pfefferle</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/philiplakin\">PhilipLakin</a>、<a href=\"https://profiles.wordpress.org/corphi\">Philipp Cordes</a>、<a href=\"https://profiles.wordpress.org/delawski\">Piotr Delawski</a>、<a href=\"https://profiles.wordpress.org/psoluch\">Piotr Soluch</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/prasad-nevase\">Prasad Nevase</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/pratikchaskar\">Pratik</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rajnikmit\">rajnikmit</a>、<a href=\"https://profiles.wordpress.org/racase\">Rakesh Lawaju (Racase Lawaju)</a>、<a href=\"https://profiles.wordpress.org/ramay\">ramay</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/raulillana\">Raul Illana</a>、<a href=\"https://profiles.wordpress.org/renoirb\">renoirb</a>、<a href=\"https://profiles.wordpress.org/rhubbardreverb\">rhubbardreverb</a>、<a href=\"https://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/wpmuguru\">Ron Rennick</a>、<a href=\"https://profiles.wordpress.org/ronalfy\">Ronald Huereca</a>、<a href=\"https://profiles.wordpress.org/kingkool68\">Russell Heimlich</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/markel\">Ryan Markel</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/zeo\">Safirul Alredha</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/sammybeats\">Sam Brodie</a>、<a href=\"https://profiles.wordpress.org/sam2kb\">sam2kb</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">Samuel Sidler</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sanketparmar\">Sanket Parmar</a>、<a href=\"https://profiles.wordpress.org/rosso99\">Sara Rosso</a>、<a href=\"https://profiles.wordpress.org/sarciszewski\">sarciszewski</a>、<a href=\"https://profiles.wordpress.org/sgrant\">Scott Grant</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/sdavis2702\">Sean Davis</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sebastianpisula\">Sebastian Pisula</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/serpent7776\">serpent7776</a>、<a href=\"https://profiles.wordpress.org/several27\">several27</a>、<a href=\"https://profiles.wordpress.org/shimakyohsuke\">shimakyohsuke</a>、<a href=\"https://profiles.wordpress.org/side777\">side777</a>、<a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/sirzooro\">sirzooro</a>、<a href=\"https://profiles.wordpress.org/sjmur\">sjmur</a>、<a href=\"https://profiles.wordpress.org/smerriman\">smerriman</a>、<a href=\"https://profiles.wordpress.org/spacedmonkey\">Spacedmonkey</a>、<a href=\"https://profiles.wordpress.org/khromov\">Stanislav Khromov</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/stebbiv\">stebbiv</a>、<a href=\"https://profiles.wordpress.org/miglosh\">Stefan Froehlich</a>、<a href=\"https://profiles.wordpress.org/sboisvert\">Stephane Boisvert</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevehenty\">stevehenty</a>、<a href=\"https://profiles.wordpress.org/stevehoneynz\">SteveHoneyNZ</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/charlestonsw\">Store Locator Plus</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar Muthu</a>、<a href=\"https://profiles.wordpress.org/brainstormforce\">Sujay</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/summerblue\">summerblue</a>、<a href=\"https://profiles.wordpress.org/sunnyratilal\">Sunny Ratilal</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a>、<a href=\"https://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>、<a href=\"https://profiles.wordpress.org/tbcorr\">tbcorr</a>、<a href=\"https://profiles.wordpress.org/tychay\">Terry Chay</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/tfrommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tott\">Thorsten Ott</a>、<a href=\"https://profiles.wordpress.org/tigertech\">tigertech</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tevko\">Tim Evko</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tmeister\">tmeister</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/tommarshall\">tommarshall</a>、<a href=\"https://profiles.wordpress.org/tomsommer\">tomsommer</a>、<a href=\"https://profiles.wordpress.org/skithund\">Toni Viemero</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy (LilJimmi) Levesque</a>、<a href=\"https://profiles.wordpress.org/rilwis\">Tran Ngoc Tuan Anh</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/trenzterra\">trenzterra</a>、<a href=\"https://profiles.wordpress.org/tryon\">Tryon Eggleston</a>、<a href=\"https://profiles.wordpress.org/tszming\">tszming</a>、<a href=\"https://profiles.wordpress.org/junsuijin\">ty</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/sorich87\">Ulrich Sossou</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/umeshnevase\">Umesh Nevase</a>、<a href=\"https://profiles.wordpress.org/utkarshpatel\">Utkarsh</a>、<a href=\"https://profiles.wordpress.org/vilkatis\">vilkatis</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/walterebert\">Walter Ebert</a>、<a href=\"https://profiles.wordpress.org/walterbarcelos\">walterbarcelos</a>、<a href=\"https://profiles.wordpress.org/webdevmattcrom\">webdevmattcrom</a>、<a href=\"https://profiles.wordpress.org/wen-solutions\">WEN Solutions</a>、<a href=\"https://profiles.wordpress.org/wenthemes\">WEN Themes</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/wmertens\">wmertens</a>、<a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>、<a href=\"https://profiles.wordpress.org/theode\">WP Plugin Dev dot com</a>、<a href=\"https://profiles.wordpress.org/wpdev101\">wpdev101</a>、<a href=\"https://profiles.wordpress.org/alphawolf\">wpseek</a>、<a href=\"https://profiles.wordpress.org/wturrell\">wturrell</a>、<a href=\"https://profiles.wordpress.org/yamchhetri\">Yam Chhetri</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/zrothauser\">Zack Rothauser</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>与<a href=\"http://www.sararosso.com/newsletter/\">Sara Rosso</a>制作发布视频，及<a href=\"http://camikaos.com/\">Cami Kaos</a>的配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了23种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.5见！</p>\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://cn.wordpress.org/2015/12/13/clifford/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n\n\n\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.3“Billie”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2015/08/21/billie/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2015/08/21/billie/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Aug 2015 19:04:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=995\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.3简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:3:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:46:\"https://s.w.org/images/core/4.3/formatting.mp4\";s:6:\"length\";s:7:\"1574782\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:46:\"https://s.w.org/images/core/4.3/formatting.ogv\";s:6:\"length\";s:7:\"1939540\";s:4:\"type\";s:9:\"video/ogg\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:47:\"https://s.w.org/images/core/4.3/formatting.webm\";s:6:\"length\";s:6:\"686435\";s:4:\"type\";s:10:\"video/webm\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:21780:\"<div style=\"width: 692px\">\nWordPress 4.3简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Billie”，以纪念爵士钢琴手<a href=\"https://zh.wikipedia.org/zh-cn/%E6%AF%94%E8%8E%89%C2%B7%E8%8D%B7%E8%8E%89%E6%88%B4\">比莉·荷莉戴</a>。4.3中的新功能会让您更容易自定义网站及内容格式。</p>\n<div id=\"v-T54Iy7Tw-1\" class=\"video-player\"><embed id=\"v-T54Iy7Tw-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.04&amp;guid=T54Iy7Tw&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"620\" height=\"348\" title=\"Introducing WordPress 4.3 &quot;Billie&quot;\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<hr />\n<h2>定制器菜单</h2>\n<div><img src=\"https://s.w.org/images/core/4.3/menu-customizer.png\" alt=\"\" /></div>\n<p>建立您的菜单，更新，然后指定至适当位置，同时还能在定制器里即时预览。流线式定制器设计提供对手机友好且更方便的介面。随着每个版本发布，它将变得更快、更好用。</p>\n<hr />\n<h2>格式快捷键</h2>\n<p><div style=\"width: 640px; \" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-995-1\" width=\"640\" height=\"360\" loop=\"1\" autoplay=\"1\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.3/formatting.mp4?_=1\" /><source type=\"video/webm\" src=\"https://s.w.org/images/core/4.3/formatting.webm?_=1\" /><source type=\"video/ogg\" src=\"https://s.w.org/images/core/4.3/formatting.ogv?_=1\" /><a href=\"https://s.w.org/images/core/4.3/formatting.mp4\">https://s.w.org/images/core/4.3/formatting.mp4</a></video></div><br />\n您的写作流程伴随着WordPress 4.3全新格式快捷键功能将变得更快。使用星号来建立清单、井号建立一个标题。别再打断您的工作；您的文字搭配<code>*</code>和<code>#</code>看起来更加美好。</p>\n<hr />\n<h2>站点图标</h2>\n<p><img src=\"https://s.w.org/images/core/4.3/site-icon-customizer.png\" alt=\"\" /><br />\n在浏览器标签、收藏夹和移动设备主画面以站点图标作为您的站点代表。在定制器里新增您独一无二的站点图标；当您切换主题时仍保持不变。使您的站点呈现出自己的品牌。</p>\n<hr />\n<h2>更好的密码</h2>\n<p><img src=\"https://s.w.org/images/core/4.3/better-passwords.png\" alt=\"\" /><br />\n借助WordPress改进的密码设定功能使网站更安全。不再使用电子邮件接收密码，而是取得一个密码重设链接。当您在网站新增用户或编辑用户资料时，WordPress将会自动产生一个安全密码。</p>\n<hr />\n<h2>其他改善</h2>\n<ul>\n<li><strong>更顺滑的管理体验</strong> – 经过改进的跨管理界面的列表视图使您的WordPress更方便并且更容易在任何装置上运作。</li>\n<li><strong>关闭页面的评论</strong> – 新建立的页面将关闭评论，将讨论局限在您的博客，只在它们应该出现的地方显示。</li>\n<li><strong>快速自定义您的站点</strong> – 无论您是否在前台，都可以点击工具栏的自定义链接迅速为您的网站做出更改。</li>\n</ul>\n<hr />\n<h2>开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/obenland\"><img id=\"grav-2370ea5912750f4cb0f3c51ae1cbca55-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/2370ea5912750f4cb0f3c51ae1cbca55?d=mm&amp;s=180&amp;r=G\" alt=\"Konstantin Obenland\" width=\"80\" height=\"80\" /></a><br />\n此次发布由<a href=\"http://konstantin.obenland.it/\">Konstantin Obenland</a>领头，并得到了以下个人的帮助。这次发布包含了246人的贡献。在您喜欢的音乐服务中听听比莉·荷莉戴，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamkheckler\">Adam Heckler</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/akibjorklund\">Aki Bjorklund</a>、<a href=\"https://profiles.wordpress.org/akirk\">Alex Kirk</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/andfinally\">andfinally</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/afragen\">Andy Fragen</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">Anthony Burchell</a>、<a href=\"https://profiles.wordpress.org/anubisthejackle\">anubisthejackle</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/arjunskumar\">Arjun S Kumar</a>、<a href=\"https://profiles.wordpress.org/avnarun\">avnarun</a>、<a href=\"https://profiles.wordpress.org/brad2dabone\">Bad Feather</a>、<a href=\"https://profiles.wordpress.org/bcole808\">Ben Cole</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/binarykitten\">BinaryKitten</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjorn Johansen</a>、<a href=\"https://profiles.wordpress.org/bolo1988\">bolo1988</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>、<a href=\"https://profiles.wordpress.org/icaleb\">Caleb Burks</a>、<a href=\"https://profiles.wordpress.org/calevans\">CalEvans</a>、<a href=\"https://profiles.wordpress.org/chasewiseman\">Chase Wiseman</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/posykrat\">Clement Biron</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/mte90\">Daniele Mte90 Scasciafratte</a>、<a href=\"https://profiles.wordpress.org/daniluk4000\">daniluk4000</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/daveal\">DaveAl</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/daxelrod\">daxelrod</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/dmsnell\">dmsnell</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/eclev91\">eclev91</a>、<a href=\"https://profiles.wordpress.org/eligijus\">eligijus</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/flixos90\">Felix Arntz</a>、<a href=\"https://profiles.wordpress.org/francoeurdavid\">francoeurdavid</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/gabrielperezs\">gabrielperezs</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">Garth Mortensen</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/glennm\">glennm</a>、<a href=\"https://profiles.wordpress.org/gtuk\">gtuk</a>、<a href=\"https://profiles.wordpress.org/hailin\">hailin</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/henrikakselsen\">henrikakselsen</a>、<a href=\"https://profiles.wordpress.org/hnle\">Hinaloe</a>、<a href=\"https://profiles.wordpress.org/hrishiv90\">Hrishikesh Vaipurkar</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/polevaultweb\">Iain Poulson</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/isaacchapman\">isaacchapman</a>、<a href=\"https://profiles.wordpress.org/izem\">izem</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jadpm\">jadpm</a>、<a href=\"https://profiles.wordpress.org/jamesgol\">jamesgol</a>、<a href=\"https://profiles.wordpress.org/jancbeck\">jancbeck</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jmichaelward\">Jeremy Ward</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/jkudish\">Joey Kudish</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/picard102\">John Leschinski</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/jpyper\">Jpyper</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/ungestaltbar\">Kai</a>、<a href=\"https://profiles.wordpress.org/karinchristen\">karinchristen</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevkoeh\">Kevin Koehler</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/leogopal\">Leo Gopal</a>、<a href=\"https://profiles.wordpress.org/loushou\">loushou</a>、<a href=\"https://profiles.wordpress.org/lumaraf\">Lumaraf</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marsjaninzmarsa\">marsjaninzmarsa</a>、<a href=\"https://profiles.wordpress.org/martinsachse\">martinsachse</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/veraxus\">Matt van Andel</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxxsnake\">maxxsnake</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/nikonratm\">Michael</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michaelryanmcneill\">michaelryanmcneill</a>、<a href=\"https://profiles.wordpress.org/mcguive7\">Mickey Kay</a>、<a href=\"https://profiles.wordpress.org/mihai\">mihai</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mrutz\">mrutz</a>、<a href=\"https://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/nazmulhossainnihal\">Nazmul Hossain Nihal</a>、<a href=\"https://profiles.wordpress.org/nicholas_io\">nicholas_io</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nickmomrik\">Nick Momrik</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/rabmalin\">Nilambar Sharma</a>、<a href=\"https://profiles.wordpress.org/onnimonni\">Onni Hakala</a>、<a href=\"https://profiles.wordpress.org/ozh\">Ozh</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/djpaul\">Paul Gibbs</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/peterrknight\">PeterRKnight</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/pragunbhutani\">pragunbhutani</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/rarylson\">rarylson</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/rauchg\">rauchg</a>、<a href=\"https://profiles.wordpress.org/ravinderk\">Ravinder Kumar</a>、<a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>、<a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/rommelxcastro\">Rommel Castro</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">Ross Wintle</a>、<a href=\"https://profiles.wordpress.org/rhurling\">Rouven Hurling</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/ohryan\">Ryan Neudorf</a>、<a href=\"https://profiles.wordpress.org/welcher\">Ryan Welcher</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">Sagar Jadhav</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">Samir Shah</a>、<a href=\"https://profiles.wordpress.org/santagada\">santagada</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/scruffian\">scruffian</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sebastiantiede\">Sebastian</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>、<a href=\"https://profiles.wordpress.org/designsimply\">Sheri Bigelow</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/metodiew\">Stanko Metodiev</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury (stephdau)</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/stuartshields\">stuartshields</a>、<a href=\"https://profiles.wordpress.org/sudar\">Sudar</a>、<a href=\"https://profiles.wordpress.org/sunnyratilal\">Sunny Ratilal</a>、<a href=\"https://profiles.wordpress.org/taka2\">taka2</a>、<a href=\"https://profiles.wordpress.org/tharsheblows\">tharsheblows</a>、<a href=\"https://profiles.wordpress.org/thorbrink\">Thor Brink</a>、<a href=\"https://profiles.wordpress.org/creativeinfusion\">Tim Smith</a>、<a href=\"https://profiles.wordpress.org/tlexcellent\">tlexcellent</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomasm\">Tomas Mackevicius</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/toro_unit\">Toro_Unit (Hiroshi Urabe)</a>、<a href=\"https://profiles.wordpress.org/toru\">Toru Miki</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy (LilJimmi) Levesque</a>、<a href=\"https://profiles.wordpress.org/tryon\">Tryon Eggleston</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/vivekbhusal\">vivekbhusal</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/willnorris\">Will Norris</a>、<a href=\"https://profiles.wordpress.org/willgladstone\">willgladstone</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>、<a href=\"https://profiles.wordpress.org/willstedt\">willstedt</a>、<a href=\"https://profiles.wordpress.org/eltobiano\">WPMU DEV Jose</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/ysalame\">Yuri Salame</a>、<a href=\"https://profiles.wordpress.org/oxymoron\">Zach Wills</a>、<a href=\"https://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频、<a href=\"http://hugobaeta.com/\">Hugo Baeta</a>的设计和<a href=\"http://jacklenox.com/\">Jack Lenox</a>的配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了30种语言！</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.4见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2015/08/21/billie/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"12\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.2“Powell”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2015/04/24/powell/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2015/04/24/powell/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 23 Apr 2015 19:32:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=977\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.2简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:29803:\"<div style=\"width: 692px\">\nWordPress 4.2简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Powell”，以纪念爵士钢琴手<a href=\"https://en.wikipedia.org/wiki/Bud_Powell\">巴德·鲍威尔</a>。4.2中的新功能会帮助您与全世界交流共享。</p>\n<div id=\"v-e9kH4FzP-1\" class=\"video-player\"><embed id=\"v-e9kH4FzP-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.04&amp;guid=e9kH4FzP&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"620\" height=\"348\" title=\"Introducing WordPress 4.2 &quot;Powell&quot;\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">更方便地共享内容</h2>\n<p><img class=\"alignnone size-full wp-image-3677\" src=\"https://wordpress.org/news/files/2015/04/4.2-press-this-2.jpg\" alt=\"按这里\" width=\"1000\" height=\"832\" /><br />\n收藏、编辑、发布，向您介绍最新的”按这里“工具。在工具菜单中，将”按这里“加入到您的浏览器书签或移动设备主屏幕，然后您就可以迅雷不及掩耳地共享您的内容。共享您喜欢的视频、图片和内容从来没有像现在这样简单快捷。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">扩展的字符集支持</h2>\n<p><img class=\"alignnone size-full wp-image-3676\" src=\"https://wordpress.org/news/files/2015/04/4.2-characters.png\" alt=\"字符集支持：颜文字和特殊字符\" width=\"1000\" height=\"832\" /><br />\n无论您使用何种语言，在WordPress中写作都将变得更好。WordPress 4.2将原生支持许多新字符，包括中日韩文字、音乐和数学符号，以及象形文字。</p>\n<p>即使您没有在使用以上那些字符，您仍可获益——WordPress现已支持颜文字！发挥创意并用<img src=\"https://s.w.org/images/core/emoji/72x72/1f499.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/72x72/1f438.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/72x72/1f412.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />、<img src=\"https://s.w.org/images/core/emoji/72x72/1f355.png\" alt=\"?\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />与所有其他<a href=\"https://codex.wordpress.org/Emoji\">颜文字</a>来装点您的内容。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<p><img class=\"alignright size-medium wp-image-3656\" src=\"https://wordpress.org/news/files/2015/04/4.2-theme-switcher-300x230.png\" alt=\"定制器中的主题切换器\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">在定制器中切换主题</h3>\n<p>您可以在定制器中浏览和预览已安装的主题，并可让主题在您的站点亮相之前确保它能够搭配您的内容。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright size-medium wp-image-3653\" src=\"https://wordpress.org/news/files/2015/04/4.2-embeds-300x230.png\" alt=\"Tumbr.com oEmbed样例\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">更多的嵌入内容</h3>\n<p>把Tumblr.com和Kickstarter的链接粘贴进编辑器，那些内容就将魔法般地出现在您眼前。您的发布和编辑体验会随着我们的每次发布变得更密不可分。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright size-medium wp-image-3654\" src=\"https://wordpress.org/news/files/2015/04/4.2-plugins-300x230.png\" alt=\"内联插件升级\" width=\"288\" height=\"221\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">更流畅的插件升级</h3>\n<p>向无聊的加载屏幕说再见，并向简单顺滑的插件升级说你好。点击<em>现在升级</em>，您即可以看到魔法发生。</p>\n<div style=\"clear: both\"></div>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">引擎盖下</h2>\n<h5>utf8mb4支持</h5>\n<p>数据库字符编码已从utf8变为utf8mb4，加入了对所有4字节字符的支持。</p>\n<h5>JavaScript无障碍</h5>\n<p>您现在可以在JavaScript中通过<code>wp.a11y.speak()</code>向屏幕阅读器发送音频提醒。传入字符串，更新就会被发送到专用的ARIA即时通知区域。</p>\n<h5>分离共享的条目信息</h5>\n<p>不同分类法间共享的条目信息将在其中一条获得更新时分离。您可以在<a href=\"https://developer.wordpress.org/plugins/taxonomy/working-with-split-terms-in-wp-4-2/\">插件开发者手册</a>中获取更多信息。</p>\n<h5>复杂查询排序</h5>\n<p><code>WP_Query</code>、<code>WP_Comment_Query</code>和<code>WP_User_Query</code>现在支持使用具名的元查询条款进行复杂排序。</p>\n<hr style=\"margin: 2em 0 3em\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">开发团队</h2>\n<p><a class=\"alignleft\" href=\"https://profiles.wordpress.org/drewapicture\"><img id=\"grav-95c934fa2c3362794bf62ff8c59ada08-0\" class=\"grav-hashed\" src=\"https://www.gravatar.com/avatar/95c934fa2c3362794bf62ff8c59ada08?d=mm&amp;s=180&amp;r=G\" alt=\"Drew Jaynes\" width=\"90\" height=\"90\" /></a></p>\n<p>此次发布由<a href=\"http://werdswords.com/\">Drew Jaynes</a>领头，并得到了以下个人的帮助。这次发布包含了283人的贡献，创下新高。在您喜欢的音乐服务中听听巴德·鲍威尔，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/mercime\">@mercime</a>、<a href=\"https://profiles.wordpress.org/a5hleyrich\">A5hleyRich</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/abhishekfdd\">abhishekfdd</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/mrahmadawais\">Ahmad Awais</a>、<a href=\"https://profiles.wordpress.org/alexkingorg\">Alex King</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/awbauer\">Andrew Bauer</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/aramzs\">Aram Zucker-Scharff</a>、<a href=\"https://profiles.wordpress.org/arminbraun\">ArminBraun</a>、<a href=\"https://profiles.wordpress.org/ashfame\">Ashfame</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/avryl\">avryl</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/beaulebens\">Beau Lebens</a>、<a href=\"https://profiles.wordpress.org/bendoh\">Ben Doherty (Oomph、Inc)</a>、<a href=\"https://profiles.wordpress.org/bananastalktome\">Billy Schneider</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/bswatson\">Brian Watson</a>、<a href=\"https://profiles.wordpress.org/calevans\">CalEvans</a>、<a href=\"https://profiles.wordpress.org/carolinegeven\">carolinegeven</a>、<a href=\"https://profiles.wordpress.org/caseypatrickdriscoll\">Casey Driscoll</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/cdog\">Catalin Dogaru</a>、<a href=\"https://profiles.wordpress.org/chipbennett\">Chip Bennett</a>、<a href=\"https://profiles.wordpress.org/chipx86\">chipx86</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/cbaldelomar\">Chris Baldelomar</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/cfoellmann\">Christian Foellmann</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>、<a href=\"https://profiles.wordpress.org/codix\">Code Master</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/couturefreak\">Courtney Ivey</a>、<a href=\"https://profiles.wordpress.org/craig-ralston\">Craig Ralston</a>、<a href=\"https://profiles.wordpress.org/cweiske\">cweiske</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/timersys\">Damian</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/dkotter\">Darin Kotter</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/folletto\">Davide &#8216;Folletto&#8217; Casali</a>、<a href=\"https://profiles.wordpress.org/davideugenepratt\">davideugenepratt</a>、<a href=\"https://profiles.wordpress.org/davidhamiltron\">davidhamiltron</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/valendesigns\">Derek Herman</a>、<a href=\"https://profiles.wordpress.org/dsmart\">Derek Smart</a>、<a href=\"https://profiles.wordpress.org/designsimply\">designsimply</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/dipeshkakadiya\">dipesh.kakadiya</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/doublesharp\">doublesharp</a>、<a href=\"https://profiles.wordpress.org/dzerycz\">DzeryCZ</a>、<a href=\"https://profiles.wordpress.org/kucrut\">Dzikri Aziz</a>、<a href=\"https://profiles.wordpress.org/emazovetskiy\">e.mazovetskiy</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/cais\">Edward Caissie</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/iseulde\">Ella Iseulde Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/elliottcarlson\">elliottcarlson</a>、<a href=\"https://profiles.wordpress.org/enej\">enej</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/evansolomon\">Evan Solomon</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/fhwebcs\">fhwebcs</a>、<a href=\"https://profiles.wordpress.org/floriansimeth\">Florian Simeth</a>、<a href=\"https://profiles.wordpress.org/bueltge\">Frank</a>、<a href=\"https://profiles.wordpress.org/frankpw\">Frank P. Walentynowicz</a>、<a href=\"https://profiles.wordpress.org/f-j-kaiser\">Franz Josef Kaiser</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/geertdd\">Geert De Deckere</a>、<a href=\"https://profiles.wordpress.org/genkisan\">genkisan</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/webord\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/harishchaudhari\">Harish Chaudhari</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/herbmillerjr\">herbmillerjr</a>、<a href=\"https://profiles.wordpress.org/hew\">Hew</a>、<a href=\"https://profiles.wordpress.org/horike\">horike</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/hugobaeta\">Hugo Baeta</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/ianmjones\">ianmjones</a>、<a href=\"https://profiles.wordpress.org/idealien\">idealien</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jamescollins\">James Collins</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/cheffheid\">Jeff de Wit</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/yo-l1982\">Joel Bernerman</a>、<a href=\"https://profiles.wordpress.org/joen\">Joen Asmussen</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/jlevandowski\">John Levandowski</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdekeijzer\">joost de keijzer</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/jcastaneda\">Jose Castaneda</a>、<a href=\"https://profiles.wordpress.org/joshlevinson\">Josh Levinson</a>、<a href=\"https://profiles.wordpress.org/jphase\">jphase</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/justincwatt\">Justin Watt</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevdotbadger\">Kevin Ruscoe</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kite</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/mindrun\">Leonard</a>、<a href=\"https://profiles.wordpress.org/leopeo\">Leonardo Giacone</a>、<a href=\"https://profiles.wordpress.org/lgladdy\">Liam Gladdy</a>、<a href=\"https://profiles.wordpress.org/magicroundabout\">magicroundabout</a>、<a href=\"https://profiles.wordpress.org/maimairel\">maimairel</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>、<a href=\"https://profiles.wordpress.org/marcelomazza\">marcelomazza</a>、<a href=\"https://profiles.wordpress.org/marcochiesi\">Marco Chiesi</a>、<a href=\"https://profiles.wordpress.org/mkaz\">Marcus Kazmierczak</a>、<a href=\"https://profiles.wordpress.org/tyxla\">Marin Atanasov</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/senff\">Mark Senff</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mzak\">Matt</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/mehulkaklotar\">mehulkaklotar</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/mgibbs189\">mgibbs189</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/tw2113\">Michael Beckwith</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mdgl\">Mike Glendinning</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/thaicloud\">Mike Jordan</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/mikengarrett\">MikeNGarrett</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mmn-o\">mmn-o</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/momdad\">MomDad</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/morpheu5\">Morpheu5</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/nathan_dawson\">nathan_dawson</a>、<a href=\"https://profiles.wordpress.org/neil_pie\">Neil Pie</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nicnicnicdevos\">nicnicnicdevos</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal</a>、<a href=\"https://profiles.wordpress.org/ninnypants\">ninnypants</a>、<a href=\"https://profiles.wordpress.org/nitkr\">nitkr</a>、<a href=\"https://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/pareshradadiya-1\">Paresh Radadiya</a>、<a href=\"https://profiles.wordpress.org/pathawks\">Pat Hawks</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">Payton Swick</a>、<a href=\"https://profiles.wordpress.org/petemall\">Pete Mall</a>、<a href=\"https://profiles.wordpress.org/gungeekatx\">Pete Nelson</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/podpirate\">podpirate</a>、<a href=\"https://profiles.wordpress.org/postpostmodern\">postpostmodern</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/prasoon2211\">prasoon2211</a>、<a href=\"https://profiles.wordpress.org/cyman\">Primoz Cigler</a>、<a href=\"https://profiles.wordpress.org/r-a-y\">r-a-y</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rahulbhangale\">rahulbhangale</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/lamosty\">Rastislav Lamos</a>、<a href=\"https://profiles.wordpress.org/ravindra-pal-singh\">Ravindra Pal Singh</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/ritteshpatel\">Ritesh Patel</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmarks\">Ryan Marks</a>、<a href=\"https://profiles.wordpress.org/sagarjadhav\">sagarjadhav</a>、<a href=\"https://profiles.wordpress.org/samo9789\">samo9789</a>、<a href=\"https://profiles.wordpress.org/samuelsidler\">samuelsidler</a>、<a href=\"https://profiles.wordpress.org/sgrant\">Scott Grant</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scottgonzalez\">scott.gonzalez</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/sevenspark\">sevenspark</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/sippis\">sippis</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/sillybean\">Stephanie Leary</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/stevehickeydesign\">stevehickeydesign</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/hissy\">Takuro Hishikawa</a>、<a href=\"https://profiles.wordpress.org/themiked\">theMikeD</a>、<a href=\"https://profiles.wordpress.org/thomaswm\">thomaswm</a>、<a href=\"https://profiles.wordpress.org/ipm-frommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till</a>、<a href=\"https://profiles.wordpress.org/timothyblynjacobs\">Timothy Jacobs</a>、<a href=\"https://profiles.wordpress.org/tiqbiz\">tiqbiz</a>、<a href=\"https://profiles.wordpress.org/tmatsuur\">tmatsuur</a>、<a href=\"https://profiles.wordpress.org/tmeister\">tmeister</a>、<a href=\"https://profiles.wordpress.org/tschutter\">Tobias Schutter</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomdxw\">tomdxw</a>、<a href=\"https://profiles.wordpress.org/travisnorthcutt\">Travis Northcutt</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">trishasalas</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/uamv\">UaMV</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/sorich87\">Ulrich Sossou</a>、<a href=\"https://profiles.wordpress.org/veritaserum\">Veritaserum</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/volodymyrc\">VolodymyrC</a>、<a href=\"https://profiles.wordpress.org/vortfu\">vortfu</a>、<a href=\"https://profiles.wordpress.org/welcher\">welcher</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/earnjam\">William Earnhardt</a>和<a href=\"https://profiles.wordpress.org/wordpressorru\">WordPressor</a>。</p>\n<p>特别感谢<a href=\"http://siobhanmckeown.com/\">Siobhan McKeown</a>制作发布视频及<a href=\"http://camikaos.com/\">Cami Kaos</a>为视频配音。</p>\n<p>最后，让我们感谢为发布视频制作了字幕的贡献者，这次的发布视频被翻译成了30种语言！</p>\n<p><a href=\"https://profiles.wordpress.org/adrianpop\">Adrian Pop</a>、<a href=\"https://profiles.wordpress.org/deconf\">Alin Marcu</a>、<a href=\"https://profiles.wordpress.org/bagerathan\">Bagerathan Sivarajah</a>、<a href=\"https://profiles.wordpress.org/besnik\">Besnik</a>、<a href=\"https://profiles.wordpress.org/bjornjohansen\">Bjørn Johansen</a>、Chantal Coolsma、<a href=\"https://profiles.wordpress.org/cubells\">cubells</a>、Daisuke Takahashi、<a href=\"https://profiles.wordpress.org/dianakc\">Diana K. Cury</a>、<a href=\"https://profiles.wordpress.org/djzone\">DjZoNe</a>、<a href=\"https://profiles.wordpress.org/dyrer\">dyrer</a>、<a href=\"https://profiles.wordpress.org/semblance\">Elzette Roelofse</a>、<a href=\"https://profiles.wordpress.org/fxbtacoverdoenard\">fxbtacoverdoenard</a>、<a href=\"https://profiles.wordpress.org/gabriel-reguly\">Gabriel Reguly</a>、<a href=\"https://profiles.wordpress.org/miss_jwo\">Jenny Wong</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/hgmb\">Håvard Grimelid</a>、<a href=\"https://profiles.wordpress.org/intoxstudio\">Joachim Jensen</a>、<a href=\"https://profiles.wordpress.org/jimmyxu\">Jimmy Xu</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/pokeraitis\">Justina</a>、<a href=\"https://profiles.wordpress.org/kosvrouvas\">Kostas Vrouvas</a>、<a href=\"https://profiles.wordpress.org/eclare\">Krzysztof Trynkiewicz</a>、<a href=\"https://profiles.wordpress.org/goblindegook\">Luís Rodrigues</a>、<a href=\"https://profiles.wordpress.org/luisrull\">Luis Rull</a>、<a href=\"https://profiles.wordpress.org/culturemark\">Mark Thomas Gazel </a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius Jensen</a>、<a href=\"https://profiles.wordpress.org/matthee\">matthee</a>、<a href=\"https://profiles.wordpress.org/damst\">Mattias Tengblad</a>、Matúš Záhradník、Mayuko Moriyama、<a href=\"https://profiles.wordpress.org/michalvittek\">Michal Vittek</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinić</a>、<a href=\"https://profiles.wordpress.org/mrshemek\">MrShemek</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/peterhoob\">Peter Holme Obrestad</a>、<a href=\"https://profiles.wordpress.org/petya\">Petya Raykovska</a>、Przemysław Mirota、<a href=\"https://profiles.wordpress.org/qraczek\">qraczek</a>、<a href=\"https://profiles.wordpress.org/bi0xid\">Rafa Poveda</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/rasheed\">Rasheed Bydousi</a>、<a href=\"https://profiles.wordpress.org/gwgan\">Rhoslyn Prys</a>、<a href=\"https://profiles.wordpress.org/robee\">Robert Axelsen</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/siobhyb\">Siobhan Bamber</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/tohave\">ک To Have داشتن</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/egalego\">Victor J. Quesada</a>、<a href=\"https://profiles.wordpress.org/wolly\">Wolly</a>、<a href=\"https://profiles.wordpress.org/xavivars\">Xavi Ivars</a>和<a href=\"https://profiles.wordpress.org/xibe\">Xavier Borderie</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢您选择WordPress，我们4.3见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2015/04/24/powell/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"27\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 4.1“Dinah”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://cn.wordpress.org/2014/12/23/dinah/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2014/12/23/dinah/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 23 Dec 2014 01:34:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=959\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.1简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:25152:\"<div style=\"width: 692px\">\nWordPress 4.1简体中文版现已<a href=\"https://cn.wordpress.org/releases/\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Dinah”，以纪念爵士歌手<a href=\"https://en.wikipedia.org/wiki/Dinah_Washington\">黛娜·华盛顿</a>。WordPress 4.1中的新功能帮助您聚焦于您的写作，新的默认主题也能让您有型地展示您的文章。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">向您介绍Twenty Fifteen</h2>\n<p><img class=\"aligncenter size-large wp-image-3389\" src=\"https://wordpress.org/news/files/2014/12/2015-laptop-1024x533.png\" alt=\"2015-laptop\" width=\"692\" height=\"360\" /></p>\n<h3 style=\"margin: 0 0 5px 0;font-size: 16px;font-weight: bold\">Twenty Fifteen，我们最新的默认主题，是一套以明晰为中心的面向博客的主题。</h3>\n<p><img class=\"alignright wp-image-3426 size-medium\" src=\"https://wordpress.org/news/files/2014/12/2015-phones-languages-small-300x250.png\" alt=\"\" width=\"300\" height=\"250\" />感谢<a href=\"\\&quot;%s\\&quot;\">Google的Noto字体家族</a>，Twenty Fifteen有着无懈可击的语言支持。</p>\n<p>简单的排版在任何屏幕尺寸上都容易阅读。</p>\n<p>您的内容永远居于最中，无论是在手机、平板、膝上型电脑还是台式机上阅读都是如此。</p>\n<hr style=\"clear: both\" />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">免打扰写作</h2>\n<p><img class=\"aligncenter size-large wp-image-3392\" src=\"https://wordpress.org/news/files/2014/12/dfw-screen-1024x614.png\" alt=\"dfw-screen\" width=\"692\" height=\"415\" /></p>\n<h3 style=\"text-align: center;margin: 0 0 5px 0;font-size: 16px;font-weight: bold\"><em>去写吧</em></h3>\n<p>有时，您需要集中精力遣词造句。试试打开<strong>免打扰写作模式</strong>，在您开始打字时，所有会让您分心的东西都会淡出，让您只注意您的写作。您的所有编辑工具都会在您需要用到它们时立刻出现。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">细节之处</h2>\n<h5><strong><img class=\"alignleft wp-image-3405\" src=\"https://wordpress.org/news/files/2014/12/icon-language2.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>选择语言</h5>\n<p>现在，WordPress 4.1已经有了40多种语言版本，我们也一直在进行更多翻译。您可以在常规选项中切换到任意一种语言。</p>\n<h5><strong><img class=\"alignleft wp-image-3406\" src=\"https://wordpress.org/news/files/2014/12/icon-logout1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>随处登出</h5>\n<p>如果您曾经担心过忘记在公用电脑上登出，您现在可以前往您的个人资料页面并登出您的所有会话。</p>\n<h5><strong><img class=\"alignleft wp-image-3407\" src=\"https://wordpress.org/news/files/2014/12/icon-vine1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>Vine嵌入</h5>\n<p>嵌入来自Vine的视频也已被简化为了将URL粘贴进文章里。查看我们支持的嵌入的<a href=\"https://codex.wordpress.org/Embeds\">完整列表</a>。</p>\n<h5><strong><img class=\"alignleft wp-image-3408\" src=\"https://wordpress.org/news/files/2014/12/icon-recommended1.png\" alt=\"\" width=\"80\" height=\"80\" /></strong>插件推荐</h5>\n<p>插件安装器现在会为您推荐值得一试的插件。推荐是基于您和其他用户已经安装的插件做出的。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">引擎盖下</h2>\n<h5>复杂查询</h5>\n<p>元数据、日期和信息查询现已支持高级条件逻辑，如嵌套语句和多种操作符——<code>A AND ( B OR C )</code>。</p>\n<h5>定制器API</h5>\n<p>定制器现在能够根据当前预览的页面有条件地显示面板和小节。</p>\n<h5>主题中的<code>&lt;title&gt;</code>标签</h5>\n<p><code>add_theme_support( \'title-tag\' )</code>让WordPress来处理复杂的页面标题。</p>\n<h5>开发者参考</h5>\n<p>通过对内联代码文档的改善，<a href=\"https://developer.wordpress.org/reference/\">开发者参考</a>现在比以往任何时候都更完整。</p>\n<hr />\n<h2 style=\"text-align: center;margin: 15px 0 20px;font-family: sans-serif;font-size: 26px\">合唱团</h2>\n<p>本次发布由<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>领头，并得到了如下个人的帮助。在您喜欢的音乐服务中听听黛娜·华盛顿，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/akumria\">akumria</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/momo360modena\">Amaury Balmer</a>、<a href=\"https://profiles.wordpress.org/amruta123b\">Amruta Bhosale</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andg\">Andrea Gandino</a>、<a href=\"https://profiles.wordpress.org/sumobi\">Andrew Munro (sumobi)</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/andrewryno\">Andrew Ryno</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/antpb\">antpb</a>、<a href=\"https://profiles.wordpress.org/arippberger\">arippberger</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/bainternet\">Bainternet</a>、<a href=\"https://profiles.wordpress.org/barrykooij\">Barry Kooij</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/benjmay\">Ben May</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/birgire\">Birgir Erlendsson (birgire)</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone B. Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/briandichiara\">Brian DiChiara</a>、<a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>、<a href=\"https://profiles.wordpress.org/bswatson\">Brian Watson</a>、<a href=\"https://profiles.wordpress.org/camdensegal\">Camden Segal</a>、<a href=\"https://profiles.wordpress.org/captaintheme\">Captain Theme</a>、<a href=\"https://profiles.wordpress.org/hiwhatsup\">Carlos Zuniga</a>、<a href=\"https://profiles.wordpress.org/caspie\">Caspie</a>、<a href=\"https://profiles.wordpress.org/ccprice\">ccprice</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/aprea\">Chris Aprea</a>、<a href=\"https://profiles.wordpress.org/chrisbliss18\">Chris Jean</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>、<a href=\"https://profiles.wordpress.org/jazzs3quence\">Chris Reynolds</a>、<a href=\"https://profiles.wordpress.org/chriscct7\">chriscct7</a>、<a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>、<a href=\"https://profiles.wordpress.org/cfoellmann\">Christian Foellmann</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/cyclometh\">Corey Snow</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/curtjen\">curtjen</a>、<a href=\"https://profiles.wordpress.org/colorful-tones\">Damon Cook</a>、<a href=\"https://profiles.wordpress.org/dancameron\">Dan Cameron</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/convissor\">Daniel Convissor</a>、<a href=\"https://profiles.wordpress.org/nerrad\">Darren Ethier (nerrad)</a>、<a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>、<a href=\"https://profiles.wordpress.org/dmchale\">Dave McHale</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/davidjlaietta\">David Laietta</a>、<a href=\"https://profiles.wordpress.org/technical_mastermind\">David Wood</a>、<a href=\"https://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>、<a href=\"https://profiles.wordpress.org/dcavins\">dcavins</a>、<a href=\"https://profiles.wordpress.org/realloc\">Dennis Ploetner</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/wedi\">Dirk Weise</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dominikschwind-1\">Dominik Schwind</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustyf\">Dustin Filippini</a>、<a href=\"https://profiles.wordpress.org/dustinhartzler\">Dustin Hartzler</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ew_holmes\">Eric Holmes</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/florianziegler\">florianziegler</a>、<a href=\"https://profiles.wordpress.org/hereswhatidid\">Gabe Shackle</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>、<a href=\"https://profiles.wordpress.org/babbardel\">George Olaru</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/gregrickaby\">Greg Rickaby</a>、<a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/hardy101\">hardy101</a>、<a href=\"https://profiles.wordpress.org/hauvong\">hauvong</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/heshiming\">heshiming</a>、<a href=\"https://profiles.wordpress.org/honeysilvas\">honeysilvas</a>、<a href=\"https://profiles.wordpress.org/hugodelgado\">hugodelgado</a>、<a href=\"https://profiles.wordpress.org/iandstewart\">Ian Stewart</a>、<a href=\"https://profiles.wordpress.org/ianmjones\">ianmjones</a>、<a href=\"https://profiles.wordpress.org/igmoweb\">Ignacio Cruz Moreno</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/ivankristianto\">Ivan Kristianto</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jaimieolmstead\">jaimieolmstead</a>、<a href=\"https://profiles.wordpress.org/jakubtyrcha\">jakub.tyrcha</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/japh\">Japh</a>、<a href=\"https://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>、<a href=\"https://profiles.wordpress.org/jarednova\">jarednova</a>、<a href=\"https://profiles.wordpress.org/jeanyoungkim\">jeanyoungkim</a>、<a href=\"https://profiles.wordpress.org/jfarthing84\">Jeff Farthing</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jeherve\">Jeremy Herve</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>、<a href=\"https://profiles.wordpress.org/jipmoors\">jipmoors</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joemcgill\">Joe McGill</a>、<a href=\"https://profiles.wordpress.org/johneckman\">John Eckman</a>、<a href=\"https://profiles.wordpress.org/johnrom\">johnrom</a>、<a href=\"https://profiles.wordpress.org/johnstonphilip\">johnstonphilip</a>、<a href=\"https://profiles.wordpress.org/jb510\">Jon Brown</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jbrinley\">Jonathan Brinley</a>、<a href=\"https://profiles.wordpress.org/desrosj\">Jonathan Desrosiers</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>、<a href=\"https://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>、<a href=\"https://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>、<a href=\"https://profiles.wordpress.org/jrf\">jrf</a>、<a href=\"https://profiles.wordpress.org/julien731\">julien731</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kaito</a>、<a href=\"https://profiles.wordpress.org/kamelkev\">kamelkev</a>、<a href=\"https://profiles.wordpress.org/karpstrucking\">karpstrucking</a>、<a href=\"https://profiles.wordpress.org/keesiemeijer\">keesiemeijer</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kdoran\">Kiko Doran</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kosvrouvas\">Kostas Vrouvas</a>、<a href=\"https://profiles.wordpress.org/kraftner\">kraftner</a>、<a href=\"https://profiles.wordpress.org/kristastevens\">kristastevens</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/offereins\">Laurens Offereins</a>、<a href=\"https://profiles.wordpress.org/linuxologos\">linuxologos</a>、<a href=\"https://profiles.wordpress.org/ideag\">Liuiza Arunas</a>、<a href=\"https://profiles.wordpress.org/loushou\">loushou</a>、<a href=\"https://profiles.wordpress.org/latz\">Lutz Schroer</a>、<a href=\"https://profiles.wordpress.org/manoz69\">Manoz69</a>、<a href=\"https://profiles.wordpress.org/mantismamita\">mantismamita</a>、<a href=\"https://profiles.wordpress.org/marcosf\">marco</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>、<a href=\"https://profiles.wordpress.org/landakram\">Mark Hudnall</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/senff\">Mark Senff</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marsjaninzmarsa\">marsjaninzmarsa</a>、<a href=\"https://profiles.wordpress.org/matveb\">Matias Ventura</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattkeys\">mattkeys</a>、<a href=\"https://profiles.wordpress.org/mlteal\">Maura Teal</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/merty\">Mert Yazicioglu</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/tw2113\">Michael Beckwith</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/smashcut\">Michael Pick</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/chellycat\">Michelle Langston</a>、<a href=\"https://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>、<a href=\"https://profiles.wordpress.org/studionashvegas\">Mitch Canter (studionashvegas)</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/mvd7793\">mvd7793</a>、<a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>、<a href=\"https://profiles.wordpress.org/nikolovtmw\">Nikola Nikolov</a>、<a href=\"https://profiles.wordpress.org/nobleclem\">nobleclem</a>、<a href=\"https://profiles.wordpress.org/noplanman\">noplanman</a>、<a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/p_enrique\">p_enrique</a>、<a href=\"https://profiles.wordpress.org/pushplaybang\">Paul</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/peterchester\">Peter Chester</a>、<a href=\"https://profiles.wordpress.org/donutz\">Peter J. Herrel</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/peterwilsoncc\">Peter Wilson</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/phpmypython\">phpmypython</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/psycleuk\">psycleuk</a>、<a href=\"https://profiles.wordpress.org/ptahdunbar\">Ptah Dunbar</a>、<a href=\"https://profiles.wordpress.org/quietnic\">quietnic</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/ramiy\">Rami Yushuvaev</a>、<a href=\"https://profiles.wordpress.org/ramiabraham\">ramiabraham</a>、<a href=\"https://profiles.wordpress.org/greuben\">Reuben Gunday</a>、<a href=\"https://profiles.wordpress.org/rianrietveld\">Rian Rietveld</a>、<a href=\"https://profiles.wordpress.org/richardmtl\">Richard Archambault</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/ryankienstra\">Ryan Kienstra</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/sakinshrestha\">Sakin Shrestha</a>、<a href=\"https://profiles.wordpress.org/samhotchkiss\">Sam Hotchkiss</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sc0ttkclark\">Scott Kingsley Clark</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shooper\">Shawn Hooper</a>、<a href=\"https://profiles.wordpress.org/simonp303\">Simon Pollard</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/skaeser\">skaeser</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/socki03\">socki03</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevegrunwell\">Steve Grunwell</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/tacoverdo\">TacoVerdo</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie</a>、<a href=\"https://profiles.wordpress.org/tareq1988\">Tareq Hasan</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/ipm-frommen\">Thorsten Frommen</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tschutter\">Tobias Schutter</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tmtrademark\">Toby McKes</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/tomasm\">Tomas Mackevicius</a>、<a href=\"https://profiles.wordpress.org/tomharrigan\">TomHarrigan</a>、<a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/transom\">transom</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/tywayne\">Ty Carlson</a>、<a href=\"https://profiles.wordpress.org/desaiuditd\">Udit Desai</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>、<a href=\"https://profiles.wordpress.org/vlajos\">vlajos</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/nobinobi\">Yuta Sekine</a>、<a href=\"https://profiles.wordpress.org/zrothauser\">Zack Rothauser</a>和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。<br />\n本次发布得到了283人的贡献，再次创下新高。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。</p>\n<p>感谢您选择WordPress。节日快乐，我们4.2见！\n</p></div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"https://cn.wordpress.org/2014/12/23/dinah/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"29\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 4.0.1安全更新\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 Nov 2014 03:51:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"https://cn.wordpress.org/?p=942\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"WordPress 4.0.1简体中文版现已可用。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3034:\"<p>WordPress 4.0.1现已发布，这是一次对所有较早版本的<strong>重要安全更新</strong>，我们强烈建议您立即升级您的站点。</p>\n<p>支持后台自动更新的站点将在未来几个小时内被自动升级到WordPress 4.0.1。如果您仍在使用WordPress 3.9.2、3.8.4或3.7.4，请升级到3.9.3、3.8.5或3.7.5来保证您站点的安全性。（我们不对旧版本提供支持，所以也请考虑升级到4.0.1来使用我们最新最强大的版本。）</p>\n<p>WordPress 3.9.2与更早版本均受一严重的跨站脚本漏洞影响，可能使匿名用户危害站点安全。此漏洞由<a href=\"http://klikki.fi/\">Jouko Pynnonen</a>报告。这项问题并不影响4.0版，但4.0.1版也修正了如下8个安全问题：</p>\n<ul>\n<li>三个可被网站文章作者利用的跨站脚本问题，由<a href=\"http://joncave.co.uk/\">Jon Cave</a>、<a href=\"http://www.miqrogroove.com/\">Robert Chapin</a>与WordPress安全团队的<a href=\"https://johnblackbourn.com/\">John Blackbourn</a>发现。</li>\n<li>一个可能被用来诱使用户修改密码的跨站请求伪造。</li>\n<li>一项在检查密码时可能引发拒绝服务的问题，由<a href=\"http://www.behindthefirewalls.com/\">Javier Nieto Arevalo</a>与<a href=\"http://www.devconsole.info/\">Andres Rojas Guerrero</a>发现。</li>\n<li>在WordPress发起HTTP请求时对服务器侧请求伪造攻击的额外防护，由Ben Bidner（vortfu）报告。</li>\n<li>一项极不可能发生的散列碰撞，可能导致2008年之后从未登录过的账户被盗，由<a href=\"http://david.dw-perspective.org.uk/\">David Anderson</a>报告。</li>\n<li>WordPress现在会在用户想起密码、登录并修改电子邮件地址后使早前发出的密码重设邮件中的链接失效，由<a href=\"https://twitter.com/MomenBassel\">Momen Bassel</a>、<a href=\"http://c0dehouse.blogspot.in/\">Tanoy Bose</a>与<a href=\"https://managewp.com/\">ManageWP的Bojan Slavković</a>独立报告。</li>\n</ul>\n<p>4.0.1版也修正了4.0中的23个bug，我们也做出了两项强化修改，包括在从上传的照片中提取EXIF数据时进行更好的验证，由<a href=\"http://www.securesolutions.no/\">Chris Andrè Dale</a>报告。</p>\n<p>我们感谢这些问题被<a href=\"https://codex.wordpress.org/FAQ_Security\">负责任地透漏</a>给我们的安全小组。要获取更多信息，请参见<a href=\"https://codex.wordpress.org/Version_4.0.1\">发布说明</a>或查阅<a href=\"https://core.trac.wordpress.org/log/branches/4.0?rev=30475&amp;stop_rev=29710\">修改列表</a>。</p>\n<p><a href=\"https://cn.wordpress.org/releases/\">下载WordPress 4.0.1简体中文版</a>或在仪表盘→更新中点击“现在更新”。</p>\n<p><em>已经在测试WordPress 4.1了？包含这些安全更新的beta 2现已发布（<a href=\"https://wordpress.org/wordpress-4.1-beta2.zip\">zip</a>）。更多有关4.1的信息，请参见<a href=\"https://wordpress.org/news/2014/11/wordpress-4-1-beta-1/\">beta 1发布说明</a>。</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://cn.wordpress.org/2014/11/21/wordpress-4-0-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"20\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n\n\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:8:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 4.0“Benny”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://cn.wordpress.org/2014/09/05/benny/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2014/09/05/benny/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 05 Sep 2014 00:38:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://cn.wordpress.org/?p=925\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 4.0简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"enclosure\";a:2:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:40:\"http://s.w.org/images/core/4.0/embed.mp4\";s:6:\"length\";s:7:\"3521313\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:3:\"url\";s:40:\"http://s.w.org/images/core/4.0/focus.mp4\";s:6:\"length\";s:7:\"5181557\";s:4:\"type\";s:9:\"video/mp4\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23155:\"<div style=\"width: 692px\">\nWordPress 4.0简体中文版现已<a href=\"https://cn.wordpress.org/wordpress-4.0-zh_CN.zip\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Benny”，以纪念<a href=\"https://zh.wikipedia.org/wiki/%E7%8F%AD%E5%B0%BC%C2%B7%E5%8F%A4%E5%BE%B7%E6%9B%BC\">本尼·古德曼</a>，爵士单簧管家和乐队指挥。这次发布为您带来了更顺滑的写作和管理体验，我们希望您喜欢。<br />\n<div id=\"v-bUdzKMro-1\" class=\"video-player\"><embed id=\"v-bUdzKMro-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.04&amp;guid=bUdzKMro&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" title=\"Introducing WordPress 4.0 &quot;Benny&quot;\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div></p>\n<hr />\n<h2>优雅地管理媒体</h2>\n<p><img class=\"alignnone size-full wp-image-3316\"  src=\"//i0.wp.com/i0.wp.com/wordpress.org/news/files/2014/09/media.jpg?resize=692%2C406\" alt=\"媒体库\" width=\"632\" height=\"371\" /><br />\n在美丽、无尽的网格中浏览您上传的文件。无论您想查看或编辑多少文件，新的详情预览都能使这一过程无比迅捷。</p>\n<hr />\n<h2>管理嵌入现在前所未有地简单</h2>\n<div style=\"width: 640px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-925-2\" width=\"640\" height=\"360\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.0/embed.mp4?_=2\" /><a href=\"https://s.w.org/images/core/4.0/embed.mp4\">https://s.w.org/images/core/4.0/embed.mp4</a></video></div>\n<p>在空行中粘贴一行YouTube URL，它就会魔术般地变成嵌入视频。现在用一条tweet试试。是的——嵌入现在变成了视觉体验。编辑器现在能够显示嵌入内容的真实预览，为您节约时间，也给您自信。</p>\n<p>我们也增加了默认支持的服务数量——您现在可以嵌入来自CollegeHumor的视频、来自YouTube的播放列表和来自TED的演讲。<a href=\"https://codex.wordpress.org/Embeds\">查阅所有WordPress支持的嵌入</a>。</p>\n<hr />\n<h2>专注于您的内容</h2>\n<div style=\"width: 640px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-925-3\" width=\"640\" height=\"360\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"https://s.w.org/images/core/4.0/focus.mp4?_=3\" /><a href=\"https://s.w.org/images/core/4.0/focus.mp4\">https://s.w.org/images/core/4.0/focus.mp4</a></video></div>\n<p>写作和编辑现在变得更顺滑、更身临其境。随着您的写作，编辑器将会自动扩展来适应您的内容，并保证格式工具总是可用。</p>\n<hr />\n<h2>寻找正确的插件</h2>\n<p><img class=\"aligncenter size-large wp-image-3309\"  src=\"//i0.wp.com/i0.wp.com/wordpress.org/news/files/2014/09/add-plugin1.png?resize=692%2C405\" alt=\"添加插件\" width=\"632\" height=\"370\" /><br />\nWordPress的插件目录中现在有多于30,000个免费且开源的插件。WordPress 4.0通过加入新的条件、改善的搜索器和更可视化的浏览体验使找到符合您需要的插件变得更简单。</p>\n<hr />\n<h2>乐团</h2>\n<p>本次发布由<a href=\"http://helenhousandi.com/\">Helen Hou-Sandí</a>领头，并得到了以下优秀个人的协助。本次发布有275名贡献者参与，创下新高。在您喜欢的音乐服务中找找本尼·古德曼，并看看下面这些个人资料吧：</p>\n<p><a href=\"https://profiles.wordpress.org/sharonaustin\">_Redd</a>、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>、<a href=\"https://profiles.wordpress.org/alexanderrohmann\">Alexander Rohmann</a>、<a href=\"https://profiles.wordpress.org/aliso\">Alison Barrett</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/amit\">Amit Gupta</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/andrezrv\">Andres Villarreal</a>、<a href=\"https://profiles.wordpress.org/zamfeer\">Andrew Mowe</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/arnee\">arnee</a>、<a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>、<a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>、<a href=\"https://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/bramd\">bramd</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/krogsgard\">Brian Krogsgard</a>、<a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>、<a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>、<a href=\"https://profiles.wordpress.org/camdensegal\">Camden Segal</a>、<a href=\"https://profiles.wordpress.org/lukecarbis\">Carbis</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>、<a href=\"https://profiles.wordpress.org/caxelsson\">Christian Axelsson</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/boda1982\">Christopher Spires</a>、<a href=\"https://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>、<a href=\"https://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>、<a href=\"https://profiles.wordpress.org/ghost1227\">Dan Griffiths</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/danielhuesken\">Daniel Husken</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>、<a href=\"https://profiles.wordpress.org/dkotter\">Darin Kotter</a>、<a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>、<a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>、<a href=\"https://profiles.wordpress.org/dnaber-de\">David Naber</a>、<a href=\"https://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>、<a href=\"https://profiles.wordpress.org/debaat\">DeBAAT</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/donncha\">Donncha O Caoimh</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dustyn\">Dustyn Doyle</a>、<a href=\"https://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>、<a href=\"https://profiles.wordpress.org/edwin-at-studiojoyocom\">Edwin Siebel</a>、<a href=\"https://profiles.wordpress.org/ehg\">ehg</a>、<a href=\"https://profiles.wordpress.org/tmeister\">Enrique Chavez</a>、<a href=\"https://profiles.wordpress.org/erayalakese\">erayalakese</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>、<a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>、<a href=\"https://profiles.wordpress.org/fab1en\">Fabien Quatravaux</a>、<a href=\"https://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>、<a href=\"https://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/garhdez\">garhdez</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/garza\">garza</a>、<a href=\"https://profiles.wordpress.org/gauravmittal1995\">gauravmittal1995</a>、<a href=\"https://profiles.wordpress.org/gavra\">Gavrisimo</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/vancoder\">Grant Mangham</a>、<a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>、<a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>、<a href=\"https://profiles.wordpress.org/harrym\">harrym</a>、<a href=\"https://profiles.wordpress.org/hebbet\">hebbet</a>、<a href=\"https://profiles.wordpress.org/hinnerk\">Hinnerk Altenburg</a>、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>、<a href=\"https://profiles.wordpress.org/iljoja\">iljoja</a>、<a href=\"https://profiles.wordpress.org/imath\">imath</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/issuu\">issuu</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/jackreichert\">Jack Reichert</a>、<a href=\"https://profiles.wordpress.org/jacobdubail\">Jacob Dubail</a>、<a href=\"https://profiles.wordpress.org/janhenkg\">JanHenkG</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>、<a href=\"https://profiles.wordpress.org/jaza613\">Jaza613</a>、<a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>、<a href=\"https://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (jerrysarcastic)</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jesper800\">Jesper van Engelen</a>、<a href=\"https://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>、<a href=\"https://profiles.wordpress.org/jgadbois\">jgadbois</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/jkudish\">Joey Kudish</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnzanussi\">John Zanussi</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>、<a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>、<a href=\"https://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>、<a href=\"https://profiles.wordpress.org/greenshady\">Justin Tadlock</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/ixkaito\">Kaito</a>、<a href=\"https://profiles.wordpress.org/kapeels\">kapeels</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>、<a href=\"https://profiles.wordpress.org/kworthington\">Kevin Worthington</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>、<a href=\"https://profiles.wordpress.org/layotte\">Lew Ayotte</a>、<a href=\"https://profiles.wordpress.org/lritter\">lritter</a>、<a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>、<a href=\"https://profiles.wordpress.org/m_i_n\">m_i_n</a>、<a href=\"https://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>、<a href=\"https://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>、<a href=\"https://profiles.wordpress.org/clorith\">Marius Jensen (Clorith)</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mdbitz\">Matthew Denton</a>、<a href=\"https://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/meekyhwang\">meekyhwang</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/midxcat\">mi_cat</a>、<a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>、<a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>、<a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/mikemanger\">Mike Manger</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mnelson4\">mnelson4</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>、<a href=\"https://profiles.wordpress.org/mrmist\">mrmist</a>、<a href=\"https://profiles.wordpress.org/m_uysl\">Mustafa Uysal</a>、<a href=\"https://profiles.wordpress.org/muvimotv\">MuViMoTV</a>、<a href=\"https://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>、<a href=\"https://profiles.wordpress.org/namibia\">Namibia</a>、<a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>、<a href=\"https://profiles.wordpress.org/nd987\">nd987</a>、<a href=\"https://profiles.wordpress.org/neil_pie\">Neil Pie</a>、<a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/schoenwaldnils\">Nils Schonwald</a>、<a href=\"https://profiles.wordpress.org/ninos-ego\">Ninos</a>、<a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>、<a href=\"https://profiles.wordpress.org/compute\">Patrick Hesselberg</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/pdclark\">Paul Clark</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/paulschreiber\">paulschreiber</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/philipjohn\">Philip John</a>、<a href=\"https://profiles.wordpress.org/senlin\">Piet</a>、<a href=\"https://profiles.wordpress.org/psoluch\">Piotr Soluch</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/purzlbaum\">purzlbaum</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>、<a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/rob1n\">rob1n</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>、<a href=\"https://profiles.wordpress.org/harmr\">RobertHarm</a>、<a href=\"https://profiles.wordpress.org/rohan013\">Rohan Rawat</a>、<a href=\"https://profiles.wordpress.org/rhurling\">Rouven Hurling</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/sammybeats\">Sam Brodie</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sathishn\">sathishn</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>、<a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shanebp\">shanebp</a>、<a href=\"https://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/simonp303\">simonp303</a>、<a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/sphoid\">sphoid</a>、<a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stompweb\">Steven Jones</a>、<a href=\"https://profiles.wordpress.org/strangerstudios\">strangerstudios</a>、<a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>、<a href=\"https://profiles.wordpress.org/sumobi\">sumobi</a>、<a href=\"https://profiles.wordpress.org/t4k1s\">t4k1s</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/taylorde\">Taylor Dewey</a>、<a href=\"https://profiles.wordpress.org/thomasvanderbeek\">Thomas van der Beek</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/codenameeli\">Tim &#8216;Eli&#8217; Dalbey</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>、<a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>、<a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>、<a href=\"https://profiles.wordpress.org/torresga\">torresga</a>、<a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/treyhunner\">treyhunner</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>、<a href=\"https://profiles.wordpress.org/vlajos\">vlajos</a>、<a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/winterdev\">winterDev</a>、<a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>、<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>和<a href=\"https://profiles.wordpress.org/zoerooney\">Zoe Rooney</a>。也感谢制作发行视频<a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a>，与制作音乐的Helen和<a href=\"http://adriansandi.com/\">Adrián Sandí</a>。</p>\n<p>如果您想帮忙，请查阅<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢选择WordPress，我们4.1见！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"https://cn.wordpress.org/2014/09/05/benny/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"39\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"WordPress 3.9“Smith”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"https://cn.wordpress.org/2014/04/19/smith/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://cn.wordpress.org/2014/04/19/smith/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 18 Apr 2014 17:43:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://cn.wordpress.org/?p=902\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 3.9简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23365:\"<div style=\"width: 692px\">\nWordPress 3.9简体中文版现已<a href=\"https://cn.wordpress.org/wordpress-3.9-zh_CN.zip\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Smith”，以纪念<a href=\"https://en.wikipedia.org/wiki/Jimmy_Smith_(musician)\">吉米·史密斯</a>，爵士风琴家。这次发布包含了众多细部修改，我们希望您喜欢。<br />\n<div id=\"v-sAiXhCfV-1\" class=\"video-player\"><embed id=\"v-sAiXhCfV-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.04&amp;guid=sAiXhCfV&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div></p>\n<h2 style=\"text-align: center\">更流畅的媒体编辑体验</h2>\n<p><img class=\"alignright\" src=\"https://wordpress.org/news/files/2014/04/editor1-300x233.jpg\" alt=\"编辑器\" width=\"228\" height=\"177\" /></p>\n<h3>改良的可视化编辑</h3>\n<p>新的可视化编辑器在速度、可用性、移动支持方面都有了进步。您现在可以从您的文字处理器中直接粘贴文本到可视化编辑器，无需再受杂乱的样式所困。（没错，我们在说你，Microsoft Word。）</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright\" src=\"https://wordpress.org/news/files/2014/04/image1-300x233.jpg\" alt=\"图像\" width=\"228\" height=\"178\" /></p>\n<h3>方便的图像编辑</h3>\n<p>裁剪和旋转工具更易访问，在您编辑文章时修改图像相比以往更加便捷。您也可在编辑器中缩放图像。</p>\n<div style=\"clear: both\"></div>\n<p><img class=\"alignright\" src=\"https://wordpress.org/news/files/2014/04/dragdrop1-300x233.jpg\" alt=\"拖放\" width=\"228\" height=\"178\" /></p>\n<h3>拖放您的图像</h3>\n<p>上传图像变得更简单，直接从桌面上拖放到编辑器中即可。</p>\n<div style=\"clear: both\"></div>\n<hr />\n<h2 style=\"text-align: center\">相册预览</h2>\n<p><img class=\"aligncenter size-full\" src=\"https://wordpress.org/news/files/2014/04/gallery1.jpg\" alt=\"gallery\" width=\"980\" height=\"550\" /><br />\n相册可在编辑器中展示能与已发布文章中的效果相媲美的图像网格。</p>\n<hr />\n<h2 style=\"text-align: center\">音频、视频的新花样</h2>\n<p>\n<a href=\'https://cn.wordpress.org/files/2014/04/AintMisbehavin.mp3\'>Ain\'t Misbehavin\'</a>\n<a href=\'https://cn.wordpress.org/files/2014/04/DavenportBlues.mp3\'>Davenport Blues</a>\n<a href=\'https://cn.wordpress.org/files/2014/04/JellyRollMorton-BuddyBoldensBlues.mp3\'>Buddy Bolden\'s Blues</a>\n<a href=\'https://cn.wordpress.org/files/2014/04/Johnny_Hodges_Orchestra-Squaty_Roo-1941.mp3\'>Squaty Roo</a>\n<a href=\'https://cn.wordpress.org/files/2014/04/Louisiana_Five-Dixie_Blues-1919.mp3\'>Dixie Blues</a>\n<a href=\'https://cn.wordpress.org/files/2014/04/WolverineBlues.mp3\'>Wolverine Blues</a>\n<br />\n图像属于相册，现在我们也对视频和音频加入了简单的播放列表，您可以方便地展示您的音乐和视频片段。</p>\n<hr />\n<h2 style=\"text-align: center\">实时挂件和顶部图像预览</h2>\n<div style=\"width: 692px\" class=\"wp-video\"><a href=\"//wordpress.org/news/files/2014/04/widgets.mp4\">//wordpress.org/news/files/2014/04/widgets.mp4</a></div>\n<p>在主题编辑器中添加、编辑并重排您站点的挂件，不再有出乎意料——实时预览您的修改，在您放心后才保存。经改善的顶部图像工具让您在自定义主题时可以上传、裁剪并管理顶部图像。</p>\n<hr />\n<h2 style=\"text-align: center\">令人惊叹的主题浏览器</h2>\n<p><img class=\"aligncenter size-full\" src=\"https://wordpress.org/news/files/2014/04/theme1.jpg\" alt=\"theme\" width=\"1003\" height=\"558\" /><br />\n寻找新主题应当是一项令人愉快的任务，通过崭新的主题浏览器漫游WordPress.org提供的无数免费主题吧。</p>\n<hr />\n<h2 style=\"text-align: center\">船员们</h2>\n<p>此次发布由<a href=\"http://nacin.com/\">Andrew Nacin</a>与<a href=\"http://www.getsource.net/\">Mike Schroder</a>牵头，并得到了以下这些优秀个人的帮助。共有267名贡献者参与了这次发布，历史新高：<br />\n<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/kawauso\">Adam Harley</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>、<a href=\"https://profiles.wordpress.org/adelval\">adelval</a>、<a href=\"https://profiles.wordpress.org/ajay\">Ajay</a>、<a href=\"https://profiles.wordpress.org/akeda\">Akeda Bagus</a>、<a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>、<a href=\"https://profiles.wordpress.org/aliso\">Alison Barrett</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/rarst\">Andrey &#8220;Rarst&#8221; Savchenko</a>、<a href=\"https://profiles.wordpress.org/andykeith\">Andy Keith</a>、<a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>、<a href=\"https://profiles.wordpress.org/barry\">Barry</a>、<a href=\"https://profiles.wordpress.org/toszcze\">Bartosz Romanowski</a>、<a href=\"https://profiles.wordpress.org/bassgang\">bassgang</a>、<a href=\"https://profiles.wordpress.org/bcworkz\">bcworkz</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>、<a href=\"https://profiles.wordpress.org/bigdawggi\">bigdawggi</a>、<a href=\"https://profiles.wordpress.org/bobbravo2\">Bob Gregor</a>、<a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>、<a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>、<a href=\"https://profiles.wordpress.org/bradparbs\">bradparbs</a>、<a href=\"https://profiles.wordpress.org/bramd\">bramd</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/brasofilo\">brasofilo</a>、<a href=\"https://profiles.wordpress.org/bravokeyl\">bravokeyl</a>、<a href=\"https://profiles.wordpress.org/bpetty\">Bryan Petty</a>、<a href=\"https://profiles.wordpress.org/cgaffga\">cgaffga</a>、<a href=\"https://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>、<a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>、<a href=\"https://profiles.wordpress.org/ehg\">Chris Blower</a>、<a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>、<a href=\"https://profiles.wordpress.org/chrisscott\">Chris Scott</a>、<a href=\"https://profiles.wordpress.org/chriseverson\">chriseverson</a>、<a href=\"https://profiles.wordpress.org/chrisguitarguy\">chrisguitarguy</a>、<a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>、<a href=\"https://profiles.wordpress.org/ciantic\">ciantic</a>、<a href=\"https://profiles.wordpress.org/cmmarslender\">cmmarslender</a>、<a href=\"https://profiles.wordpress.org/antorome\">Comparativa de Bancos</a>、<a href=\"https://profiles.wordpress.org/cojennin\">Connor Jennings</a>、<a href=\"https://profiles.wordpress.org/corvannoorloos\">Cor van Noorloos</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/cramdesign\">cramdesign</a>、<a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>、<a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>、<a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>、<a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>、<a href=\"https://profiles.wordpress.org/eightface\">Dave Kellam (eightface)</a>、<a href=\"https://profiles.wordpress.org/dpe415\">DaveE</a>、<a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>、<a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>、<a href=\"https://profiles.wordpress.org/davidmarichal\">David Marichal</a>、<a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/drprotocols\">DrProtocols</a>、<a href=\"https://profiles.wordpress.org/dustyf\">Dustin Filippini</a>、<a href=\"https://profiles.wordpress.org/eatingrules\">eatingrules</a>、<a href=\"https://profiles.wordpress.org/plocha\">edik</a>、<a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>、<a href=\"https://profiles.wordpress.org/enej\">enej</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/evarlese\">Erica Varlese</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>、<a href=\"https://profiles.wordpress.org/fahmiadib\">Fahmi</a>、<a href=\"https://profiles.wordpress.org/fboender\">fboender</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>、<a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/genkisan\">genkisan</a>、<a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>、<a href=\"https://profiles.wordpress.org/vancoder\">Grant Mangham</a>、<a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky</a>、<a href=\"https://profiles.wordpress.org/hakre\">hakre</a>、<a href=\"https://profiles.wordpress.org/hanni\">hanni</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandí</a>、<a href=\"https://profiles.wordpress.org/ippetkov\">ippetkov</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jackreichert\">Jack Reichert</a>、<a href=\"https://profiles.wordpress.org/_jameslee\">jameslee</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/janrenn\">janrenn</a>、<a href=\"https://profiles.wordpress.org/jaycc\">JayCC</a>、<a href=\"https://profiles.wordpress.org/jeffsebring\">Jeff Sebring</a>、<a href=\"https://profiles.wordpress.org/jenmylo\">Jen Mylo</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/jnielsendotnet\">jnielsendotnet</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>、<a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/jond3r\">Jonas Bolinder (jond3r)</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>、<a href=\"https://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>、<a href=\"https://profiles.wordpress.org/jstraitiff\">jstraitiff</a>、<a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>、<a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/kasparsd\">Kaspars</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kerikae\">kerikae</a>、<a href=\"https://profiles.wordpress.org/kworthington\">Kevin Worthington</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>、<a href=\"https://profiles.wordpress.org/klihelp\">klihelp</a>、<a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/lkwdwrd\">lkwdwrd</a>、<a href=\"https://profiles.wordpress.org/lpointet\">lpointet</a>、<a href=\"https://profiles.wordpress.org/ldebrouwer\">Luc De Brouwer</a>、<a href=\"https://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>、<a href=\"https://profiles.wordpress.org/mark8barnes\">Mark Barnes</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/marventus\">Marventus</a>、<a href=\"https://profiles.wordpress.org/iammattthomas\">Matt (Thomas) Miklic</a>、<a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>、<a href=\"https://profiles.wordpress.org/mdbitz\">Matthew Denton</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/mattonomics\">mattonomics</a>、<a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>、<a href=\"https://profiles.wordpress.org/matveb\">Matías Ventura</a>、<a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>、<a href=\"https://profiles.wordpress.org/mcadwell\">mcadwell</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>、<a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>、<a href=\"https://profiles.wordpress.org/michelwppi\">Michel &#8211; xiligroup dev</a>、<a href=\"https://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>、<a href=\"https://profiles.wordpress.org/gradyetc\">Mike Burns</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikemanger\">Mike Manger</a>、<a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/mikecorkum\">mikecorkum</a>、<a href=\"https://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>、<a href=\"https://profiles.wordpress.org/nendeb55\">nendeb55</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nicolealleyinteractivecom\">Nicole Arnold</a>、<a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>、<a href=\"https://profiles.wordpress.org/nivijah\">nivijah</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">nofearinc</a>、<a href=\"https://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>、<a href=\"https://profiles.wordpress.org/olivm\">olivM</a>、<a href=\"https://profiles.wordpress.org/jbkkd\">Omer Korner</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/oso96_2000\">oso96_2000</a>、<a href=\"https://profiles.wordpress.org/patricknami\">patricknami</a>、<a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>、<a href=\"https://profiles.wordpress.org/djpaul\">Paul Gibbs</a>、<a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>、<a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>、<a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>、<a href=\"https://profiles.wordpress.org/prettyboymp\">prettyboymp</a>、<a href=\"https://profiles.wordpress.org/raamdev\">Raam Dev</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">rachelbaker</a>、<a href=\"https://profiles.wordpress.org/mauryaratan\">Ram Ratan Maurya</a>、<a href=\"https://profiles.wordpress.org/ramonchiara\">ramonchiara</a>、<a href=\"https://profiles.wordpress.org/ounziw\">Rescuework Support</a>、<a href=\"https://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>、<a href=\"https://profiles.wordpress.org/ricardocorreia\">Ricardo Correia</a>、<a href=\"https://profiles.wordpress.org/theorboman\">Richard Sweeney</a>、<a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>、<a href=\"https://profiles.wordpress.org/richard2222\">richard2222</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>、<a href=\"https://profiles.wordpress.org/robmiller\">robmiller</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/romaimperator\">romaimperator</a>、<a href=\"https://profiles.wordpress.org/roothorick\">roothorick</a>、<a href=\"https://profiles.wordpress.org/ruudjoyo\">ruud@joyo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>、<a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sandyr\">Sandeep</a>、<a href=\"https://profiles.wordpress.org/scottlee\">Scott Lee</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/sdasse\">sdasse</a>、<a href=\"https://profiles.wordpress.org/bootsz\">Sean Butze</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>、<a href=\"https://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shahpranaf\">shahpranaf</a>、<a href=\"https://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>、<a href=\"https://profiles.wordpress.org/shinichin\">ShinichiN</a>、<a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/siobhyb\">Siobhan Bamber (siobhyb)</a>、<a href=\"https://profiles.wordpress.org/sirzooro\">sirzooro</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/sonjanyc\">sonjanyc</a>、<a href=\"https://profiles.wordpress.org/spencerfinnell\">Spencer Finnell</a>、<a href=\"https://profiles.wordpress.org/piontkowski\">Spencer Piontkowski</a>、<a href=\"https://profiles.wordpress.org/stephcook22\">stephcook22</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/sbruner\">Steve Bruner</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>、<a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>、<a href=\"https://profiles.wordpress.org/tbrams\">tbrams</a>、<a href=\"https://profiles.wordpress.org/tellyworth\">tellyworth</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tomauger\">Tom Auger</a>、<a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>、<a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>、<a href=\"https://profiles.wordpress.org/topquarky\">topquarky</a>、<a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>、<a href=\"https://profiles.wordpress.org/toru\">Toru</a>、<a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>、<a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>、<a href=\"https://profiles.wordpress.org/undergroundnetwork\">undergroundnetwork</a>、<a href=\"https://profiles.wordpress.org/varunagw\">VarunAgw</a>、<a href=\"https://profiles.wordpress.org/wawco\">wawco</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/wokamoto\">wokamoto</a>、<a href=\"https://profiles.wordpress.org/xsonic\">xsonic</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/yurivictor\">Yuri Victor</a>、<a href=\"https://profiles.wordpress.org/zbtirrell\">Zach Tirrell</a>和<a href=\"https://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>。同时感谢<a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a>制作了发行视频。</p>\n<p>如果您想帮忙，请查看<a href=\"https://make.wordpress.org/\">Make WordPress</a>和我们的<a href=\"https://make.wordpress.org/core/\">核心开发博客</a>。感谢选择WordPress，我们在4.0版等您！\n</div>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"https://cn.wordpress.org/2014/04/19/smith/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"67\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 3.8.3维护更新\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2014/04/15/wordpress-3-8-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://cn.wordpress.org/2014/04/15/wordpress-3-8-3/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 15 Apr 2014 05:33:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://cn.wordpress.org/?p=897\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"WordPress 3.8.3简体中文版现已可用。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1403:\"<p>WordPress 3.8.3现已发布，修正了<a href=\"https://wordpress.org/news/2014/04/wordpress-3-8-2/\">WordPress 3.8.2安全更新</a>中的一个bug。</p>\n<p>仪表盘中的“快速草稿”工具在3.8.2中未能正常工作，在您使用它时，您的草稿将不会被保存。尽管我们觉得不会有人用这个工具写小说，但<em>任何</em>数据丢失对我们来说都是不能接受的。</p>\n<p>我们认识到您对我们的信任，并且我们认真对待这份责任。我们对让您失望诚致歉意。</p>\n<p>仍<em>有可能</em>您上周丢失的快速草稿还在数据库中，只是您看不到它。然而，这些“丢弃的草稿”通常会在7天后被删除，而现在离我们上次发布已经过了6天。如果我们有幸救回您的草稿，您将会于更新后在“所有文章”界面看到它。（我们也将在后台推送3.8.3，所以可能您会发现列表中突然出现了一篇草稿。）</p>\n<p><a href=\"https://wordpress.org/download/\">下载WordPress 3.8.3</a>（<a href=\"https://cn.wordpress.org/wordpress-3.8.3-zh_CN.zip\">简体中文版</a>）或在仪表盘→更新中点击“现在更新”。</p>\n<p><em>这个bug也影响了3.7.2，所以我们发布了3.7.3版。但我们仍然希望您升级到最新版。</em></p>\n<hr />\n<p><em>Now for some good news:<br />\nWordPress 3.9 is near.<br />\nExpect it this week</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://cn.wordpress.org/2014/04/15/wordpress-3-8-3/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"34\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordPress 3.8.1维护更新\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2014/01/25/wordpress-3-8-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://cn.wordpress.org/2014/01/25/wordpress-3-8-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 25 Jan 2014 03:46:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://cn.wordpress.org/?p=894\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"WordPress 3.8.1简体中文版现已可用。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3832:\"<p>在WordPress 3.8发布逾六周，下载量<a href=\"https://wordpress.org/download/counter/\">逾9.3百万次</a>之后，我们很高兴能够发布WordPress 3.8.1。</p>\n<p>3.8.1版是为修正3.8中的31个bug而做出的维护更新，其中包含了对新仪表盘设计和主题管理屏幕的修正和改进。一项关于WP_Query中分类查询的问题已被修复。此外，如果您发现点击“提交”按钮后没有任何反应（或像我们中的某些人一样感到抓狂），请安心，我们已经发现并修复了这个问题。</p>\n<p>此版本也包含对<strong>嵌入推特</strong>（即将一条推特的URL置于单独的一行中）的修正，使其能够适应最近的Twitter API更新。（要查阅更多关于Embeds的资讯，请参见<a href=\"https://codex.wordpress.org/Embeds\">Codex</a>。）</p>\n<p>要查阅全部修改，请参见<a href=\"https://core.trac.wordpress.org/query?milestone=3.8.1\">工单列表</a>和<a href=\"https://core.trac.wordpress.org/log/branches/3.8?rev=27018&amp;stop_rev=26862\">修改历史</a>。此外，在开发博客上有关于此版本的<a href=\"https://make.wordpress.org/core/2014/01/22/wordpress-3-8-1-release-candidate/\">详细摘要</a>。</p>\n<p>如果您已经是WordPress 3.8的百万用户中的一员，我们将在未来几小时内为您自动在后台更新到WordPress 3.8.1。当然，这仅限<a href=\"https://wordpress.org/plugins/background-update-tester/\">支持后台更新</a>的站点。</p>\n<p><a href=\"https://wordpress.org/wordpress-3.8.1.zip\">下载WordPress 3.8.1</a>（<a href=\"https://cn.wordpress.org/wordpress-3.8.1-zh_CN.zip\">简体中文版</a>）或到管理后台的“仪表盘”→“更新”来升级。</p>\n<p>我们向以下对3.8.1做出贡献的人士致谢：</p>\n<p><a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>、<a href=\"https://profiles.wordpress.org/cojennin\">Connor Jennings</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>、<a href=\"https://profiles.wordpress.org/fboender\">fboender</a>、<a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>、<a href=\"https://profiles.wordpress.org/janrenn\">janrenn</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://wordpress.org/news/2014/01/wordpress-3-8-1/#\">José Pino</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/matveb\">Matias Ventura</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/iammattthomas\">Matt Thomas</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/nivijah\">nivijah</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/undergroundnetwork\">undergroundnetwork</a>和<a href=\"https://profiles.wordpress.org/yurivictor\">Yuri Victor</a>。</p>\n<p><em>WordPress three eight one<br />\nWe heard you didn’t like bugs<br />\nSo we took them out</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://cn.wordpress.org/2014/01/25/wordpress-3-8-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"65\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 3.8“Parker”\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:43:\"https://cn.wordpress.org/2013/12/13/parker/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://cn.wordpress.org/2013/12/13/parker/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 13 Dec 2013 07:27:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://cn.wordpress.org/?p=887\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 3.8简体中文版现已开放下载。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"jimmyxu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:17018:\"<p>WordPress 3.8简体中文版现已<a href=\"https://cn.wordpress.org/wordpress-3.8-zh_CN.zip\">开放下载</a>，或在您的WordPress仪表盘中升级。我们将此版本命名为“Parker”，以纪念<a href=\"https://zh.wikipedia.org/zh-cn/%E6%9F%A5%E5%88%A9%C2%B7%E5%B8%95%E5%85%8B\">查利·帕克</a>，波普爵士乐的先驱者。我们希望您能觉得这是迄今为止最美丽的更新。</p>\n<div id=\"v-6wORgoGb-1\" class=\"video-player\"><embed id=\"v-6wORgoGb-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.04&amp;guid=6wORgoGb&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<h2>向您介绍全新的现代设计</h2>\n<p><img alt=\"overview\"  src=\"//i2.wp.com/i0.wp.com/wpdotorg.files.wordpress.com/2013/12/overview.jpg?resize=623%2C193\" width=\"623\" height=\"193\" /><br />\nWordPress已经变得焕然一新。3.8给整个仪表盘带来了全新的外观。告别强盛的渐变和几十度灰——迎来更宏大、更大胆、更丰富多彩的设计！<br />\n<img alt=\"about-modern-wordpress\"  src=\"//i2.wp.com/i2.wp.com/wpdotorg.files.wordpress.com/2013/12/design.png?resize=623%2C151\" width=\"623\" height=\"151\" /></p>\n<h3>现代美学</h3>\n<p>新的WordPress仪表盘有着清新、整洁的设计，简洁明了。</p>\n<h3>干净排版</h3>\n<p>Open Sans字体提供了为桌面和移动浏览优化过的，简单、友好的文本。和WordPress一样，它也是开源的。</p>\n<h3>精致对比</h3>\n<p>我们认为漂亮的设计不应该以牺牲可读性为代价。凭借卓越的对比度和宽大舒适的排版，新的设计很容易阅读，浏览起来也是一种享受。</p>\n<hr />\n<h2>每台设备上的WordPress</h2>\n<p><img alt=\"responsive\"  src=\"//i2.wp.com/i2.wp.com/wpdotorg.files.wordpress.com/2013/12/responsive.jpg?resize=255%2C255\" width=\"255\" height=\"255\" />我们通过不同的方式访问互联网：智能手机、平板、笔记本电脑、台式机——不论您使用什么，WordPress都能妥善应对，让您宾至如归。</p>\n<h3>高清高速</h3>\n<p>通过使用矢量图标，WordPress比以往更锐利、更能适应您的屏幕。而且通过抛弃像素点，页面加载速度也获得显著提升。</p>\n<hr />\n<h2>让配色方案符合您的个性</h2>\n<p><img alt=\"colors\"  src=\"//i2.wp.com/i0.wp.com/wpdotorg.files.wordpress.com/2013/12/colors.jpg?resize=623%2C339\" width=\"623\" height=\"339\" /><br />\nWordPress的本次更新丰富多彩，我们为您提供了8种配色方案，总有一种适合您。</p>\n<p>您可在您的个人资料页面预览和修改配色方案。</p>\n<hr />\n<h2>精致的主题管理</h2>\n<p><img alt=\"themes\"  src=\"//i2.wp.com/i0.wp.com/wpdotorg.files.wordpress.com/2013/12/themes.jpg?resize=360%2C344\" width=\"360\" height=\"344\" />新的主题屏幕让您能对您的主题一览无余，您也可以点击以获得更多信息。键盘上的方向键现也可用于主题浏览。</p>\n<h3>流畅的小工具体验</h3>\n<p>通过新的设计，您即可告别以往不断的拖动。我们致力于精简小工具屏幕。</p>\n<p>有大监视器？多个挂件区域现可并排放置来使用空余空间。有平板电脑？轻触某一挂件来添加。</p>\n<hr />\n<h2>Twenty Fourteen，时髦的新杂志主题</h2>\n<h3><img alt=\"显示在笔记本电脑、平板电脑和手机中的全新Twenty Fourteen主题\"  src=\"//i2.wp.com/i0.wp.com/wpdotorg.files.wordpress.com/2013/12/twentyfourteen.jpg?resize=692%2C275\" width=\"692\" height=\"275\" /></h3>\n<h3>将您的博客变身为一本杂志</h3>\n<p>使用WordPress和Twenty Fourteen，您可以创建漂亮的杂志风格站点。选择特色内容在您主页的显示方式：网格还是滑块；通过三块挂件区域自定义您的站点；或是用两种页面模板修改您的布局。</p>\n<p>通过不妨害我们的简洁性的引人注目的设计，Twenty Fourteen是我们迄今为止最强悍的默认主题</p>\n<hr />\n<h2>新时代</h2>\n<p>本次发布由Matt Mullenweg牵头，这是我们第二次采用插件优先的开发模式，开发时间窗口也比以往更小。我们认为一切都很顺利。您可以在<a title=\"Make WordPress Core\" href=\"https://make.wordpress.org/core/\" target=\"_blank\">make/core博客</a>查阅当前正被开发的新功能。</p>\n<p>本次发布得到了175名贡献者的支持：</p>\n<p><a href=\"https://profiles.wordpress.org/aaronholbrook\">Aaron Holbrook</a>、<a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>、<a href=\"https://profiles.wordpress.org/adamsilverstein\">adamsilverstein</a>、<a href=\"https://profiles.wordpress.org/ahoereth\">Alexander Hoereth</a>、<a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>、<a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>、<a href=\"https://profiles.wordpress.org/aralbald\">Andrey Kabakchiev</a>、<a href=\"https://profiles.wordpress.org/apeatling\">Andy Peatling</a>、<a href=\"https://profiles.wordpress.org/ankitgadertcampcom\">Ankit Gade</a>、<a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>、<a href=\"https://profiles.wordpress.org/fliespl\">Arkadiusz Rzadkowolski</a>、<a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>、<a href=\"https://profiles.wordpress.org/bassgang\">bassgang</a>、<a href=\"https://profiles.wordpress.org/bananastalktome\">Billy (bananastalktome)</a>、<a href=\"https://profiles.wordpress.org/binarymoon\">binarymoon</a>、<a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>、<a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>、<a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>、<a href=\"https://profiles.wordpress.org/bpetty\">Bryan Petty</a>、<a href=\"https://profiles.wordpress.org/carldanley\">Carl Danley</a>、<a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>、<a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>、<a href=\"https://profiles.wordpress.org/dbernar1\">Dan Bernardic</a>、<a href=\"https://profiles.wordpress.org/danieldudzic\">danieldudzic</a>、<a href=\"https://profiles.wordpress.org/datafeedrcom\">datafeedrcom</a>、<a href=\"https://profiles.wordpress.org/drw158\">Dave Whitley</a>、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>、<a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling (ocean90)</a>、<a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>、<a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>、<a href=\"https://profiles.wordpress.org/dziudek\">dziudek</a>、<a href=\"https://profiles.wordpress.org/empireoflight\">Empireoflight</a>、<a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>、<a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>、<a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>、<a href=\"https://profiles.wordpress.org/evansolomon\">Evan Solomon</a>、<a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>、<a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>、<a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>、<a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>、<a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky</a>、<a href=\"https://profiles.wordpress.org/hanni\">hanni</a>、<a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandi</a>、<a href=\"https://profiles.wordpress.org/iandunn\">Ian Dunn</a>、<a href=\"https://profiles.wordpress.org/iblamefish\">iblamefish</a>、<a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>、<a href=\"https://profiles.wordpress.org/isaackeyet\">Isaac Keyet</a>、<a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>、<a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>、<a href=\"https://profiles.wordpress.org/janhenckens\">janhenckens</a>、<a href=\"https://profiles.wordpress.org/jblz\">Jeff Bowen</a>、<a href=\"https://profiles.wordpress.org/jeffr0\">Jeff Chandler</a>、<a href=\"https://profiles.wordpress.org/jenmylo\">Jen Mylo</a>、<a href=\"https://profiles.wordpress.org/buffler\">Jeremy Buller</a>、<a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>、<a href=\"https://profiles.wordpress.org/jeherve\">Jeremy Herve</a>、<a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>、<a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>、<a href=\"https://profiles.wordpress.org/jhned\">jhned</a>、<a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>、<a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>、<a href=\"https://profiles.wordpress.org/joen\">Joen Asmussen</a>、<a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>、<a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>、<a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>、<a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>、<a href=\"https://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>、<a href=\"https://profiles.wordpress.org/nukaga\">Junko Nukaga</a>、<a href=\"https://profiles.wordpress.org/devesine\">Justin de Vesine</a>、<a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>、<a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>、<a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>、<a href=\"https://profiles.wordpress.org/littlethingsstudio\">Kate Whitley</a>、<a href=\"https://profiles.wordpress.org/codebykat\">Kat Hagan</a>、<a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>、<a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>、<a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>、<a href=\"https://profiles.wordpress.org/koki4a\">Konstantin Dankov</a>、<a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>、<a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>、<a href=\"https://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>、<a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>、<a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>、<a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>、<a href=\"https://profiles.wordpress.org/lite3\">lite3</a>、<a href=\"https://profiles.wordpress.org/latz\">Lutz Schroer</a>、<a href=\"https://profiles.wordpress.org/mako09\">Mako</a>、<a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>、<a href=\"https://profiles.wordpress.org/markmcwilliams\">Mark McWilliams</a>、<a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>、<a href=\"https://profiles.wordpress.org/matveb\">Matias Ventura</a>、<a href=\"https://profiles.wordpress.org/mdbitz\">Matthew Denton</a>、<a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>、<a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>、<a href=\"https://profiles.wordpress.org/iammattthomas\">Matt Thomas</a>、<a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>、<a href=\"https://profiles.wordpress.org/megane9988\">megane9988</a>、<a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>、<a href=\"https://profiles.wordpress.org/micahwave\">micahwave</a>、<a href=\"https://profiles.wordpress.org/cainm\">Michael Cain</a>、<a href=\"https://profiles.wordpress.org/michelwppi\">Michel – xiligroup dev</a>、<a href=\"https://profiles.wordpress.org/chellycat\">Michelle Langston</a>、<a href=\"https://profiles.wordpress.org/gradyetc\">Mike Burns</a>、<a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>、<a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>、<a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>、<a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>、<a href=\"https://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>、<a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>、<a href=\"https://profiles.wordpress.org/mt8biz\">moto hachi</a>、<a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>、<a href=\"https://profiles.wordpress.org/neil_pie\">neil_pie</a>、<a href=\"https://profiles.wordpress.org/nickdaugherty\">Nick Daugherty</a>、<a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>、<a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>、<a href=\"https://profiles.wordpress.org/ninio\">ninio</a>、<a href=\"https://profiles.wordpress.org/ninnypants\">ninnypants</a>、<a href=\"https://profiles.wordpress.org/nofearinc\">nofearinc</a>、<a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>、<a href=\"https://profiles.wordpress.org/odysseygate\">odyssey</a>、<a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>、<a href=\"https://profiles.wordpress.org/swissspidy\">Pascal Birchler</a>、<a href=\"https://profiles.wordpress.org/pauldewouters\">Paul de Wouters</a>、<a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>、<a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>、<a href=\"https://profiles.wordpress.org/ptahdunbar\">Ptah Dunbar</a>、<a href=\"https://profiles.wordpress.org/raamdev\">Raam Dev</a>、<a href=\"https://profiles.wordpress.org/rachelbaker\">rachelbaker</a>、<a href=\"https://profiles.wordpress.org/bamadesigner\">Rachel Carden</a>、<a href=\"https://profiles.wordpress.org/radices\">Radices</a>、<a href=\"https://profiles.wordpress.org/mauryaratan\">Ram Ratan Maurya</a>、<a href=\"https://profiles.wordpress.org/defries\">Remkus de Vries</a>、<a href=\"https://profiles.wordpress.org/ounziw\">Rescuework Support</a>、<a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>、<a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>、<a href=\"https://profiles.wordpress.org/wet\">Robert Wetzlmayr</a>、<a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>、<a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>、<a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>、<a href=\"https://profiles.wordpress.org/sanchothefat\">sanchothefat</a>、<a href=\"https://profiles.wordpress.org/scottbasgaard\">Scott Basgaard</a>、<a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>、<a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>、<a href=\"https://profiles.wordpress.org/scribu\">scribu</a>、<a href=\"https://profiles.wordpress.org/seanchayes\">seanchayes</a>、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>、<a href=\"https://profiles.wordpress.org/shaunandrews\">shaunandrews</a>、<a href=\"https://profiles.wordpress.org/designsimply\">Sheri Bigelow (designsimply)</a>、<a href=\"https://profiles.wordpress.org/shinichin\">ShinichiN</a>、<a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>、<a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>、<a href=\"https://profiles.wordpress.org/siobhyb\">Siobhan Bamber (siobhyb)</a>、<a href=\"https://profiles.wordpress.org/sirbrillig\">sirbrillig</a>、<a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>、<a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>、<a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>、<a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>、<a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>、<a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>、<a href=\"https://profiles.wordpress.org/tmtoy\">Takuma Morikawa</a>、<a href=\"https://profiles.wordpress.org/thomasguillot\">Thomas Guillot</a>、<a href=\"https://profiles.wordpress.org/tierra\">tierra</a>、<a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>、<a href=\"https://profiles.wordpress.org/tlamedia\">TLA Media</a>、<a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>、<a href=\"https://profiles.wordpress.org/tommcfarlin\">Tom McFarlin</a>、<a href=\"https://profiles.wordpress.org/taupecat\">Tracy Rotton</a>、<a href=\"https://profiles.wordpress.org/trishasalas\">trishasalas</a>、<a href=\"https://profiles.wordpress.org/mbmufffin\">Tyler Smith</a>、<a href=\"https://profiles.wordpress.org/grapplerulrich\">Ulrich</a>、<a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>、<a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>、<a href=\"https://profiles.wordpress.org/yonasy\">yonasy</a>、和<a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>。也感谢<a href=\"http://benmorrison.org/\">Ben Morrison</a>和<a href=\"http://christineswebb.com/\">Christine Webb</a>制作的视频。</p>\n<p>感谢您选择WordPress，我们3.9见！</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://cn.wordpress.org/2013/12/13/parker/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"57\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:30:\"https://cn.wordpress.org/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:9:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 15 Mar 2016 14:49:16 GMT\";s:12:\"content-type\";s:34:\"application/rss+xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:6:\"x-olaf\";s:3:\"⛄\";s:13:\"last-modified\";s:29:\"Tue, 05 Jan 2016 13:19:01 GMT\";s:4:\"link\";s:61:\"<https://cn.wordpress.org/wp-json/>; rel=\"https://api.w.org/\"\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 249\";}s:5:\"build\";s:14:\"20130911040210\";}','no');
INSERT INTO `wp_options` VALUES (138,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (139,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (140,'widget_tag_cloud','a:2:{s:12:\"_multiwidget\";i:1;i:3;a:0:{}}','yes');
INSERT INTO `wp_options` VALUES (141,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (142,'site_icon','170','yes');
INSERT INTO `wp_options` VALUES (143,'medium_large_size_w','768','yes');
INSERT INTO `wp_options` VALUES (144,'medium_large_size_h','0','yes');
INSERT INTO `wp_options` VALUES (145,'db_upgraded','','yes');
INSERT INTO `wp_options` VALUES (5216,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:2:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:65:\"https://downloads.wordpress.org/release/zh_CN/wordpress-4.4.2.zip\";s:6:\"locale\";s:5:\"zh_CN\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:65:\"https://downloads.wordpress.org/release/zh_CN/wordpress-4.4.2.zip\";s:10:\"no_content\";b:0;s:11:\"new_bundled\";b:0;s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.4.2\";s:7:\"version\";s:5:\"4.4.2\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.4\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.4.2.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.4.2.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.4.2-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.4.2-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.4.2\";s:7:\"version\";s:5:\"4.4.2\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.4\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1458018092;s:15:\"version_checked\";s:5:\"4.4.2\";s:12:\"translations\";a:0:{}}','yes');
INSERT INTO `wp_options` VALUES (149,'recently_activated','a:3:{s:27:\"updraftplus/updraftplus.php\";i:1457276266;s:28:\"wp-gif-player/gif-player.php\";i:1457248703;s:44:\"shortpixel-image-optimiser/wp-shortpixel.php\";i:1457247954;}','yes');
INSERT INTO `wp_options` VALUES (3028,'_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a','1457286739','yes');
INSERT INTO `wp_options` VALUES (3029,'_site_transient_poptags_40cd750bba9870f18aada2478b24840a','a:100:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";s:4:\"5735\";}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"Post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";s:4:\"3570\";}s:6:\"plugin\";a:3:{s:4:\"name\";s:6:\"plugin\";s:4:\"slug\";s:6:\"plugin\";s:5:\"count\";s:4:\"3532\";}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";s:4:\"3034\";}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";s:4:\"2753\";}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";s:4:\"2266\";}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";s:4:\"2177\";}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";s:4:\"2035\";}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";s:4:\"1986\";}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";s:4:\"1961\";}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";s:4:\"1954\";}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";s:4:\"1909\";}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";s:4:\"1814\";}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"Facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";s:4:\"1622\";}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";s:4:\"1531\";}s:9:\"wordpress\";a:3:{s:4:\"name\";s:9:\"wordpress\";s:4:\"slug\";s:9:\"wordpress\";s:5:\"count\";s:4:\"1506\";}s:11:\"woocommerce\";a:3:{s:4:\"name\";s:11:\"woocommerce\";s:4:\"slug\";s:11:\"woocommerce\";s:5:\"count\";s:4:\"1506\";}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";s:4:\"1323\";}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";s:4:\"1268\";}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";s:4:\"1266\";}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";s:4:\"1165\";}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";s:4:\"1079\";}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";s:4:\"1056\";}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";s:3:\"991\";}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";s:3:\"949\";}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";s:3:\"908\";}s:9:\"ecommerce\";a:3:{s:4:\"name\";s:9:\"ecommerce\";s:4:\"slug\";s:9:\"ecommerce\";s:5:\"count\";s:3:\"907\";}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"AJAX\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";s:3:\"887\";}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";s:3:\"882\";}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";s:3:\"876\";}s:5:\"login\";a:3:{s:4:\"name\";s:5:\"login\";s:4:\"slug\";s:5:\"login\";s:5:\"count\";s:3:\"872\";}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";s:3:\"819\";}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";s:3:\"770\";}s:10:\"responsive\";a:3:{s:4:\"name\";s:10:\"responsive\";s:4:\"slug\";s:10:\"responsive\";s:5:\"count\";s:3:\"769\";}s:8:\"security\";a:3:{s:4:\"name\";s:8:\"security\";s:4:\"slug\";s:8:\"security\";s:5:\"count\";s:3:\"755\";}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";s:3:\"735\";}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";s:3:\"734\";}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";s:3:\"733\";}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";s:3:\"726\";}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";s:3:\"725\";}s:5:\"share\";a:3:{s:4:\"name\";s:5:\"Share\";s:4:\"slug\";s:5:\"share\";s:5:\"count\";s:3:\"719\";}s:10:\"e-commerce\";a:3:{s:4:\"name\";s:10:\"e-commerce\";s:4:\"slug\";s:10:\"e-commerce\";s:5:\"count\";s:3:\"717\";}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";s:3:\"685\";}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";s:3:\"680\";}s:5:\"embed\";a:3:{s:4:\"name\";s:5:\"embed\";s:4:\"slug\";s:5:\"embed\";s:5:\"count\";s:3:\"666\";}s:9:\"analytics\";a:3:{s:4:\"name\";s:9:\"analytics\";s:4:\"slug\";s:9:\"analytics\";s:5:\"count\";s:3:\"666\";}s:4:\"form\";a:3:{s:4:\"name\";s:4:\"form\";s:4:\"slug\";s:4:\"form\";s:5:\"count\";s:3:\"661\";}s:3:\"css\";a:3:{s:4:\"name\";s:3:\"CSS\";s:4:\"slug\";s:3:\"css\";s:5:\"count\";s:3:\"655\";}s:6:\"search\";a:3:{s:4:\"name\";s:6:\"search\";s:4:\"slug\";s:6:\"search\";s:5:\"count\";s:3:\"646\";}s:9:\"slideshow\";a:3:{s:4:\"name\";s:9:\"slideshow\";s:4:\"slug\";s:9:\"slideshow\";s:5:\"count\";s:3:\"628\";}s:6:\"custom\";a:3:{s:4:\"name\";s:6:\"custom\";s:4:\"slug\";s:6:\"custom\";s:5:\"count\";s:3:\"624\";}s:6:\"slider\";a:3:{s:4:\"name\";s:6:\"slider\";s:4:\"slug\";s:6:\"slider\";s:5:\"count\";s:3:\"621\";}s:5:\"stats\";a:3:{s:4:\"name\";s:5:\"stats\";s:4:\"slug\";s:5:\"stats\";s:5:\"count\";s:3:\"609\";}s:6:\"button\";a:3:{s:4:\"name\";s:6:\"button\";s:4:\"slug\";s:6:\"button\";s:5:\"count\";s:3:\"599\";}s:7:\"comment\";a:3:{s:4:\"name\";s:7:\"comment\";s:4:\"slug\";s:7:\"comment\";s:5:\"count\";s:3:\"591\";}s:5:\"theme\";a:3:{s:4:\"name\";s:5:\"theme\";s:4:\"slug\";s:5:\"theme\";s:5:\"count\";s:3:\"584\";}s:4:\"tags\";a:3:{s:4:\"name\";s:4:\"tags\";s:4:\"slug\";s:4:\"tags\";s:5:\"count\";s:3:\"581\";}s:4:\"menu\";a:3:{s:4:\"name\";s:4:\"menu\";s:4:\"slug\";s:4:\"menu\";s:5:\"count\";s:3:\"581\";}s:9:\"dashboard\";a:3:{s:4:\"name\";s:9:\"dashboard\";s:4:\"slug\";s:9:\"dashboard\";s:5:\"count\";s:3:\"580\";}s:10:\"categories\";a:3:{s:4:\"name\";s:10:\"categories\";s:4:\"slug\";s:10:\"categories\";s:5:\"count\";s:3:\"567\";}s:10:\"statistics\";a:3:{s:4:\"name\";s:10:\"statistics\";s:4:\"slug\";s:10:\"statistics\";s:5:\"count\";s:3:\"556\";}s:6:\"mobile\";a:3:{s:4:\"name\";s:6:\"mobile\";s:4:\"slug\";s:6:\"mobile\";s:5:\"count\";s:3:\"550\";}s:3:\"ads\";a:3:{s:4:\"name\";s:3:\"ads\";s:4:\"slug\";s:3:\"ads\";s:5:\"count\";s:3:\"545\";}s:4:\"user\";a:3:{s:4:\"name\";s:4:\"user\";s:4:\"slug\";s:4:\"user\";s:5:\"count\";s:3:\"535\";}s:6:\"editor\";a:3:{s:4:\"name\";s:6:\"editor\";s:4:\"slug\";s:6:\"editor\";s:5:\"count\";s:3:\"534\";}s:5:\"users\";a:3:{s:4:\"name\";s:5:\"users\";s:4:\"slug\";s:5:\"users\";s:5:\"count\";s:3:\"521\";}s:4:\"list\";a:3:{s:4:\"name\";s:4:\"list\";s:4:\"slug\";s:4:\"list\";s:5:\"count\";s:3:\"515\";}s:7:\"picture\";a:3:{s:4:\"name\";s:7:\"picture\";s:4:\"slug\";s:7:\"picture\";s:5:\"count\";s:3:\"504\";}s:9:\"affiliate\";a:3:{s:4:\"name\";s:9:\"affiliate\";s:4:\"slug\";s:9:\"affiliate\";s:5:\"count\";s:3:\"503\";}s:7:\"plugins\";a:3:{s:4:\"name\";s:7:\"plugins\";s:4:\"slug\";s:7:\"plugins\";s:5:\"count\";s:3:\"502\";}s:6:\"simple\";a:3:{s:4:\"name\";s:6:\"simple\";s:4:\"slug\";s:6:\"simple\";s:5:\"count\";s:3:\"489\";}s:9:\"multisite\";a:3:{s:4:\"name\";s:9:\"multisite\";s:4:\"slug\";s:9:\"multisite\";s:5:\"count\";s:3:\"488\";}s:12:\"contact-form\";a:3:{s:4:\"name\";s:12:\"contact form\";s:4:\"slug\";s:12:\"contact-form\";s:5:\"count\";s:3:\"474\";}s:12:\"social-media\";a:3:{s:4:\"name\";s:12:\"social media\";s:4:\"slug\";s:12:\"social-media\";s:5:\"count\";s:3:\"473\";}s:7:\"contact\";a:3:{s:4:\"name\";s:7:\"contact\";s:4:\"slug\";s:7:\"contact\";s:5:\"count\";s:3:\"460\";}s:8:\"pictures\";a:3:{s:4:\"name\";s:8:\"pictures\";s:4:\"slug\";s:8:\"pictures\";s:5:\"count\";s:3:\"452\";}s:10:\"navigation\";a:3:{s:4:\"name\";s:10:\"navigation\";s:4:\"slug\";s:10:\"navigation\";s:5:\"count\";s:3:\"435\";}s:3:\"url\";a:3:{s:4:\"name\";s:3:\"url\";s:4:\"slug\";s:3:\"url\";s:5:\"count\";s:3:\"435\";}s:4:\"html\";a:3:{s:4:\"name\";s:4:\"html\";s:4:\"slug\";s:4:\"html\";s:5:\"count\";s:3:\"430\";}s:4:\"shop\";a:3:{s:4:\"name\";s:4:\"shop\";s:4:\"slug\";s:4:\"shop\";s:5:\"count\";s:3:\"429\";}s:3:\"api\";a:3:{s:4:\"name\";s:3:\"api\";s:4:\"slug\";s:3:\"api\";s:5:\"count\";s:3:\"427\";}s:5:\"flash\";a:3:{s:4:\"name\";s:5:\"flash\";s:4:\"slug\";s:5:\"flash\";s:5:\"count\";s:3:\"423\";}s:9:\"marketing\";a:3:{s:4:\"name\";s:9:\"marketing\";s:4:\"slug\";s:9:\"marketing\";s:5:\"count\";s:3:\"420\";}s:10:\"newsletter\";a:3:{s:4:\"name\";s:10:\"newsletter\";s:4:\"slug\";s:10:\"newsletter\";s:5:\"count\";s:3:\"416\";}s:4:\"meta\";a:3:{s:4:\"name\";s:4:\"meta\";s:4:\"slug\";s:4:\"meta\";s:5:\"count\";s:3:\"416\";}s:4:\"news\";a:3:{s:4:\"name\";s:4:\"News\";s:4:\"slug\";s:4:\"news\";s:5:\"count\";s:3:\"402\";}s:3:\"tag\";a:3:{s:4:\"name\";s:3:\"tag\";s:4:\"slug\";s:3:\"tag\";s:5:\"count\";s:3:\"402\";}s:6:\"events\";a:3:{s:4:\"name\";s:6:\"events\";s:4:\"slug\";s:6:\"events\";s:5:\"count\";s:3:\"402\";}s:8:\"calendar\";a:3:{s:4:\"name\";s:8:\"calendar\";s:4:\"slug\";s:8:\"calendar\";s:5:\"count\";s:3:\"401\";}s:8:\"tracking\";a:3:{s:4:\"name\";s:8:\"tracking\";s:4:\"slug\";s:8:\"tracking\";s:5:\"count\";s:3:\"398\";}s:11:\"advertising\";a:3:{s:4:\"name\";s:11:\"advertising\";s:4:\"slug\";s:11:\"advertising\";s:5:\"count\";s:3:\"395\";}s:10:\"shortcodes\";a:3:{s:4:\"name\";s:10:\"shortcodes\";s:4:\"slug\";s:10:\"shortcodes\";s:5:\"count\";s:3:\"390\";}s:9:\"thumbnail\";a:3:{s:4:\"name\";s:9:\"thumbnail\";s:4:\"slug\";s:9:\"thumbnail\";s:5:\"count\";s:3:\"389\";}s:4:\"text\";a:3:{s:4:\"name\";s:4:\"text\";s:4:\"slug\";s:4:\"text\";s:5:\"count\";s:3:\"387\";}s:4:\"code\";a:3:{s:4:\"name\";s:4:\"code\";s:4:\"slug\";s:4:\"code\";s:5:\"count\";s:3:\"382\";}s:6:\"upload\";a:3:{s:4:\"name\";s:6:\"upload\";s:4:\"slug\";s:6:\"upload\";s:5:\"count\";s:3:\"380\";}s:9:\"automatic\";a:3:{s:4:\"name\";s:9:\"automatic\";s:4:\"slug\";s:9:\"automatic\";s:5:\"count\";s:3:\"380\";}s:6:\"paypal\";a:3:{s:4:\"name\";s:6:\"paypal\";s:4:\"slug\";s:6:\"paypal\";s:5:\"count\";s:3:\"379\";}s:7:\"sharing\";a:3:{s:4:\"name\";s:7:\"sharing\";s:4:\"slug\";s:7:\"sharing\";s:5:\"count\";s:3:\"377\";}s:12:\"notification\";a:3:{s:4:\"name\";s:12:\"notification\";s:4:\"slug\";s:12:\"notification\";s:5:\"count\";s:3:\"377\";}}','yes');
INSERT INTO `wp_options` VALUES (1089,'tablepress_tables','{\"last_id\":3,\"table_post\":{\"1\":189,\"2\":213,\"3\":216}}','yes');
INSERT INTO `wp_options` VALUES (198,'current_theme','Twenty Fifteen','yes');
INSERT INTO `wp_options` VALUES (199,'theme_mods_twentysixteen','a:5:{i:0;b:0;s:16:\"header_textcolor\";s:6:\"1a1a1a\";s:16:\"background_color\";s:6:\"ffffff\";s:18:\"nav_menu_locations\";a:0:{}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1456414534;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:8:\"search-2\";i:1;s:12:\"categories-2\";i:2;s:6:\"meta-2\";}s:9:\"sidebar-2\";N;s:9:\"sidebar-3\";N;}}}','yes');
INSERT INTO `wp_options` VALUES (200,'theme_switched','','yes');
INSERT INTO `wp_options` VALUES (202,'zh_cn_l10n_icp_num','沪ICP备16005391号','yes');
INSERT INTO `wp_options` VALUES (3410,'_site_transient_timeout_available_translations','1457359122','yes');
INSERT INTO `wp_options` VALUES (3411,'_site_transient_available_translations','a:77:{s:3:\"ary\";a:8:{s:8:\"language\";s:3:\"ary\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-12 10:15:45\";s:12:\"english_name\";s:15:\"Moroccan Arabic\";s:11:\"native_name\";s:31:\"العربية المغربية\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/ary.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:3;s:3:\"ary\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"ar\";a:8:{s:8:\"language\";s:2:\"ar\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-07 13:09:53\";s:12:\"english_name\";s:6:\"Arabic\";s:11:\"native_name\";s:14:\"العربية\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/ar.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:2;s:3:\"ara\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"az\";a:8:{s:8:\"language\";s:2:\"az\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-07 20:53:51\";s:12:\"english_name\";s:11:\"Azerbaijani\";s:11:\"native_name\";s:16:\"Azərbaycan dili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/az.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:2;s:3:\"aze\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Davam\";}}s:3:\"azb\";a:8:{s:8:\"language\";s:3:\"azb\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-11 22:42:10\";s:12:\"english_name\";s:17:\"South Azerbaijani\";s:11:\"native_name\";s:29:\"گؤنئی آذربایجان\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/azb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:3;s:3:\"azb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"bg_BG\";a:8:{s:8:\"language\";s:5:\"bg_BG\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 08:50:29\";s:12:\"english_name\";s:9:\"Bulgarian\";s:11:\"native_name\";s:18:\"Български\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/bg_BG.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bg\";i:2;s:3:\"bul\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:22:\"Продължение\";}}s:5:\"bn_BD\";a:8:{s:8:\"language\";s:5:\"bn_BD\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-08 13:17:04\";s:12:\"english_name\";s:7:\"Bengali\";s:11:\"native_name\";s:15:\"বাংলা\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/bn_BD.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"bn\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:23:\"এগিয়ে চল.\";}}s:5:\"bs_BA\";a:8:{s:8:\"language\";s:5:\"bs_BA\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-04 09:40:25\";s:12:\"english_name\";s:7:\"Bosnian\";s:11:\"native_name\";s:8:\"Bosanski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/bs_BA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bs\";i:2;s:3:\"bos\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:2:\"ca\";a:8:{s:8:\"language\";s:2:\"ca\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-16 13:48:03\";s:12:\"english_name\";s:7:\"Catalan\";s:11:\"native_name\";s:7:\"Català\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/ca.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ca\";i:2;s:3:\"cat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:3:\"ceb\";a:8:{s:8:\"language\";s:3:\"ceb\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-16 15:34:57\";s:12:\"english_name\";s:7:\"Cebuano\";s:11:\"native_name\";s:7:\"Cebuano\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/ceb.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"ceb\";i:3;s:3:\"ceb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Padayun\";}}s:2:\"cy\";a:8:{s:8:\"language\";s:2:\"cy\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-26 16:01:40\";s:12:\"english_name\";s:5:\"Welsh\";s:11:\"native_name\";s:7:\"Cymraeg\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/cy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cy\";i:2;s:3:\"cym\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Parhau\";}}s:5:\"da_DK\";a:8:{s:8:\"language\";s:5:\"da_DK\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 22:48:20\";s:12:\"english_name\";s:6:\"Danish\";s:11:\"native_name\";s:5:\"Dansk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/da_DK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"da\";i:2;s:3:\"dan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Forts&#230;t\";}}s:5:\"de_CH\";a:8:{s:8:\"language\";s:5:\"de_CH\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 14:19:21\";s:12:\"english_name\";s:20:\"German (Switzerland)\";s:11:\"native_name\";s:17:\"Deutsch (Schweiz)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/de_CH.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Fortfahren\";}}s:5:\"de_DE\";a:8:{s:8:\"language\";s:5:\"de_DE\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-29 10:47:54\";s:12:\"english_name\";s:6:\"German\";s:11:\"native_name\";s:7:\"Deutsch\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/de_DE.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Fortfahren\";}}s:12:\"de_DE_formal\";a:8:{s:8:\"language\";s:12:\"de_DE_formal\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-26 16:11:56\";s:12:\"english_name\";s:15:\"German (Formal)\";s:11:\"native_name\";s:13:\"Deutsch (Sie)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.4.2/de_DE_formal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Fortfahren\";}}s:2:\"el\";a:8:{s:8:\"language\";s:2:\"el\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-03-01 18:27:32\";s:12:\"english_name\";s:5:\"Greek\";s:11:\"native_name\";s:16:\"Ελληνικά\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/el.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"el\";i:2;s:3:\"ell\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Συνέχεια\";}}s:5:\"en_CA\";a:8:{s:8:\"language\";s:5:\"en_CA\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-06 23:10:59\";s:12:\"english_name\";s:16:\"English (Canada)\";s:11:\"native_name\";s:16:\"English (Canada)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/en_CA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_GB\";a:8:{s:8:\"language\";s:5:\"en_GB\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-14 21:14:29\";s:12:\"english_name\";s:12:\"English (UK)\";s:11:\"native_name\";s:12:\"English (UK)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/en_GB.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_NZ\";a:8:{s:8:\"language\";s:5:\"en_NZ\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 13:34:17\";s:12:\"english_name\";s:21:\"English (New Zealand)\";s:11:\"native_name\";s:21:\"English (New Zealand)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/en_NZ.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_ZA\";a:8:{s:8:\"language\";s:5:\"en_ZA\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-15 11:52:35\";s:12:\"english_name\";s:22:\"English (South Africa)\";s:11:\"native_name\";s:22:\"English (South Africa)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/en_ZA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_AU\";a:8:{s:8:\"language\";s:5:\"en_AU\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-07 04:39:48\";s:12:\"english_name\";s:19:\"English (Australia)\";s:11:\"native_name\";s:19:\"English (Australia)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/en_AU.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"eo\";a:8:{s:8:\"language\";s:2:\"eo\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-25 13:07:29\";s:12:\"english_name\";s:9:\"Esperanto\";s:11:\"native_name\";s:9:\"Esperanto\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/eo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eo\";i:2;s:3:\"epo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Daŭrigi\";}}s:5:\"es_CL\";a:8:{s:8:\"language\";s:5:\"es_CL\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-28 19:55:54\";s:12:\"english_name\";s:15:\"Spanish (Chile)\";s:11:\"native_name\";s:17:\"Español de Chile\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_CL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_VE\";a:8:{s:8:\"language\";s:5:\"es_VE\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-13 06:14:13\";s:12:\"english_name\";s:19:\"Spanish (Venezuela)\";s:11:\"native_name\";s:21:\"Español de Venezuela\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_VE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_GT\";a:8:{s:8:\"language\";s:5:\"es_GT\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-09 18:08:52\";s:12:\"english_name\";s:19:\"Spanish (Guatemala)\";s:11:\"native_name\";s:21:\"Español de Guatemala\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_GT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_PE\";a:8:{s:8:\"language\";s:5:\"es_PE\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-24 15:17:36\";s:12:\"english_name\";s:14:\"Spanish (Peru)\";s:11:\"native_name\";s:17:\"Español de Perú\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_PE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CO\";a:8:{s:8:\"language\";s:5:\"es_CO\";s:7:\"version\";s:6:\"4.3-RC\";s:7:\"updated\";s:19:\"2015-08-04 06:10:33\";s:12:\"english_name\";s:18:\"Spanish (Colombia)\";s:11:\"native_name\";s:20:\"Español de Colombia\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.3-RC/es_CO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_MX\";a:8:{s:8:\"language\";s:5:\"es_MX\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-07 17:35:10\";s:12:\"english_name\";s:16:\"Spanish (Mexico)\";s:11:\"native_name\";s:19:\"Español de México\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_MX.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_AR\";a:8:{s:8:\"language\";s:5:\"es_AR\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-23 00:46:01\";s:12:\"english_name\";s:19:\"Spanish (Argentina)\";s:11:\"native_name\";s:21:\"Español de Argentina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_AR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_ES\";a:8:{s:8:\"language\";s:5:\"es_ES\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-13 12:28:49\";s:12:\"english_name\";s:15:\"Spanish (Spain)\";s:11:\"native_name\";s:8:\"Español\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/es_ES.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"es\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"et\";a:8:{s:8:\"language\";s:2:\"et\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-18 06:44:22\";s:12:\"english_name\";s:8:\"Estonian\";s:11:\"native_name\";s:5:\"Eesti\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/et.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"et\";i:2;s:3:\"est\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Jätka\";}}s:2:\"eu\";a:8:{s:8:\"language\";s:2:\"eu\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-07 21:19:15\";s:12:\"english_name\";s:6:\"Basque\";s:11:\"native_name\";s:7:\"Euskara\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/eu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eu\";i:2;s:3:\"eus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Jarraitu\";}}s:5:\"fa_IR\";a:8:{s:8:\"language\";s:5:\"fa_IR\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-31 19:24:20\";s:12:\"english_name\";s:7:\"Persian\";s:11:\"native_name\";s:10:\"فارسی\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/fa_IR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fa\";i:2;s:3:\"fas\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:2:\"fi\";a:8:{s:8:\"language\";s:2:\"fi\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-23 06:49:15\";s:12:\"english_name\";s:7:\"Finnish\";s:11:\"native_name\";s:5:\"Suomi\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/fi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fi\";i:2;s:3:\"fin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Jatka\";}}s:5:\"fr_BE\";a:8:{s:8:\"language\";s:5:\"fr_BE\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 13:47:35\";s:12:\"english_name\";s:16:\"French (Belgium)\";s:11:\"native_name\";s:21:\"Français de Belgique\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/fr_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_FR\";a:8:{s:8:\"language\";s:5:\"fr_FR\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-11 10:20:56\";s:12:\"english_name\";s:15:\"French (France)\";s:11:\"native_name\";s:9:\"Français\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/fr_FR.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"fr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_CA\";a:8:{s:8:\"language\";s:5:\"fr_CA\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-09 02:16:19\";s:12:\"english_name\";s:15:\"French (Canada)\";s:11:\"native_name\";s:19:\"Français du Canada\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/fr_CA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:2:\"gd\";a:8:{s:8:\"language\";s:2:\"gd\";s:7:\"version\";s:5:\"4.3.3\";s:7:\"updated\";s:19:\"2015-09-24 15:25:30\";s:12:\"english_name\";s:15:\"Scottish Gaelic\";s:11:\"native_name\";s:9:\"Gàidhlig\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.3.3/gd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"gd\";i:2;s:3:\"gla\";i:3;s:3:\"gla\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"Lean air adhart\";}}s:5:\"gl_ES\";a:8:{s:8:\"language\";s:5:\"gl_ES\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-13 16:48:03\";s:12:\"english_name\";s:8:\"Galician\";s:11:\"native_name\";s:6:\"Galego\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/gl_ES.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gl\";i:2;s:3:\"glg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:3:\"haz\";a:8:{s:8:\"language\";s:3:\"haz\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-05 00:59:09\";s:12:\"english_name\";s:8:\"Hazaragi\";s:11:\"native_name\";s:15:\"هزاره گی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/haz.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"haz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:5:\"he_IL\";a:8:{s:8:\"language\";s:5:\"he_IL\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-28 21:55:44\";s:12:\"english_name\";s:6:\"Hebrew\";s:11:\"native_name\";s:16:\"עִבְרִית\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/he_IL.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"he\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"להמשיך\";}}s:5:\"hi_IN\";a:8:{s:8:\"language\";s:5:\"hi_IN\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-06 14:16:56\";s:12:\"english_name\";s:5:\"Hindi\";s:11:\"native_name\";s:18:\"हिन्दी\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/hi_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hi\";i:2;s:3:\"hin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"जारी\";}}s:2:\"hr\";a:8:{s:8:\"language\";s:2:\"hr\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-24 11:33:48\";s:12:\"english_name\";s:8:\"Croatian\";s:11:\"native_name\";s:8:\"Hrvatski\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/hr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hr\";i:2;s:3:\"hrv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:5:\"hu_HU\";a:8:{s:8:\"language\";s:5:\"hu_HU\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-03 14:37:42\";s:12:\"english_name\";s:9:\"Hungarian\";s:11:\"native_name\";s:6:\"Magyar\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/hu_HU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hu\";i:2;s:3:\"hun\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Tovább\";}}s:2:\"hy\";a:8:{s:8:\"language\";s:2:\"hy\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-04 07:13:54\";s:12:\"english_name\";s:8:\"Armenian\";s:11:\"native_name\";s:14:\"Հայերեն\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/hy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hy\";i:2;s:3:\"hye\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Շարունակել\";}}s:5:\"id_ID\";a:8:{s:8:\"language\";s:5:\"id_ID\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-21 16:17:50\";s:12:\"english_name\";s:10:\"Indonesian\";s:11:\"native_name\";s:16:\"Bahasa Indonesia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/id_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"id\";i:2;s:3:\"ind\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Lanjutkan\";}}s:5:\"is_IS\";a:8:{s:8:\"language\";s:5:\"is_IS\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 00:20:24\";s:12:\"english_name\";s:9:\"Icelandic\";s:11:\"native_name\";s:9:\"Íslenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/is_IS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"is\";i:2;s:3:\"isl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Áfram\";}}s:5:\"it_IT\";a:8:{s:8:\"language\";s:5:\"it_IT\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-30 18:58:39\";s:12:\"english_name\";s:7:\"Italian\";s:11:\"native_name\";s:8:\"Italiano\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/it_IT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"it\";i:2;s:3:\"ita\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"ja\";a:8:{s:8:\"language\";s:2:\"ja\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-25 13:08:14\";s:12:\"english_name\";s:8:\"Japanese\";s:11:\"native_name\";s:9:\"日本語\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/ja.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"ja\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"続ける\";}}s:5:\"ka_GE\";a:8:{s:8:\"language\";s:5:\"ka_GE\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-09 08:53:31\";s:12:\"english_name\";s:8:\"Georgian\";s:11:\"native_name\";s:21:\"ქართული\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/ka_GE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ka\";i:2;s:3:\"kat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"გაგრძელება\";}}s:5:\"ko_KR\";a:8:{s:8:\"language\";s:5:\"ko_KR\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-24 00:12:01\";s:12:\"english_name\";s:6:\"Korean\";s:11:\"native_name\";s:9:\"한국어\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/ko_KR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ko\";i:2;s:3:\"kor\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"계속\";}}s:5:\"lt_LT\";a:8:{s:8:\"language\";s:5:\"lt_LT\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 20:07:24\";s:12:\"english_name\";s:10:\"Lithuanian\";s:11:\"native_name\";s:15:\"Lietuvių kalba\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/lt_LT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lt\";i:2;s:3:\"lit\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Tęsti\";}}s:5:\"ms_MY\";a:8:{s:8:\"language\";s:5:\"ms_MY\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-28 05:41:39\";s:12:\"english_name\";s:5:\"Malay\";s:11:\"native_name\";s:13:\"Bahasa Melayu\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/ms_MY.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ms\";i:2;s:3:\"msa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Teruskan\";}}s:5:\"my_MM\";a:8:{s:8:\"language\";s:5:\"my_MM\";s:7:\"version\";s:6:\"4.1.10\";s:7:\"updated\";s:19:\"2015-03-26 15:57:42\";s:12:\"english_name\";s:17:\"Myanmar (Burmese)\";s:11:\"native_name\";s:15:\"ဗမာစာ\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.10/my_MM.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"my\";i:2;s:3:\"mya\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:54:\"ဆက်လက်လုပ်ေဆာင်ပါ။\";}}s:5:\"nb_NO\";a:8:{s:8:\"language\";s:5:\"nb_NO\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-07 10:01:09\";s:12:\"english_name\";s:19:\"Norwegian (Bokmål)\";s:11:\"native_name\";s:13:\"Norsk bokmål\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/nb_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nb\";i:2;s:3:\"nob\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsett\";}}s:12:\"nl_NL_formal\";a:8:{s:8:\"language\";s:12:\"nl_NL_formal\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-20 13:35:50\";s:12:\"english_name\";s:14:\"Dutch (Formal)\";s:11:\"native_name\";s:20:\"Nederlands (Formeel)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.4.2/nl_NL_formal.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nl_NL\";a:8:{s:8:\"language\";s:5:\"nl_NL\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-23 18:59:13\";s:12:\"english_name\";s:5:\"Dutch\";s:11:\"native_name\";s:10:\"Nederlands\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/nl_NL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nn_NO\";a:8:{s:8:\"language\";s:5:\"nn_NO\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-14 12:19:44\";s:12:\"english_name\";s:19:\"Norwegian (Nynorsk)\";s:11:\"native_name\";s:13:\"Norsk nynorsk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/nn_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nn\";i:2;s:3:\"nno\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Hald fram\";}}s:3:\"oci\";a:8:{s:8:\"language\";s:3:\"oci\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-08 16:21:37\";s:12:\"english_name\";s:7:\"Occitan\";s:11:\"native_name\";s:7:\"Occitan\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/oci.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"oc\";i:2;s:3:\"oci\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Contunhar\";}}s:5:\"pl_PL\";a:8:{s:8:\"language\";s:5:\"pl_PL\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-26 19:07:19\";s:12:\"english_name\";s:6:\"Polish\";s:11:\"native_name\";s:6:\"Polski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/pl_PL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pl\";i:2;s:3:\"pol\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Kontynuuj\";}}s:2:\"ps\";a:8:{s:8:\"language\";s:2:\"ps\";s:7:\"version\";s:6:\"4.1.10\";s:7:\"updated\";s:19:\"2015-03-29 22:19:48\";s:12:\"english_name\";s:6:\"Pashto\";s:11:\"native_name\";s:8:\"پښتو\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.10/ps.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ps\";i:2;s:3:\"pus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"دوام\";}}s:5:\"pt_BR\";a:8:{s:8:\"language\";s:5:\"pt_BR\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-10 18:05:56\";s:12:\"english_name\";s:19:\"Portuguese (Brazil)\";s:11:\"native_name\";s:20:\"Português do Brasil\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/pt_BR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pt\";i:2;s:3:\"por\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_PT\";a:8:{s:8:\"language\";s:5:\"pt_PT\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-25 13:02:32\";s:12:\"english_name\";s:21:\"Portuguese (Portugal)\";s:11:\"native_name\";s:10:\"Português\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/pt_PT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"ro_RO\";a:8:{s:8:\"language\";s:5:\"ro_RO\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-24 11:09:36\";s:12:\"english_name\";s:8:\"Romanian\";s:11:\"native_name\";s:8:\"Română\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/ro_RO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ro\";i:2;s:3:\"ron\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuă\";}}s:5:\"ru_RU\";a:8:{s:8:\"language\";s:5:\"ru_RU\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-02 00:04:31\";s:12:\"english_name\";s:7:\"Russian\";s:11:\"native_name\";s:14:\"Русский\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/ru_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ru\";i:2;s:3:\"rus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:5:\"sk_SK\";a:8:{s:8:\"language\";s:5:\"sk_SK\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-26 11:29:13\";s:12:\"english_name\";s:6:\"Slovak\";s:11:\"native_name\";s:11:\"Slovenčina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/sk_SK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sk\";i:2;s:3:\"slk\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Pokračovať\";}}s:5:\"sl_SI\";a:8:{s:8:\"language\";s:5:\"sl_SI\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-11-26 00:00:18\";s:12:\"english_name\";s:9:\"Slovenian\";s:11:\"native_name\";s:13:\"Slovenščina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/sl_SI.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sl\";i:2;s:3:\"slv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Nadaljujte\";}}s:2:\"sq\";a:8:{s:8:\"language\";s:2:\"sq\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-02-23 10:30:30\";s:12:\"english_name\";s:8:\"Albanian\";s:11:\"native_name\";s:5:\"Shqip\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/sq.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sq\";i:2;s:3:\"sqi\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Vazhdo\";}}s:5:\"sr_RS\";a:8:{s:8:\"language\";s:5:\"sr_RS\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-09 09:09:51\";s:12:\"english_name\";s:7:\"Serbian\";s:11:\"native_name\";s:23:\"Српски језик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/sr_RS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sr\";i:2;s:3:\"srp\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:14:\"Настави\";}}s:5:\"sv_SE\";a:8:{s:8:\"language\";s:5:\"sv_SE\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 23:28:56\";s:12:\"english_name\";s:7:\"Swedish\";s:11:\"native_name\";s:7:\"Svenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/sv_SE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sv\";i:2;s:3:\"swe\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Fortsätt\";}}s:2:\"th\";a:8:{s:8:\"language\";s:2:\"th\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-08 03:22:55\";s:12:\"english_name\";s:4:\"Thai\";s:11:\"native_name\";s:9:\"ไทย\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/th.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"th\";i:2;s:3:\"tha\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"ต่อไป\";}}s:2:\"tl\";a:8:{s:8:\"language\";s:2:\"tl\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-11-27 15:51:36\";s:12:\"english_name\";s:7:\"Tagalog\";s:11:\"native_name\";s:7:\"Tagalog\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/tl.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tl\";i:2;s:3:\"tgl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Magpatuloy\";}}s:5:\"tr_TR\";a:8:{s:8:\"language\";s:5:\"tr_TR\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-17 23:12:27\";s:12:\"english_name\";s:7:\"Turkish\";s:11:\"native_name\";s:8:\"Türkçe\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/tr_TR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tr\";i:2;s:3:\"tur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Devam\";}}s:5:\"ug_CN\";a:8:{s:8:\"language\";s:5:\"ug_CN\";s:7:\"version\";s:6:\"4.1.10\";s:7:\"updated\";s:19:\"2015-03-26 16:45:38\";s:12:\"english_name\";s:6:\"Uighur\";s:11:\"native_name\";s:9:\"Uyƣurqə\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.10/ug_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ug\";i:2;s:3:\"uig\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:26:\"داۋاملاشتۇرۇش\";}}s:2:\"uk\";a:8:{s:8:\"language\";s:2:\"uk\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2016-01-03 22:04:41\";s:12:\"english_name\";s:9:\"Ukrainian\";s:11:\"native_name\";s:20:\"Українська\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/uk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uk\";i:2;s:3:\"ukr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продовжити\";}}s:2:\"vi\";a:8:{s:8:\"language\";s:2:\"vi\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-09 01:01:25\";s:12:\"english_name\";s:10:\"Vietnamese\";s:11:\"native_name\";s:14:\"Tiếng Việt\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.4.2/vi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"vi\";i:2;s:3:\"vie\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Tiếp tục\";}}s:5:\"zh_TW\";a:8:{s:8:\"language\";s:5:\"zh_TW\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-11 18:51:41\";s:12:\"english_name\";s:16:\"Chinese (Taiwan)\";s:11:\"native_name\";s:12:\"繁體中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/zh_TW.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_CN\";a:8:{s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-12 22:55:08\";s:12:\"english_name\";s:15:\"Chinese (China)\";s:11:\"native_name\";s:12:\"简体中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.4.2/zh_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"继续\";}}}','yes');
INSERT INTO `wp_options` VALUES (6920,'_transient_feed_mod_7d1d7866a17d17cf5f79e1f075b87a31','1458053359','no');
INSERT INTO `wp_options` VALUES (6919,'_transient_timeout_feed_mod_7d1d7866a17d17cf5f79e1f075b87a31','1458096559','no');
INSERT INTO `wp_options` VALUES (501,'_transient_bulan_categories','2','yes');
INSERT INTO `wp_options` VALUES (2962,'category_children','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (257,'_site_transient_browser_b99b4a948633d7914f33f1975f1cbe76','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"49.0.2623.54\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes');
INSERT INTO `wp_options` VALUES (256,'_site_transient_timeout_browser_b99b4a948633d7914f33f1975f1cbe76','1456633890','yes');
INSERT INTO `wp_options` VALUES (561,'jetpack_available_modules','a:1:{s:5:\"3.9.4\";a:37:{s:18:\"after-the-deadline\";s:3:\"1.1\";s:8:\"carousel\";s:3:\"1.5\";s:8:\"comments\";s:3:\"1.4\";s:12:\"contact-form\";s:3:\"1.3\";s:20:\"custom-content-types\";s:3:\"3.1\";s:10:\"custom-css\";s:3:\"1.7\";s:21:\"enhanced-distribution\";s:3:\"1.2\";s:19:\"gravatar-hovercards\";s:3:\"1.1\";s:15:\"infinite-scroll\";s:3:\"2.0\";s:8:\"json-api\";s:3:\"1.9\";s:5:\"latex\";s:3:\"1.1\";s:5:\"likes\";s:3:\"2.2\";s:6:\"manage\";s:3:\"3.4\";s:8:\"markdown\";s:3:\"2.8\";s:9:\"minileven\";s:3:\"1.8\";s:7:\"monitor\";s:3:\"2.6\";s:5:\"notes\";s:3:\"1.9\";s:10:\"omnisearch\";s:3:\"2.3\";s:6:\"photon\";s:3:\"2.0\";s:13:\"post-by-email\";s:3:\"2.0\";s:7:\"protect\";s:3:\"3.4\";s:9:\"publicize\";s:3:\"2.0\";s:13:\"related-posts\";s:3:\"2.9\";s:10:\"sharedaddy\";s:3:\"1.1\";s:10:\"shortcodes\";s:3:\"1.1\";s:10:\"shortlinks\";s:3:\"1.1\";s:9:\"site-icon\";s:3:\"3.2\";s:8:\"sitemaps\";s:3:\"3.9\";s:3:\"sso\";s:3:\"2.6\";s:5:\"stats\";s:3:\"1.1\";s:13:\"subscriptions\";s:3:\"1.2\";s:13:\"tiled-gallery\";s:3:\"2.1\";s:10:\"vaultpress\";s:5:\"0:1.2\";s:18:\"verification-tools\";s:3:\"3.0\";s:10:\"videopress\";s:3:\"2.5\";s:17:\"widget-visibility\";s:3:\"2.4\";s:7:\"widgets\";s:3:\"1.2\";}}','yes');
INSERT INTO `wp_options` VALUES (563,'jetpack_security_report','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (6943,'_site_transient_timeout_security_report_performed_recently','1458057680','yes');
INSERT INTO `wp_options` VALUES (6944,'_site_transient_security_report_performed_recently','1','yes');
INSERT INTO `wp_options` VALUES (566,'jetpack_log','a:30:{i:0;a:4:{s:4:\"time\";i:1456834034;s:7:\"user_id\";i:1;s:7:\"blog_id\";b:0;s:4:\"code\";s:8:\"register\";}i:1;a:4:{s:4:\"time\";i:1456834052;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:9:\"authorize\";}i:2;a:5:{s:4:\"time\";i:1456834096;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:6:\"manage\";}i:3;a:5:{s:4:\"time\";i:1456834097;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:10:\"sharedaddy\";}i:4;a:5:{s:4:\"time\";i:1456834098;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"subscriptions\";}i:5;a:5:{s:4:\"time\";i:1456834098;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:19:\"gravatar-hovercards\";}i:6;a:5:{s:4:\"time\";i:1456834099;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:12:\"contact-form\";}i:7;a:5:{s:4:\"time\";i:1456834099;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:8:\"carousel\";}i:8;a:5:{s:4:\"time\";i:1456834099;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:6:\"photon\";}i:9;a:5:{s:4:\"time\";i:1456834100;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"related-posts\";}i:10;a:5:{s:4:\"time\";i:1456834112;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:3:\"sso\";}i:11;a:5:{s:4:\"time\";i:1456834208;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:9:\"minileven\";}i:12;a:5:{s:4:\"time\";i:1456834471;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:8:\"markdown\";}i:13;a:5:{s:4:\"time\";i:1456839025;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:8:\"comments\";}i:14;a:5:{s:4:\"time\";i:1456840850;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:10:\"deactivate\";s:4:\"data\";s:5:\"latex\";}i:15;a:5:{s:4:\"time\";i:1456840880;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:5:\"latex\";}i:16;a:4:{s:4:\"time\";i:1456842721;s:7:\"user_id\";i:1;s:7:\"blog_id\";b:0;s:4:\"code\";s:8:\"register\";}i:17;a:4:{s:4:\"time\";i:1456842768;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:9:\"authorize\";}i:18;a:5:{s:4:\"time\";i:1456842805;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:6:\"manage\";}i:19;a:5:{s:4:\"time\";i:1456842806;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:10:\"sharedaddy\";}i:20;a:5:{s:4:\"time\";i:1456842807;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"subscriptions\";}i:21;a:5:{s:4:\"time\";i:1456842807;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:19:\"gravatar-hovercards\";}i:22;a:5:{s:4:\"time\";i:1456842807;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:12:\"contact-form\";}i:23;a:5:{s:4:\"time\";i:1456842807;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:8:\"carousel\";}i:24;a:5:{s:4:\"time\";i:1456842808;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:6:\"photon\";}i:25;a:5:{s:4:\"time\";i:1456842808;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:13:\"related-posts\";}i:26;a:5:{s:4:\"time\";i:1456842809;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:3:\"sso\";}i:27;a:5:{s:4:\"time\";i:1456842836;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:10:\"deactivate\";s:4:\"data\";s:5:\"latex\";}i:28;a:5:{s:4:\"time\";i:1456842856;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:5:\"latex\";}i:29;a:5:{s:4:\"time\";i:1456969601;s:7:\"user_id\";i:1;s:7:\"blog_id\";i:107758049;s:4:\"code\";s:8:\"activate\";s:4:\"data\";s:8:\"markdown\";}}','no');
INSERT INTO `wp_options` VALUES (567,'jetpack_private_options','a:3:{s:8:\"register\";s:76:\"Mrkpr78JN8TvGmbRBxgVpCswcF4Cli2k:1psiLP45QfKQaGjaYv8BIKkoG992f069:1456843321\";s:10:\"blog_token\";s:65:\"uk^m#Tn1qyQTnPh)g^Nb^1Gy71hBKp#c.7J0&S)SpY3!)H#3mEtie9PJ$ZREhiY8)\";s:11:\"user_tokens\";a:1:{i:1;s:67:\"5q0Ja)8XVoNl@Ojqb$XEtHW6R)x&EA@1.*9meScx*5K3B^@Sy0Spv$Brcw6%zI%RU.1\";}}','yes');
INSERT INTO `wp_options` VALUES (6899,'_transient_timeout_jetpack_https_test','1458138993','no');
INSERT INTO `wp_options` VALUES (6900,'_transient_jetpack_https_test','1','no');
INSERT INTO `wp_options` VALUES (570,'jetpack_unique_connection','a:3:{s:9:\"connected\";i:2;s:12:\"disconnected\";i:1;s:7:\"version\";s:5:\"3.6.1\";}','yes');
INSERT INTO `wp_options` VALUES (587,'stats_options','a:7:{s:9:\"admin_bar\";b:1;s:5:\"roles\";a:1:{i:0;s:13:\"administrator\";}s:11:\"count_roles\";a:0:{}s:7:\"blog_id\";i:107758049;s:12:\"do_not_track\";b:1;s:10:\"hide_smile\";b:1;s:7:\"version\";s:1:\"9\";}','yes');
INSERT INTO `wp_options` VALUES (1075,'jetpack_protect_blocked_attempts','40','yes');
INSERT INTO `wp_options` VALUES (6927,'_transient_timeout_dash_5438fb5baf31c513fff2b9a1067656a6','1458096571','no');
INSERT INTO `wp_options` VALUES (6928,'_transient_dash_5438fb5baf31c513fff2b9a1067656a6','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://cn.wordpress.org/2015/12/13/clifford/\'>WordPress 4.4“Clifford”</a> <span class=\"rss-date\">2015年12月12日</span><div class=\"rssSummary\">WordPress 4.4简体中文版现已开放下载，或在您的WordPress仪表盘中升级。我们将此版本命名为“ [&hellip;]</div></li></ul></div><div class=\"rss-widget\"><p><strong>RSS错误</strong>：WP HTTP Error: Operation timed out after 10000 milliseconds with 192235 out of 222146 bytes received</p></div><div class=\"rss-widget\"><ul><li class=\'dashboard-news-plugin\'><span>热门插件:</span> <a href=\'https://wordpress.org/plugins/siteorigin-panels/\' class=\'dashboard-news-plugin-link\'>Page Builder by SiteOrigin</a>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=siteorigin-panels&amp;_wpnonce=4278c08c6a&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'Page Builder by SiteOrigin\'>安装</a>)</span></li></ul></div>','no');
INSERT INTO `wp_options` VALUES (576,'widget_blog_subscription','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (577,'widget_facebook-likebox','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (578,'widget_wpcom-goodreads','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (579,'widget_googleplus-badge','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (580,'widget_grofile','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (581,'widget_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (582,'widget_rss_links','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (583,'widget_wpcom_social_media_icons_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (584,'widget_twitter_timeline','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (585,'widget_jetpack_display_posts_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (586,'jetpack_protect_key','9c853586b06f94948775833e233119260a1abf6f','yes');
INSERT INTO `wp_options` VALUES (592,'trusted_ip_header','O:8:\"stdClass\":3:{s:14:\"trusted_header\";s:11:\"REMOTE_ADDR\";s:8:\"segments\";i:1;s:7:\"reverse\";b:0;}','yes');
INSERT INTO `wp_options` VALUES (593,'sharing-options','a:2:{s:6:\"global\";a:5:{s:12:\"button_style\";s:4:\"icon\";s:13:\"sharing_label\";b:0;s:10:\"open_links\";s:4:\"same\";s:4:\"show\";a:1:{i:0;s:4:\"post\";}s:6:\"custom\";a:1:{i:0;s:17:\"custom-1456840317\";}}s:17:\"custom-1456840317\";a:3:{s:4:\"name\";s:12:\"新浪微博\";s:4:\"icon\";s:33:\"http://open.weibo.com/favicon.ico\";s:3:\"url\";s:74:\"http://service.weibo.com/share/share.php?url=%post_url%&title=%post_title%\";}}','yes');
INSERT INTO `wp_options` VALUES (594,'sharing-services','a:2:{s:7:\"visible\";a:4:{i:0;s:17:\"custom-1456840317\";i:1;s:7:\"twitter\";i:2;s:8:\"facebook\";i:3;s:13:\"google-plus-1\";}s:6:\"hidden\";a:0:{}}','yes');
INSERT INTO `wp_options` VALUES (803,'jetpack_protect_activating','activating','yes');
INSERT INTO `wp_options` VALUES (5232,'_site_transient_browser_fcd501b1a2ad97c6f74c08873a9106f6','a:9:{s:8:\"platform\";s:9:\"Macintosh\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"49.0.2623.75\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes');
INSERT INTO `wp_options` VALUES (1088,'tablepress_plugin_options','{\"plugin_options_db_version\":32,\"table_scheme_db_version\":3,\"prev_tablepress_version\":\"0\",\"tablepress_version\":\"1.7\",\"first_activation\":1456949451,\"message_plugin_update\":false,\"message_donation_nag\":true,\"use_custom_css\":true,\"use_custom_css_file\":true,\"custom_css\":\"\",\"custom_css_minified\":\"\",\"custom_css_version\":0}','yes');
INSERT INTO `wp_options` VALUES (6913,'_transient_timeout_wpcom_subscribers_total','1458056810','no');
INSERT INTO `wp_options` VALUES (6914,'_transient_wpcom_subscribers_total','a:2:{s:6:\"status\";s:7:\"success\";s:5:\"value\";i:0;}','no');
INSERT INTO `wp_options` VALUES (677,'sharedaddy_disable_resources','0','yes');
INSERT INTO `wp_options` VALUES (678,'jetpack-twitter-cards-site-tag','','yes');
INSERT INTO `wp_options` VALUES (810,'quicklatex','a:15:{s:9:\"font_size\";s:2:\"17\";s:10:\"font_color\";s:6:\"000000\";s:7:\"bg_type\";s:1:\"0\";s:8:\"bg_color\";s:6:\"ffffff\";s:10:\"latex_mode\";i:0;s:8:\"preamble\";s:63:\"\\usepackage{amsmath}\n\\usepackage{amsfonts}\n\\usepackage{amssymb}\";s:9:\"use_cache\";s:1:\"1\";s:11:\"show_errors\";i:0;s:15:\"add_footer_link\";i:0;s:21:\"is_preamble_corrected\";i:1;s:25:\"displayed_equations_align\";s:1:\"0\";s:10:\"eqno_align\";s:1:\"0\";s:12:\"latex_syntax\";i:0;s:15:\"exclude_dollars\";i:0;s:12:\"image_format\";s:1:\"2\";}','yes');
INSERT INTO `wp_options` VALUES (1217,'_transient_timeout_tablepress_c_c4ca4238a0b923820dcc509a6f75849b','1458175045','no');
INSERT INTO `wp_options` VALUES (1218,'_transient_tablepress_c_c4ca4238a0b923820dcc509a6f75849b','[\"tablepress_c3b5188a653b5ab71ce17dffbbadfd2a\"]','no');
INSERT INTO `wp_options` VALUES (706,'widget_akismet_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (734,'widget_top-posts','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (735,'widget_widget_contact_info','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (736,'jetpack_site_icon_url','http://i1.wp.com/codingcoder.com/wp-content/uploads/2016/02/cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png?fit=512%2C512','yes');
INSERT INTO `wp_options` VALUES (743,'stats_cache','a:2:{s:32:\"335129511b6126c7135c423f3096d323\";a:1:{i:1458053352;a:0:{}}s:32:\"9c999ca497cd362365d10beeeb7c5d17\";a:1:{i:1458053352;a:0:{}}}','yes');
INSERT INTO `wp_options` VALUES (6645,'_transient_timeout_tablepress_842fe28241b39483540474b58e003306','1458088645','no');
INSERT INTO `wp_options` VALUES (6646,'_transient_tablepress_842fe28241b39483540474b58e003306','\n<table id=\"tablepress-2\" class=\"tablepress tablepress-id-2\">\n<thead>\n<tr class=\"row-1 odd\">\n	<th class=\"column-1\">操作</th><th class=\"column-2\">作用描述</th>\n</tr>\n</thead>\n<tbody class=\"row-hover\">\n<tr class=\"row-2 even\">\n	<td class=\"column-1\">相加（Add）</td><td class=\"column-2\">把源色值和目标色值相加</td>\n</tr>\n<tr class=\"row-3 odd\">\n	<td class=\"column-1\">相减（Sub）</td><td class=\"column-2\">从源色值中减去目标色值</td>\n</tr>\n<tr class=\"row-4 even\">\n	<td class=\"column-1\">反相减（RevSub）</td><td class=\"column-2\">从目标色值中减去源色值</td>\n</tr>\n<tr class=\"row-5 odd\">\n	<td class=\"column-1\">最小值（Min）</td><td class=\"column-2\">使用目标色值和源色值中的最小值</td>\n</tr>\n<tr class=\"row-6 even\">\n	<td class=\"column-1\">最大值（Max）</td><td class=\"column-2\">使用目标色值和源色值中的最大值</td>\n</tr>\n</tbody>\n</table>\n','no');
INSERT INTO `wp_options` VALUES (1372,'crayon_options','a:95:{s:5:\"theme\";s:14:\"solarized-dark\";s:7:\"preview\";b:1;s:15:\"enqueque-themes\";b:1;s:4:\"font\";s:6:\"monaco\";s:16:\"font-size-enable\";b:1;s:9:\"font-size\";i:12;s:11:\"line-height\";i:15;s:14:\"enqueque-fonts\";b:1;s:11:\"height-mode\";i:0;s:6:\"height\";s:3:\"500\";s:11:\"height-unit\";i:0;s:10:\"width-mode\";i:0;s:5:\"width\";s:3:\"500\";s:10:\"width-unit\";i:0;s:7:\"top-set\";b:1;s:10:\"top-margin\";i:12;s:10:\"bottom-set\";b:1;s:13:\"bottom-margin\";i:12;s:11:\"left-margin\";i:12;s:12:\"right-margin\";i:12;s:7:\"h-align\";i:0;s:13:\"inline-margin\";i:5;s:7:\"toolbar\";i:0;s:15:\"toolbar-overlay\";b:1;s:12:\"toolbar-hide\";b:1;s:13:\"toolbar-delay\";b:1;s:10:\"show-title\";b:1;s:9:\"show-lang\";i:0;s:7:\"striped\";b:1;s:7:\"marking\";b:1;s:6:\"ranges\";b:1;s:4:\"nums\";b:1;s:11:\"nums-toggle\";b:1;s:11:\"wrap-toggle\";b:1;s:10:\"start-line\";i:1;s:5:\"plain\";b:1;s:10:\"show-plain\";i:0;s:12:\"plain-toggle\";b:1;s:4:\"copy\";b:1;s:5:\"popup\";b:1;s:13:\"expand-toggle\";b:1;s:17:\"decode-attributes\";b:1;s:15:\"trim-whitespace\";b:1;s:13:\"trim-code-tag\";b:1;s:5:\"mixed\";b:1;s:10:\"show_mixed\";b:1;s:8:\"tab-size\";i:4;s:17:\"whitespace-before\";i:0;s:16:\"whitespace-after\";i:0;s:10:\"inline-tag\";b:1;s:11:\"inline-wrap\";b:1;s:21:\"code-tag-capture-type\";i:0;s:9:\"backquote\";b:1;s:11:\"capture-pre\";b:1;s:13:\"fallback-lang\";s:2:\"c#\";s:10:\"local-path\";s:0:\"\";s:8:\"attr-sep\";i:0;s:21:\"tag-editor-front-hide\";b:1;s:26:\"tag-editor-button-add-text\";s:8:\"Add Code\";s:27:\"tag-editor-button-edit-text\";s:9:\"Edit Code\";s:31:\"tag-editor-quicktag-button-text\";s:6:\"crayon\";s:5:\"cache\";i:1;s:12:\"safe-enqueue\";b:1;s:8:\"comments\";b:1;s:11:\"touchscreen\";b:1;s:12:\"disable-date\";s:0:\"\";s:9:\"error-log\";b:1;s:13:\"error-log-sys\";b:1;s:14:\"error-msg-show\";b:1;s:9:\"error-msg\";s:33:\"发生错误，请稍后重试。\";s:7:\"version\";s:11:\"_2.7.2_beta\";s:10:\"height-set\";b:0;s:9:\"width-set\";b:0;s:8:\"left-set\";b:0;s:9:\"right-set\";b:0;s:12:\"float-enable\";b:0;s:11:\"tab-convert\";b:0;s:6:\"scroll\";b:0;s:18:\"show-plain-default\";b:0;s:12:\"disable-anim\";b:0;s:7:\"runtime\";b:0;s:9:\"hide-help\";b:0;s:17:\"efficient-enqueue\";b:0;s:16:\"capture-mini-tag\";b:0;s:9:\"plain_tag\";b:0;s:10:\"main-query\";b:0;s:18:\"inline-tag-capture\";b:0;s:16:\"code-tag-capture\";b:0;s:6:\"decode\";b:0;s:13:\"excerpt-strip\";b:0;s:16:\"tag-editor-front\";b:0;s:4:\"wrap\";b:0;s:6:\"expand\";b:0;s:8:\"minimize\";b:0;s:13:\"delay-load-js\";b:0;}','yes');
INSERT INTO `wp_options` VALUES (1373,'crayon_posts','a:15:{i:0;i:201;i:1;i:224;i:2;i:262;i:3;i:266;i:4;i:276;i:5;i:294;i:6;i:298;i:7;i:316;i:8;i:320;i:9;i:331;i:10;i:336;i:11;i:333;i:12;i:374;i:13;i:393;i:14;i:400;}','yes');
INSERT INTO `wp_options` VALUES (1374,'crayon_legacy_posts','a:3:{i:0;i:201;i:1;i:294;i:2;i:298;}','yes');
INSERT INTO `wp_options` VALUES (5231,'_site_transient_timeout_browser_fcd501b1a2ad97c6f74c08873a9106f6','1458314458','yes');
INSERT INTO `wp_options` VALUES (1408,'_transient_timeout_tablepress_c_c81e728d9d4c2f636f067f89cc14862c','1458175045','no');
INSERT INTO `wp_options` VALUES (1409,'_transient_tablepress_c_c81e728d9d4c2f636f067f89cc14862c','[\"tablepress_842fe28241b39483540474b58e003306\"]','no');
INSERT INTO `wp_options` VALUES (6647,'_transient_timeout_tablepress_922b00250f58a4949dc94276e5e022db','1458088645','no');
INSERT INTO `wp_options` VALUES (6648,'_transient_tablepress_922b00250f58a4949dc94276e5e022db','\n<table id=\"tablepress-3\" class=\"tablepress tablepress-id-3\">\n<thead>\n<tr class=\"row-1 odd\">\n	<th class=\"column-1\">简写</th><th class=\"column-2\">具体数据类型</th>\n</tr>\n</thead>\n<tbody class=\"row-hover\">\n<tr class=\"row-2 even\">\n	<td class=\"column-1\">One</td><td class=\"column-2\"><code>vec4(1.0) </code></td>\n</tr>\n<tr class=\"row-3 odd\">\n	<td class=\"column-1\">Zero</td><td class=\"column-2\"><code>vec4(0.0)</code></td>\n</tr>\n<tr class=\"row-4 even\">\n	<td class=\"column-1\">SrcAlpha</td><td class=\"column-2\"> <code>vec4(gl_FragColor.a)</code></td>\n</tr>\n<tr class=\"row-5 odd\">\n	<td class=\"column-1\">DstColor</td><td class=\"column-2\"> <code>pixel_color</code></td>\n</tr>\n<tr class=\"row-6 even\">\n	<td class=\"column-1\">DstAlpha</td><td class=\"column-2\"><code> vec4(pixel_color.a) </code></td>\n</tr>\n<tr class=\"row-7 odd\">\n	<td class=\"column-1\">OneMinusSrcColor</td><td class=\"column-2\"><code> vec4(1.0) – gl_FragColor </code></td>\n</tr>\n<tr class=\"row-8 even\">\n	<td class=\"column-1\">OneMinusDstColor</td><td class=\"column-2\"> <code>vec4(1.0) – pixel_color</code></td>\n</tr>\n<tr class=\"row-9 odd\">\n	<td class=\"column-1\">OneMinusDstAlpha</td><td class=\"column-2\"> <code>vec4(1.0 – pixel_color.a)</code></td>\n</tr>\n</tbody>\n</table>\n','no');
INSERT INTO `wp_options` VALUES (1412,'_transient_timeout_tablepress_c_eccbc87e4b5ce2fe28308fd9f2a7baf3','1458175045','no');
INSERT INTO `wp_options` VALUES (1413,'_transient_tablepress_c_eccbc87e4b5ce2fe28308fd9f2a7baf3','[\"tablepress_922b00250f58a4949dc94276e5e022db\"]','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM AUTO_INCREMENT=985 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (1,2,'_wp_page_template','default');
INSERT INTO `wp_postmeta` VALUES (2,1,'_edit_lock','1457870213:1');
INSERT INTO `wp_postmeta` VALUES (3,1,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (6,8,'_wp_attached_file','2016/02/png');
INSERT INTO `wp_postmeta` VALUES (7,8,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1242;s:6:\"height\";i:2208;s:4:\"file\";s:11:\"2016/02/png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (8,9,'_wp_attached_file','2016/02/2015-10-24-1-28-26.png');
INSERT INTO `wp_postmeta` VALUES (9,9,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:532;s:6:\"height\";i:362;s:4:\"file\";s:30:\"2016/02/2015-10-24-1-28-26.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:30:\"2015-10-24-1-28-26-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:30:\"2015-10-24-1-28-26-300x204.png\";s:5:\"width\";i:300;s:6:\"height\";i:204;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (10,10,'_wp_attached_file','2016/02/4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png');
INSERT INTO `wp_postmeta` VALUES (11,10,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:412;s:6:\"height\";i:412;s:4:\"file\";s:51:\"2016/02/4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:51:\"4fb02efb-57f4-4762-a271-5f38a34fbff7-1--150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:51:\"4fb02efb-57f4-4762-a271-5f38a34fbff7-1--300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (12,11,'_wp_attached_file','2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif');
INSERT INTO `wp_postmeta` VALUES (13,11,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:325;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9dd5vg20b4091gqn-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9dd5vg20b4091gqn-300x244.gif\";s:5:\"width\";i:300;s:6:\"height\";i:244;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (14,12,'_wp_attached_file','2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif');
INSERT INTO `wp_postmeta` VALUES (15,12,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:352;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9fjgsg20b409stbq-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9fjgsg20b409stbq-300x264.gif\";s:5:\"width\";i:300;s:6:\"height\";i:264;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (16,13,'_wp_attached_file','2016/02/5657d033jw1exetq9if07g20b408cq8x.gif');
INSERT INTO `wp_postmeta` VALUES (17,13,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetq9if07g20b408cq8x.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9if07g20b408cq8x-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9if07g20b408cq8x-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (18,14,'_wp_attached_file','2016/02/5657d033jw1exetq9nqspg20b406978a.gif');
INSERT INTO `wp_postmeta` VALUES (19,14,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:225;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetq9nqspg20b406978a.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9nqspg20b406978a-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9nqspg20b406978a-300x169.gif\";s:5:\"width\";i:300;s:6:\"height\";i:169;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (20,15,'_wp_attached_file','2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif');
INSERT INTO `wp_postmeta` VALUES (21,15,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9p71vg20b408cdgd-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9p71vg20b408cdgd-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (22,16,'_wp_attached_file','2016/02/5657d033jw1exetq9sretg20b408c46g.gif');
INSERT INTO `wp_postmeta` VALUES (23,16,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetq9sretg20b408c46g.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9sretg20b408c46g-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetq9sretg20b408c46g-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (24,17,'_wp_attached_file','2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif');
INSERT INTO `wp_postmeta` VALUES (25,17,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetqa8svmg20b408cgwy-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetqa8svmg20b408cgwy-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (26,18,'_wp_attached_file','2016/02/5657d033jw1exetqaawlfg20b408c10c.gif');
INSERT INTO `wp_postmeta` VALUES (27,18,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/5657d033jw1exetqaawlfg20b408c10c.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetqaawlfg20b408c10c-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"5657d033jw1exetqaawlfg20b408c10c-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (28,19,'_wp_attached_file','2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1.gif');
INSERT INTO `wp_postmeta` VALUES (29,19,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:46:\"2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:46:\"686272bdgw1exgnhdemmyg20m80gok2q-1-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:46:\"686272bdgw1exgnhdemmyg20m80gok2q-1-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:46:\"686272bdgw1exgnhdemmyg20m80gok2q-1-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:46:\"686272bdgw1exgnhdemmyg20m80gok2q-1-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (30,20,'_wp_attached_file','2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif');
INSERT INTO `wp_postmeta` VALUES (31,20,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhdemmyg20m80gok2q-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhdemmyg20m80gok2q-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhdemmyg20m80gok2q-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (32,21,'_wp_attached_file','2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif');
INSERT INTO `wp_postmeta` VALUES (33,21,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:302;s:6:\"height\";i:546;s:4:\"file\";s:44:\"2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhfre88g208e0f6dhm-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\";s:5:\"width\";i:166;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"686272bdgw1exgnhfre88g208e0f6dhm-302x510.gif\";s:5:\"width\";i:302;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (34,22,'_wp_attached_file','2016/02/69b7d63agw1eukxt53deig20b408ctig.gif');
INSERT INTO `wp_postmeta` VALUES (35,22,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxt53deig20b408ctig.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt53deig20b408ctig-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt53deig20b408ctig-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (36,23,'_wp_attached_file','2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif');
INSERT INTO `wp_postmeta` VALUES (37,23,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt6uabkg20b408c7ug-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt6uabkg20b408c7ug-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (38,24,'_wp_attached_file','2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif');
INSERT INTO `wp_postmeta` VALUES (39,24,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt88lsig20b408cdsb-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt88lsig20b408cdsb-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (40,25,'_wp_attached_file','2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif');
INSERT INTO `wp_postmeta` VALUES (41,25,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt92c01g20b408cakh-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt92c01g20b408cakh-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (42,26,'_wp_attached_file','2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif');
INSERT INTO `wp_postmeta` VALUES (43,26,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt9p5ycg20b408cq8e-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxt9p5ycg20b408cq8e-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (44,27,'_wp_attached_file','2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif');
INSERT INTO `wp_postmeta` VALUES (45,27,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxtae3s8g20b408ctip-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxtae3s8g20b408ctip-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (46,28,'_wp_attached_file','2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif');
INSERT INTO `wp_postmeta` VALUES (47,28,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxtwlb4ig20b408cduc-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1eukxtwlb4ig20b408cduc-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (48,29,'_wp_attached_file','2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif');
INSERT INTO `wp_postmeta` VALUES (49,29,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04tnx11fg20c80961kx-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04tnx11fg20c80961kx-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (50,30,'_wp_attached_file','2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif');
INSERT INTO `wp_postmeta` VALUES (51,30,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04tokn96g20c8096gwx-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04tokn96g20c8096gwx-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (52,31,'_wp_attached_file','2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif');
INSERT INTO `wp_postmeta` VALUES (53,31,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04trl2pvg20c80961kx-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04trl2pvg20c80961kx-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (54,32,'_wp_attached_file','2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif');
INSERT INTO `wp_postmeta` VALUES (55,32,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04turj9xg20c8096k1t-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ev04turj9xg20c8096k1t-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (56,33,'_wp_attached_file','2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif');
INSERT INTO `wp_postmeta` VALUES (57,33,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1evh4bvt9sng20c80967bf-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1evh4bvt9sng20c80967bf-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (58,34,'_wp_attached_file','2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif');
INSERT INTO `wp_postmeta` VALUES (59,34,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1evh4cirlapg20c8096x4a-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1evh4cirlapg20c8096x4a-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (60,35,'_wp_attached_file','2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif');
INSERT INTO `wp_postmeta` VALUES (61,35,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1evtufcz3h0g20c809610s-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1evtufcz3h0g20c809610s-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (62,36,'_wp_attached_file','2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif');
INSERT INTO `wp_postmeta` VALUES (63,36,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewercpkjvrg20c80964qp-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewercpkjvrg20c80964qp-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (64,37,'_wp_attached_file','2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif');
INSERT INTO `wp_postmeta` VALUES (65,37,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewercsvpg4g20c8096q40-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewercsvpg4g20c8096q40-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (66,38,'_wp_attached_file','2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif');
INSERT INTO `wp_postmeta` VALUES (67,38,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewerctomvqg20c8096mzh-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewerctomvqg20c8096mzh-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (68,39,'_wp_attached_file','2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif');
INSERT INTO `wp_postmeta` VALUES (69,39,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:218;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzvomh0y6g20c8062e87-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzvomh0y6g20c8062e87-300x149.gif\";s:5:\"width\";i:300;s:6:\"height\";i:149;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (70,40,'_wp_attached_file','2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif');
INSERT INTO `wp_postmeta` VALUES (71,40,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:46:\"2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:46:\"69b7d63agw1ewzw1xq2v0g20b408ckjm-1-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:46:\"69b7d63agw1ewzw1xq2v0g20b408ckjm-1-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (72,41,'_wp_attached_file','2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm.gif');
INSERT INTO `wp_postmeta` VALUES (73,41,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw1xq2v0g20b408ckjm-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw1xq2v0g20b408ckjm-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (74,42,'_wp_attached_file','2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif');
INSERT INTO `wp_postmeta` VALUES (75,42,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw227mwcg20c80961ky-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw227mwcg20c80961ky-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (76,43,'_wp_attached_file','2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif');
INSERT INTO `wp_postmeta` VALUES (77,43,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:46:\"2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:46:\"69b7d63agw1ewzw24gw5zg20c80964qp-1-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:46:\"69b7d63agw1ewzw24gw5zg20c80964qp-1-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (78,44,'_wp_attached_file','2016/02/69b7d63agw1ewzw24gw5zg20c80964qp.gif');
INSERT INTO `wp_postmeta` VALUES (79,44,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw24gw5zg20c80964qp.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw24gw5zg20c80964qp-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw24gw5zg20c80964qp-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (80,45,'_wp_attached_file','2016/02/69b7d63agw1ewzw2555ggg20c8096abv-1.gif');
INSERT INTO `wp_postmeta` VALUES (81,45,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:46:\"2016/02/69b7d63agw1ewzw2555ggg20c8096abv-1.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:46:\"69b7d63agw1ewzw2555ggg20c8096abv-1-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:46:\"69b7d63agw1ewzw2555ggg20c8096abv-1-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (82,46,'_wp_attached_file','2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif');
INSERT INTO `wp_postmeta` VALUES (83,46,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2555ggg20c8096abv-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2555ggg20c8096abv-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (84,47,'_wp_attached_file','2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif');
INSERT INTO `wp_postmeta` VALUES (85,47,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2h0tqig20c8096kjq-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2h0tqig20c8096kjq-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (86,48,'_wp_attached_file','2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif');
INSERT INTO `wp_postmeta` VALUES (87,48,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2i4783g20c8096q6z-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2i4783g20c8096q6z-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (88,49,'_wp_attached_file','2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif');
INSERT INTO `wp_postmeta` VALUES (89,49,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2kh819g20c80964qp-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2kh819g20c80964qp-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (90,50,'_wp_attached_file','2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif');
INSERT INTO `wp_postmeta` VALUES (91,50,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2lkkw2g20c8096n94-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2lkkw2g20c8096n94-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (92,51,'_wp_attached_file','2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif');
INSERT INTO `wp_postmeta` VALUES (93,51,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:440;s:6:\"height\";i:330;s:4:\"file\";s:44:\"2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2o0idng20c80964qp-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"69b7d63agw1ewzw2o0idng20c80964qp-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (94,52,'_wp_attached_file','2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg');
INSERT INTO `wp_postmeta` VALUES (95,52,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:597;s:6:\"height\";i:597;s:4:\"file\";s:36:\"2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:36:\"7148d7bfjw1dz3vdz0dnxj-1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:36:\"7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:36:\"7148d7bfjw1dz3vdz0dnxj-1-597x510.jpg\";s:5:\"width\";i:597;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (96,53,'_wp_attached_file','2016/02/7148d7bfjw1dz3vdz0dnxj-2.jpg');
INSERT INTO `wp_postmeta` VALUES (97,53,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:597;s:6:\"height\";i:597;s:4:\"file\";s:36:\"2016/02/7148d7bfjw1dz3vdz0dnxj-2.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:36:\"7148d7bfjw1dz3vdz0dnxj-2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:36:\"7148d7bfjw1dz3vdz0dnxj-2-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:36:\"7148d7bfjw1dz3vdz0dnxj-2-597x510.jpg\";s:5:\"width\";i:597;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (98,54,'_wp_attached_file','2016/02/7148d7bfjw1dz3vdz0dnxj.jpg');
INSERT INTO `wp_postmeta` VALUES (99,54,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:597;s:6:\"height\";i:815;s:4:\"file\";s:34:\"2016/02/7148d7bfjw1dz3vdz0dnxj.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:34:\"7148d7bfjw1dz3vdz0dnxj-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:34:\"7148d7bfjw1dz3vdz0dnxj-220x300.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:34:\"7148d7bfjw1dz3vdz0dnxj-597x510.jpg\";s:5:\"width\";i:597;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (100,55,'_wp_attached_file','2016/02/add-1.gif');
INSERT INTO `wp_postmeta` VALUES (101,55,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:292;s:6:\"height\";i:329;s:4:\"file\";s:17:\"2016/02/add-1.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:17:\"add-1-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:17:\"add-1-266x300.gif\";s:5:\"width\";i:266;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (102,56,'_wp_attached_file','2016/02/add.gif');
INSERT INTO `wp_postmeta` VALUES (103,56,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:608;s:6:\"height\";i:329;s:4:\"file\";s:15:\"2016/02/add.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"add-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:15:\"add-300x162.gif\";s:5:\"width\";i:300;s:6:\"height\";i:162;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (104,57,'_wp_attached_file','2016/02/alpha.gif');
INSERT INTO `wp_postmeta` VALUES (105,57,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:269;s:6:\"height\";i:284;s:4:\"file\";s:17:\"2016/02/alpha.gif\";s:5:\"sizes\";a:1:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:17:\"alpha-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (106,58,'_wp_attached_file','2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif');
INSERT INTO `wp_postmeta` VALUES (107,58,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:400;s:6:\"height\";i:300;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlntaq4g20b408c7wn-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (108,59,'_wp_attached_file','2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif');
INSERT INTO `wp_postmeta` VALUES (109,59,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlpon6rg20m80go7v6-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlpon6rg20m80go7v6-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlpon6rg20m80go7v6-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlpon6rg20m80go7v6-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (110,60,'_wp_attached_file','2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif');
INSERT INTO `wp_postmeta` VALUES (111,60,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlqf3wug20m80gojyf-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlqf3wug20m80gojyf-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlqf3wug20m80gojyf-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlqf3wug20m80gojyf-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (112,61,'_wp_attached_file','2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif');
INSERT INTO `wp_postmeta` VALUES (113,61,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlrv9csg20m80gob0d-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlrv9csg20m80gob0d-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlrv9csg20m80gob0d-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlrv9csg20m80gob0d-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (114,62,'_wp_attached_file','2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif');
INSERT INTO `wp_postmeta` VALUES (115,62,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:46:\"2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:46:\"b50ea691gw1exixltat5ug20m80godo3-1-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:46:\"b50ea691gw1exixltat5ug20m80godo3-1-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:46:\"b50ea691gw1exixltat5ug20m80godo3-1-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:46:\"b50ea691gw1exixltat5ug20m80godo3-1-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (116,63,'_wp_attached_file','2016/02/b50ea691gw1exixltat5ug20m80godo3.gif');
INSERT INTO `wp_postmeta` VALUES (117,63,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixltat5ug20m80godo3.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixltat5ug20m80godo3-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixltat5ug20m80godo3-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixltat5ug20m80godo3-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixltat5ug20m80godo3-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (118,64,'_wp_attached_file','2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif');
INSERT INTO `wp_postmeta` VALUES (119,64,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlveoovg20m80gohdt-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlveoovg20m80gohdt-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlveoovg20m80gohdt-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlveoovg20m80gohdt-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (120,65,'_wp_attached_file','2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif');
INSERT INTO `wp_postmeta` VALUES (121,65,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlwuq38g20m80go4ng-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlwuq38g20m80go4ng-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlwuq38g20m80go4ng-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlwuq38g20m80go4ng-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (122,66,'_wp_attached_file','2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif');
INSERT INTO `wp_postmeta` VALUES (123,66,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:44:\"2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlxpi3cg20m80goaj5-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlxpi3cg20m80goaj5-300x225.gif\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:9:\"image/gif\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlxpi3cg20m80goaj5-768x576.gif\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:9:\"image/gif\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"b50ea691gw1exixlxpi3cg20m80goaj5-800x510.gif\";s:5:\"width\";i:800;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (124,67,'_wp_attached_file','2016/02/create-rendertexture.png');
INSERT INTO `wp_postmeta` VALUES (125,67,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:690;s:6:\"height\";i:543;s:4:\"file\";s:32:\"2016/02/create-rendertexture.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:32:\"create-rendertexture-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:32:\"create-rendertexture-300x236.png\";s:5:\"width\";i:300;s:6:\"height\";i:236;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:32:\"create-rendertexture-690x510.png\";s:5:\"width\";i:690;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (126,68,'_wp_attached_file','2016/02/dissolve.png');
INSERT INTO `wp_postmeta` VALUES (127,68,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:145;s:6:\"height\";i:97;s:4:\"file\";s:20:\"2016/02/dissolve.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (128,69,'_wp_attached_file','2016/02/iconSinaWeibo100x100-2x.png');
INSERT INTO `wp_postmeta` VALUES (129,69,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:100;s:6:\"height\";i:100;s:4:\"file\";s:35:\"2016/02/iconSinaWeibo100x100-2x.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (130,70,'_wp_attached_file','2016/02/iconWechat-2x-1.png');
INSERT INTO `wp_postmeta` VALUES (131,70,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:100;s:6:\"height\";i:100;s:4:\"file\";s:27:\"2016/02/iconWechat-2x-1.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (132,71,'_wp_attached_file','2016/02/iconWechat-2x.png');
INSERT INTO `wp_postmeta` VALUES (133,71,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:100;s:6:\"height\";i:100;s:4:\"file\";s:25:\"2016/02/iconWechat-2x.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (134,72,'_wp_attached_file','2016/02/lenna.png');
INSERT INTO `wp_postmeta` VALUES (135,72,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:17:\"2016/02/lenna.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:17:\"lenna-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:17:\"lenna-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:17:\"lenna-512x510.png\";s:5:\"width\";i:512;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (136,73,'_wp_attached_file','2016/02/lenna_full.jpg');
INSERT INTO `wp_postmeta` VALUES (137,73,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1084;s:6:\"height\";i:2318;s:4:\"file\";s:22:\"2016/02/lenna_full.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:22:\"lenna_full-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:22:\"lenna_full-140x300.jpg\";s:5:\"width\";i:140;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:23:\"lenna_full-768x1642.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:1642;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:23:\"lenna_full-479x1024.jpg\";s:5:\"width\";i:479;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:22:\"lenna_full-825x510.jpg\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (138,74,'_wp_attached_file','2016/02/multiply.gif');
INSERT INTO `wp_postmeta` VALUES (139,74,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:265;s:6:\"height\";i:331;s:4:\"file\";s:20:\"2016/02/multiply.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"multiply-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"multiply-240x300.gif\";s:5:\"width\";i:240;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (140,75,'_wp_attached_file','2016/02/normal-alpha.png');
INSERT INTO `wp_postmeta` VALUES (141,75,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:145;s:6:\"height\";i:97;s:4:\"file\";s:24:\"2016/02/normal-alpha.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (142,76,'_wp_attached_file','2016/02/Normal-Copy-1.png');
INSERT INTO `wp_postmeta` VALUES (143,76,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:145;s:6:\"height\";i:97;s:4:\"file\";s:25:\"2016/02/Normal-Copy-1.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (144,77,'_wp_attached_file','2016/02/Normal-Copy-2.png');
INSERT INTO `wp_postmeta` VALUES (145,77,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:145;s:6:\"height\";i:97;s:4:\"file\";s:25:\"2016/02/Normal-Copy-2.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (146,78,'_wp_attached_file','2016/02/Normal-Copy.png');
INSERT INTO `wp_postmeta` VALUES (147,78,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:381;s:6:\"height\";i:239;s:4:\"file\";s:23:\"2016/02/Normal-Copy.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:23:\"Normal-Copy-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:23:\"Normal-Copy-300x188.png\";s:5:\"width\";i:300;s:6:\"height\";i:188;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (148,79,'_wp_attached_file','2016/02/opaque.png');
INSERT INTO `wp_postmeta` VALUES (149,79,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:145;s:6:\"height\";i:97;s:4:\"file\";s:18:\"2016/02/opaque.png\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (150,80,'_wp_attached_file','2016/02/PipelineBlend.png');
INSERT INTO `wp_postmeta` VALUES (151,80,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:524;s:6:\"height\";i:154;s:4:\"file\";s:25:\"2016/02/PipelineBlend.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"PipelineBlend-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:24:\"PipelineBlend-300x88.png\";s:5:\"width\";i:300;s:6:\"height\";i:88;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (152,81,'_wp_attached_file','2016/02/rgb-color-space-visualized-as-a-cube-msdn.png');
INSERT INTO `wp_postmeta` VALUES (153,81,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:267;s:6:\"height\";i:220;s:4:\"file\";s:53:\"2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\";s:5:\"sizes\";a:1:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:53:\"rgb-color-space-visualized-as-a-cube-msdn-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (154,82,'_wp_attached_file','2016/02/sub.gif');
INSERT INTO `wp_postmeta` VALUES (155,82,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:291;s:6:\"height\";i:329;s:4:\"file\";s:15:\"2016/02/sub.gif\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"sub-150x150.gif\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/gif\";}s:6:\"medium\";a:4:{s:4:\"file\";s:15:\"sub-265x300.gif\";s:5:\"width\";i:265;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/gif\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (156,83,'_wp_attached_file','2016/02/weibo-logo.jpg');
INSERT INTO `wp_postmeta` VALUES (157,83,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:100;s:6:\"height\";i:100;s:4:\"file\";s:22:\"2016/02/weibo-logo.jpg\";s:5:\"sizes\";a:0:{}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:10:\"1355397107\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (158,84,'_wp_attached_file','2016/02/ab-menu2.png');
INSERT INTO `wp_postmeta` VALUES (159,84,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:367;s:6:\"height\";i:387;s:4:\"file\";s:20:\"2016/02/ab-menu2.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:20:\"ab-menu2-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:20:\"ab-menu2-284x300.png\";s:5:\"width\";i:284;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (160,85,'_wp_attached_file','2016/02/ab-variant-menu2.png');
INSERT INTO `wp_postmeta` VALUES (161,85,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:394;s:6:\"height\";i:270;s:4:\"file\";s:28:\"2016/02/ab-variant-menu2.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"ab-variant-menu2-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"ab-variant-menu2-300x206.png\";s:5:\"width\";i:300;s:6:\"height\";i:206;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (162,86,'_wp_attached_file','2016/02/assetbundlename.png');
INSERT INTO `wp_postmeta` VALUES (163,86,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:366;s:6:\"height\";i:385;s:4:\"file\";s:27:\"2016/02/assetbundlename.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:27:\"assetbundlename-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:27:\"assetbundlename-285x300.png\";s:5:\"width\";i:285;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (164,87,'_wp_attached_file','2016/02/creating_a_new_ab_name.png');
INSERT INTO `wp_postmeta` VALUES (165,87,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:367;s:6:\"height\";i:390;s:4:\"file\";s:34:\"2016/02/creating_a_new_ab_name.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:34:\"creating_a_new_ab_name-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:34:\"creating_a_new_ab_name-282x300.png\";s:5:\"width\";i:282;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (166,88,'_wp_attached_file','2016/02/dependencies2.png');
INSERT INTO `wp_postmeta` VALUES (167,88,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1025;s:6:\"height\";i:800;s:4:\"file\";s:25:\"2016/02/dependencies2.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"dependencies2-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:25:\"dependencies2-300x234.png\";s:5:\"width\";i:300;s:6:\"height\";i:234;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:25:\"dependencies2-768x599.png\";s:5:\"width\";i:768;s:6:\"height\";i:599;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:26:\"dependencies2-1024x799.png\";s:5:\"width\";i:1024;s:6:\"height\";i:799;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:25:\"dependencies2-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (168,89,'_wp_attached_file','2016/02/matching_variant_structure.png');
INSERT INTO `wp_postmeta` VALUES (169,89,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:156;s:6:\"height\";i:144;s:4:\"file\";s:38:\"2016/02/matching_variant_structure.png\";s:5:\"sizes\";a:1:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:38:\"matching_variant_structure-150x144.png\";s:5:\"width\";i:150;s:6:\"height\";i:144;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (170,90,'_wp_attached_file','2016/02/meshmodelwmaterial.png');
INSERT INTO `wp_postmeta` VALUES (171,90,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:356;s:6:\"height\";i:375;s:4:\"file\";s:30:\"2016/02/meshmodelwmaterial.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:30:\"meshmodelwmaterial-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:30:\"meshmodelwmaterial-285x300.png\";s:5:\"width\";i:285;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (172,91,'_wp_attached_file','2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png');
INSERT INTO `wp_postmeta` VALUES (173,91,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:2560;s:6:\"height\";i:1392;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-4-34-05-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\";s:5:\"width\";i:300;s:6:\"height\";i:163;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-4-34-05-PM-768x418.png\";s:5:\"width\";i:768;s:6:\"height\";i:418;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-08-at-4-34-05-PM-1024x557.png\";s:5:\"width\";i:1024;s:6:\"height\";i:557;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-4-34-05-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (174,92,'_wp_attached_file','2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png');
INSERT INTO `wp_postmeta` VALUES (175,92,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:2560;s:6:\"height\";i:296;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-4-52-50-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\";s:5:\"width\";i:300;s:6:\"height\";i:35;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-4-52-50-PM-768x89.png\";s:5:\"width\";i:768;s:6:\"height\";i:89;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-08-at-4-52-50-PM-1024x118.png\";s:5:\"width\";i:1024;s:6:\"height\";i:118;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-4-52-50-PM-825x296.png\";s:5:\"width\";i:825;s:6:\"height\";i:296;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (176,93,'_wp_attached_file','2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png');
INSERT INTO `wp_postmeta` VALUES (177,93,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1906;s:6:\"height\";i:610;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-07-17-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\";s:5:\"width\";i:300;s:6:\"height\";i:96;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-07-17-PM-768x246.png\";s:5:\"width\";i:768;s:6:\"height\";i:246;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-08-at-5-07-17-PM-1024x328.png\";s:5:\"width\";i:1024;s:6:\"height\";i:328;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-07-17-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (178,94,'_wp_attached_file','2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png');
INSERT INTO `wp_postmeta` VALUES (179,94,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:2114;s:6:\"height\";i:116;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-38-27-PM-150x116.png\";s:5:\"width\";i:150;s:6:\"height\";i:116;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\";s:5:\"width\";i:300;s:6:\"height\";i:16;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-5-38-27-PM-768x42.png\";s:5:\"width\";i:768;s:6:\"height\";i:42;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-38-27-PM-1024x56.png\";s:5:\"width\";i:1024;s:6:\"height\";i:56;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-38-27-PM-825x116.png\";s:5:\"width\";i:825;s:6:\"height\";i:116;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (180,95,'_wp_attached_file','2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png');
INSERT INTO `wp_postmeta` VALUES (181,95,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1062;s:6:\"height\";i:574;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-41-16-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\";s:5:\"width\";i:300;s:6:\"height\";i:162;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-41-16-PM-768x415.png\";s:5:\"width\";i:768;s:6:\"height\";i:415;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-08-at-5-41-16-PM-1024x553.png\";s:5:\"width\";i:1024;s:6:\"height\";i:553;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-5-41-16-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (182,96,'_wp_attached_file','2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png');
INSERT INTO `wp_postmeta` VALUES (183,96,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:2108;s:6:\"height\";i:268;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-6-15-02-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\";s:5:\"width\";i:300;s:6:\"height\";i:38;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-08-at-6-15-02-PM-768x98.png\";s:5:\"width\";i:768;s:6:\"height\";i:98;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-08-at-6-15-02-PM-1024x130.png\";s:5:\"width\";i:1024;s:6:\"height\";i:130;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-08-at-6-15-02-PM-825x268.png\";s:5:\"width\";i:825;s:6:\"height\";i:268;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (184,97,'_wp_attached_file','2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png');
INSERT INTO `wp_postmeta` VALUES (185,97,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1908;s:6:\"height\";i:532;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-12-15-AM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\";s:5:\"width\";i:300;s:6:\"height\";i:84;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-12-15-AM-768x214.png\";s:5:\"width\";i:768;s:6:\"height\";i:214;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2015-11-09-at-11-12-15-AM-1024x286.png\";s:5:\"width\";i:1024;s:6:\"height\";i:286;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-12-15-AM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (186,98,'_wp_attached_file','2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png');
INSERT INTO `wp_postmeta` VALUES (187,98,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1920;s:6:\"height\";i:531;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-13-14-AM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\";s:5:\"width\";i:300;s:6:\"height\";i:83;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-13-14-AM-768x212.png\";s:5:\"width\";i:768;s:6:\"height\";i:212;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2015-11-09-at-11-13-14-AM-1024x283.png\";s:5:\"width\";i:1024;s:6:\"height\";i:283;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-13-14-AM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (188,99,'_wp_attached_file','2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png');
INSERT INTO `wp_postmeta` VALUES (189,99,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1040;s:6:\"height\";i:121;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-28-42-AM-150x121.png\";s:5:\"width\";i:150;s:6:\"height\";i:121;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\";s:5:\"width\";i:300;s:6:\"height\";i:35;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-09-at-11-28-42-AM-768x89.png\";s:5:\"width\";i:768;s:6:\"height\";i:89;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2015-11-09-at-11-28-42-AM-1024x119.png\";s:5:\"width\";i:1024;s:6:\"height\";i:119;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-09-at-11-28-42-AM-825x121.png\";s:5:\"width\";i:825;s:6:\"height\";i:121;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (190,100,'_wp_attached_file','2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png');
INSERT INTO `wp_postmeta` VALUES (191,100,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1014;s:6:\"height\";i:487;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-09-23-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-09-23-PM-300x144.png\";s:5:\"width\";i:300;s:6:\"height\";i:144;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-09-23-PM-768x369.png\";s:5:\"width\";i:768;s:6:\"height\";i:369;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-09-23-PM-825x487.png\";s:5:\"width\";i:825;s:6:\"height\";i:487;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (192,101,'_wp_attached_file','2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png');
INSERT INTO `wp_postmeta` VALUES (193,101,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:923;s:6:\"height\";i:481;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-12-04-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-12-04-PM-300x156.png\";s:5:\"width\";i:300;s:6:\"height\";i:156;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-12-04-PM-768x400.png\";s:5:\"width\";i:768;s:6:\"height\";i:400;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-12-04-PM-825x481.png\";s:5:\"width\";i:825;s:6:\"height\";i:481;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (194,102,'_wp_attached_file','2016/02/Screen-Shot-2015-11-19-at-8-15-54-PM-1.png');
INSERT INTO `wp_postmeta` VALUES (195,102,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1922;s:6:\"height\";i:579;s:4:\"file\";s:50:\"2016/02/Screen-Shot-2015-11-19-at-8-15-54-PM-1.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2015-11-19-at-8-15-54-PM-1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-19-at-8-15-54-PM-1-300x90.png\";s:5:\"width\";i:300;s:6:\"height\";i:90;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2015-11-19-at-8-15-54-PM-1-768x231.png\";s:5:\"width\";i:768;s:6:\"height\";i:231;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:51:\"Screen-Shot-2015-11-19-at-8-15-54-PM-1-1024x308.png\";s:5:\"width\";i:1024;s:6:\"height\";i:308;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2015-11-19-at-8-15-54-PM-1-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (196,103,'_wp_attached_file','2016/02/Screen-Shot-2015-11-19-at-8-15-54-PM.png');
INSERT INTO `wp_postmeta` VALUES (197,103,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1922;s:6:\"height\";i:579;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-19-at-8-15-54-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-15-54-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"Screen-Shot-2015-11-19-at-8-15-54-PM-300x90.png\";s:5:\"width\";i:300;s:6:\"height\";i:90;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-15-54-PM-768x231.png\";s:5:\"width\";i:768;s:6:\"height\";i:231;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-19-at-8-15-54-PM-1024x308.png\";s:5:\"width\";i:1024;s:6:\"height\";i:308;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-15-54-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (198,104,'_wp_attached_file','2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png');
INSERT INTO `wp_postmeta` VALUES (199,104,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1911;s:6:\"height\";i:635;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-19-46-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-19-46-PM-300x100.png\";s:5:\"width\";i:300;s:6:\"height\";i:100;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-19-46-PM-768x255.png\";s:5:\"width\";i:768;s:6:\"height\";i:255;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-19-at-8-19-46-PM-1024x340.png\";s:5:\"width\";i:1024;s:6:\"height\";i:340;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-19-46-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (200,105,'_wp_attached_file','2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png');
INSERT INTO `wp_postmeta` VALUES (201,105,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1914;s:6:\"height\";i:671;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-23-07-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-23-07-PM-300x105.png\";s:5:\"width\";i:300;s:6:\"height\";i:105;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-23-07-PM-768x269.png\";s:5:\"width\";i:768;s:6:\"height\";i:269;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2015-11-19-at-8-23-07-PM-1024x359.png\";s:5:\"width\";i:1024;s:6:\"height\";i:359;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2015-11-19-at-8-23-07-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:1:{s:17:\"WaitingProcessing\";b:1;}}');
INSERT INTO `wp_postmeta` VALUES (202,106,'_wp_attached_file','2016/02/simple_scene.png');
INSERT INTO `wp_postmeta` VALUES (203,106,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:1047;s:6:\"height\";i:648;s:4:\"file\";s:24:\"2016/02/simple_scene.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:24:\"simple_scene-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:24:\"simple_scene-300x186.png\";s:5:\"width\";i:300;s:6:\"height\";i:186;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:24:\"simple_scene-768x475.png\";s:5:\"width\";i:768;s:6:\"height\";i:475;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:25:\"simple_scene-1024x634.png\";s:5:\"width\";i:1024;s:6:\"height\";i:634;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:24:\"simple_scene-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:1:{s:17:\"WaitingProcessing\";b:1;}}');
INSERT INTO `wp_postmeta` VALUES (204,107,'_wp_attached_file','2016/02/tank_assigned_to_ab.png');
INSERT INTO `wp_postmeta` VALUES (205,107,'_wp_attachment_metadata','a:6:{s:5:\"width\";i:363;s:6:\"height\";i:391;s:4:\"file\";s:31:\"2016/02/tank_assigned_to_ab.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:31:\"tank_assigned_to_ab-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:31:\"tank_assigned_to_ab-279x300.png\";s:5:\"width\";i:279;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:1:{s:17:\"WaitingProcessing\";b:1;}}');
INSERT INTO `wp_postmeta` VALUES (206,108,'_wp_attached_file','2016/02/two_rock_columns.png');
INSERT INTO `wp_postmeta` VALUES (207,108,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:779;s:6:\"height\";i:469;s:4:\"file\";s:28:\"2016/02/two_rock_columns.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:28:\"two_rock_columns-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:28:\"two_rock_columns-300x181.png\";s:5:\"width\";i:300;s:6:\"height\";i:181;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:28:\"two_rock_columns-768x462.png\";s:5:\"width\";i:768;s:6:\"height\";i:462;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:3;}s:21:\"ShortPixelImprovement\";d:77.349999999999994;}');
INSERT INTO `wp_postmeta` VALUES (208,109,'_wp_attached_file','2016/02/variant_name_hd.png');
INSERT INTO `wp_postmeta` VALUES (209,109,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:376;s:6:\"height\";i:90;s:4:\"file\";s:27:\"2016/02/variant_name_hd.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:26:\"variant_name_hd-150x90.png\";s:5:\"width\";i:150;s:6:\"height\";i:90;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:26:\"variant_name_hd-300x72.png\";s:5:\"width\";i:300;s:6:\"height\";i:72;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:28.579999999999998;}');
INSERT INTO `wp_postmeta` VALUES (210,110,'_wp_attached_file','2016/02/variant_name_sd.png');
INSERT INTO `wp_postmeta` VALUES (211,110,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:380;s:6:\"height\";i:92;s:4:\"file\";s:27:\"2016/02/variant_name_sd.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:26:\"variant_name_sd-150x92.png\";s:5:\"width\";i:150;s:6:\"height\";i:92;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:26:\"variant_name_sd-300x73.png\";s:5:\"width\";i:300;s:6:\"height\";i:73;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:36.909999999999997;}');
INSERT INTO `wp_postmeta` VALUES (212,111,'_wp_attached_file','2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg');
INSERT INTO `wp_postmeta` VALUES (213,111,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:1280;s:6:\"height\";i:960;s:4:\"file\";s:44:\"2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b47p8s4j20zk0qo106-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b47p8s4j20zk0qo106-300x225.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:225;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b47p8s4j20zk0qo106-768x576.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:576;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:45:\"7148d7bfgw1ez9b47p8s4j20zk0qo106-1024x768.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:768;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b47p8s4j20zk0qo106-825x510.jpg\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:5;}s:21:\"ShortPixelImprovement\";d:72.040000000000006;}');
INSERT INTO `wp_postmeta` VALUES (214,112,'_wp_attached_file','2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg');
INSERT INTO `wp_postmeta` VALUES (215,112,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:690;s:6:\"height\";i:920;s:4:\"file\";s:44:\"2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b487awej20qo0zkwkh-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b487awej20qo0zkwkh-225x300.jpg\";s:5:\"width\";i:225;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b487awej20qo0zkwkh-690x510.jpg\";s:5:\"width\";i:690;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:3;}s:21:\"ShortPixelImprovement\";d:11.66;}');
INSERT INTO `wp_postmeta` VALUES (216,113,'_wp_attached_file','2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg');
INSERT INTO `wp_postmeta` VALUES (217,113,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:690;s:6:\"height\";i:920;s:4:\"file\";s:44:\"2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b48vr2jj20qo0zkdod-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b48vr2jj20qo0zkdod-225x300.jpg\";s:5:\"width\";i:225;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"7148d7bfgw1ez9b48vr2jj20qo0zkdod-690x510.jpg\";s:5:\"width\";i:690;s:6:\"height\";i:510;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:3;}s:21:\"ShortPixelImprovement\";d:10.66;}');
INSERT INTO `wp_postmeta` VALUES (218,114,'_wp_attached_file','2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png');
INSERT INTO `wp_postmeta` VALUES (219,114,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:338;s:6:\"height\";i:330;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-10-45-18-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-10-45-18-PM-300x293.png\";s:5:\"width\";i:300;s:6:\"height\";i:293;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:75.019999999999996;}');
INSERT INTO `wp_postmeta` VALUES (220,115,'_wp_attached_file','2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png');
INSERT INTO `wp_postmeta` VALUES (221,115,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:350;s:6:\"height\";i:416;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-09-05-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-09-05-PM-252x300.png\";s:5:\"width\";i:252;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:76.719999999999999;}');
INSERT INTO `wp_postmeta` VALUES (222,116,'_wp_attached_file','2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png');
INSERT INTO `wp_postmeta` VALUES (223,116,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:446;s:6:\"height\";i:492;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-10-50-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-10-50-PM-272x300.png\";s:5:\"width\";i:272;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:79.579999999999998;}');
INSERT INTO `wp_postmeta` VALUES (224,117,'_wp_attached_file','2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png');
INSERT INTO `wp_postmeta` VALUES (225,117,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:474;s:6:\"height\";i:998;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-15-20-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-15-20-PM-142x300.png\";s:5:\"width\";i:142;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-15-20-PM-474x510.png\";s:5:\"width\";i:474;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:3;}s:21:\"ShortPixelImprovement\";d:81.129999999999995;}');
INSERT INTO `wp_postmeta` VALUES (226,118,'_wp_attached_file','2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png');
INSERT INTO `wp_postmeta` VALUES (227,118,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:530;s:6:\"height\";i:450;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-21-04-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-21-04-PM-300x255.png\";s:5:\"width\";i:300;s:6:\"height\";i:255;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:75.799999999999997;}');
INSERT INTO `wp_postmeta` VALUES (228,119,'_wp_attached_file','2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png');
INSERT INTO `wp_postmeta` VALUES (229,119,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:332;s:6:\"height\";i:922;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-35-10-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-35-10-PM-108x300.png\";s:5:\"width\";i:108;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-01-01-at-11-35-10-PM-332x510.png\";s:5:\"width\";i:332;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:3;}s:21:\"ShortPixelImprovement\";d:74.900000000000006;}');
INSERT INTO `wp_postmeta` VALUES (230,120,'_wp_attached_file','2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png');
INSERT INTO `wp_postmeta` VALUES (231,120,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:479;s:6:\"height\";i:407;s:4:\"file\";s:50:\"2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-01-29-at-3-16-29-PM-1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-01-29-at-3-16-29-PM-1-300x255.png\";s:5:\"width\";i:300;s:6:\"height\";i:255;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:77.329999999999998;}');
INSERT INTO `wp_postmeta` VALUES (232,121,'_wp_attached_file','2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM.png');
INSERT INTO `wp_postmeta` VALUES (233,121,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:479;s:6:\"height\";i:407;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-01-29-at-3-16-29-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-01-29-at-3-16-29-PM-300x255.png\";s:5:\"width\";i:300;s:6:\"height\";i:255;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:69.439999999999998;}');
INSERT INTO `wp_postmeta` VALUES (234,122,'_wp_attached_file','2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png');
INSERT INTO `wp_postmeta` VALUES (235,122,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:814;s:6:\"height\";i:526;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-01-29-at-3-27-46-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-01-29-at-3-27-46-PM-300x194.png\";s:5:\"width\";i:300;s:6:\"height\";i:194;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-01-29-at-3-27-46-PM-768x496.png\";s:5:\"width\";i:768;s:6:\"height\";i:496;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-01-29-at-3-27-46-PM-814x510.png\";s:5:\"width\";i:814;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:4;}s:21:\"ShortPixelImprovement\";d:74.530000000000001;}');
INSERT INTO `wp_postmeta` VALUES (236,123,'_wp_attached_file','2016/02/Screen-Shot-2016-02-19-at-2-00-11-PM.png');
INSERT INTO `wp_postmeta` VALUES (237,123,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:655;s:6:\"height\";i:248;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2016-02-19-at-2-00-11-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-19-at-2-00-11-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-19-at-2-00-11-PM-300x114.png\";s:5:\"width\";i:300;s:6:\"height\";i:114;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:65.489999999999995;}');
INSERT INTO `wp_postmeta` VALUES (238,124,'_wp_attached_file','2016/02/Screen-Shot-2016-02-19-at-2-00-22-PM.png');
INSERT INTO `wp_postmeta` VALUES (239,124,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:655;s:6:\"height\";i:289;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2016-02-19-at-2-00-22-PM.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-19-at-2-00-22-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-19-at-2-00-22-PM-300x132.png\";s:5:\"width\";i:300;s:6:\"height\";i:132;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:2;}s:21:\"ShortPixelImprovement\";d:77.829999999999998;}');
INSERT INTO `wp_postmeta` VALUES (240,125,'_wp_attached_file','2016/02/UI_LayoutElementInspector.png');
INSERT INTO `wp_postmeta` VALUES (241,125,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:292;s:6:\"height\";i:130;s:4:\"file\";s:37:\"2016/02/UI_LayoutElementInspector.png\";s:5:\"sizes\";a:1:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:37:\"UI_LayoutElementInspector-150x130.png\";s:5:\"width\";i:150;s:6:\"height\";i:130;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:1;}s:21:\"ShortPixelImprovement\";d:66.760000000000005;}');
INSERT INTO `wp_postmeta` VALUES (257,132,'_edit_lock','1457278031:1');
INSERT INTO `wp_postmeta` VALUES (256,132,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (258,135,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (259,135,'_edit_lock','1457870462:1');
INSERT INTO `wp_postmeta` VALUES (265,139,'_edit_lock','1457870193:1');
INSERT INTO `wp_postmeta` VALUES (264,139,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (273,143,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (274,143,'_edit_lock','1456755018:1');
INSERT INTO `wp_postmeta` VALUES (277,145,'_wp_attached_file','2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png');
INSERT INTO `wp_postmeta` VALUES (278,145,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:2560;s:6:\"height\";i:840;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-21-at-12.48.03-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\";s:5:\"width\";i:300;s:6:\"height\";i:98;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-21-at-12.48.03-PM-768x252.png\";s:5:\"width\";i:768;s:6:\"height\";i:252;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-02-21-at-12.48.03-PM-1024x336.png\";s:5:\"width\";i:1024;s:6:\"height\";i:336;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-02-21-at-12.48.03-PM-1200x394.png\";s:5:\"width\";i:1200;s:6:\"height\";i:394;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:5;}s:21:\"ShortPixelImprovement\";d:62.68;}');
INSERT INTO `wp_postmeta` VALUES (279,146,'_wp_attached_file','2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png');
INSERT INTO `wp_postmeta` VALUES (280,146,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:2484;s:6:\"height\";i:1378;s:4:\"file\";s:48:\"2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-21-at-1.03.47-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-21-at-1.03.47-PM-768x426.png\";s:5:\"width\";i:768;s:6:\"height\";i:426;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-21-at-1.03.47-PM-1024x568.png\";s:5:\"width\";i:1024;s:6:\"height\";i:568;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-21-at-1.03.47-PM-1200x666.png\";s:5:\"width\";i:1200;s:6:\"height\";i:666;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:5;}s:21:\"ShortPixelImprovement\";d:75.930000000000007;}');
INSERT INTO `wp_postmeta` VALUES (295,155,'_oembed_ded2610751376fafe5d357546071bb52','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (296,155,'_oembed_27aad7c9e26866b46b403df8c1e4c2ac','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (297,155,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (298,155,'_edit_lock','1456103560:1');
INSERT INTO `wp_postmeta` VALUES (299,158,'_wp_attached_file','2016/02/Screen-Shot-2016-02-22-at-10.15.15-AM.png');
INSERT INTO `wp_postmeta` VALUES (300,158,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:1053;s:6:\"height\";i:131;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-02-22-at-10.15.15-AM.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-22-at-10.15.15-AM-150x131.png\";s:5:\"width\";i:150;s:6:\"height\";i:131;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-22-at-10.15.15-AM-300x37.png\";s:5:\"width\";i:300;s:6:\"height\";i:37;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-22-at-10.15.15-AM-768x96.png\";s:5:\"width\";i:768;s:6:\"height\";i:96;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-02-22-at-10.15.15-AM-1024x127.png\";s:5:\"width\";i:1024;s:6:\"height\";i:127;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:4;}s:21:\"ShortPixelImprovement\";d:72.120000000000005;}');
INSERT INTO `wp_postmeta` VALUES (301,159,'_wp_attached_file','2016/02/Screen-Shot-2016-02-22-at-10.15.55-AM.png');
INSERT INTO `wp_postmeta` VALUES (302,159,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:1127;s:6:\"height\";i:356;s:4:\"file\";s:49:\"2016/02/Screen-Shot-2016-02-22-at-10.15.55-AM.png\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-22-at-10.15.55-AM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-02-22-at-10.15.55-AM-300x95.png\";s:5:\"width\";i:300;s:6:\"height\";i:95;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-02-22-at-10.15.55-AM-768x243.png\";s:5:\"width\";i:768;s:6:\"height\";i:243;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-02-22-at-10.15.55-AM-1024x323.png\";s:5:\"width\";i:1024;s:6:\"height\";i:323;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:4;}s:21:\"ShortPixelImprovement\";d:73.760000000000005;}');
INSERT INTO `wp_postmeta` VALUES (303,161,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (304,161,'_edit_lock','1456754931:1');
INSERT INTO `wp_postmeta` VALUES (305,161,'_oembed_f7a82fa94be95b3a92ecb22079f0114f','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (306,162,'_oembed_f28bb8523dc76ad62e6876bef47ee60a','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (307,162,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (308,162,'_edit_lock','1456969774:1');
INSERT INTO `wp_postmeta` VALUES (311,161,'_oembed_d5f2460e5e3bf9183e9a2b1362d383b7','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (312,162,'_oembed_7b2b65e5d310d2cc1540bdbbe1359c78','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (313,165,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (314,165,'_edit_lock','1457068922:1');
INSERT INTO `wp_postmeta` VALUES (315,165,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1456952061;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (316,165,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (317,155,'_oembed_8173818ecfc1565139da7a7001704545','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (318,155,'_oembed_fa654a3f518212a41b4850151d554be9','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (319,165,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (323,170,'_wp_attached_file','2016/02/cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png');
INSERT INTO `wp_postmeta` VALUES (322,169,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (324,170,'_wp_attachment_context','site-icon');
INSERT INTO `wp_postmeta` VALUES (325,170,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:512;s:6:\"height\";i:512;s:4:\"file\";s:59:\"2016/02/cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png\";s:5:\"sizes\";a:7:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:59:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:59:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:59:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--512x510.png\";s:5:\"width\";i:512;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}s:13:\"site_icon-270\";a:4:{s:4:\"file\";s:59:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--270x270.png\";s:5:\"width\";i:270;s:6:\"height\";i:270;s:9:\"mime-type\";s:9:\"image/png\";}s:13:\"site_icon-192\";a:4:{s:4:\"file\";s:59:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--192x192.png\";s:5:\"width\";i:192;s:6:\"height\";i:192;s:9:\"mime-type\";s:9:\"image/png\";}s:13:\"site_icon-180\";a:4:{s:4:\"file\";s:59:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--180x180.png\";s:5:\"width\";i:180;s:6:\"height\";i:180;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"site_icon-32\";a:4:{s:4:\"file\";s:57:\"cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1--32x32.png\";s:5:\"width\";i:32;s:6:\"height\";i:32;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:7;}s:21:\"ShortPixelImprovement\";d:66.030000000000001;}');
INSERT INTO `wp_postmeta` VALUES (326,171,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (327,172,'_publicize_twitter_user','@happyjiahan');
INSERT INTO `wp_postmeta` VALUES (328,172,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (329,172,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (330,171,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (331,171,'_edit_lock','1456917247:1');
INSERT INTO `wp_postmeta` VALUES (333,172,'_edit_lock','1456843239:1');
INSERT INTO `wp_postmeta` VALUES (334,172,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (335,174,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (338,171,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (339,143,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458071120;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (340,132,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457321015;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (343,182,'_wp_attached_file','2016/03/alpha.png');
INSERT INTO `wp_postmeta` VALUES (344,182,'_wp_attachment_metadata','a:7:{s:5:\"width\";i:269;s:6:\"height\";i:284;s:4:\"file\";s:17:\"2016/03/alpha.png\";s:5:\"sizes\";a:1:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:17:\"alpha-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}s:10:\"ShortPixel\";a:3:{s:17:\"WaitingProcessing\";b:1;s:4:\"type\";s:5:\"lossy\";s:9:\"thumbsOpt\";i:1;}s:21:\"ShortPixelImprovement\";d:52.920000000000002;}');
INSERT INTO `wp_postmeta` VALUES (349,1,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458006827;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (353,184,'_edit_lock','1456919712:1');
INSERT INTO `wp_postmeta` VALUES (352,184,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (354,184,'_wp_trash_meta_status','draft');
INSERT INTO `wp_postmeta` VALUES (355,184,'_wp_trash_meta_time','1456919856');
INSERT INTO `wp_postmeta` VALUES (356,186,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (357,186,'_edit_lock','1456929191:1');
INSERT INTO `wp_postmeta` VALUES (358,186,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (359,186,'_oembed_56a88829d8fc40f9a5a1c32f89cf3a20','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (360,186,'_oembed_3585b162487f3e05d450f48eb6e70232','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (361,189,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (362,189,'_tablepress_table_options','{\"last_editor\":1,\"table_head\":true,\"table_foot\":false,\"alternating_row_colors\":true,\"row_hover\":true,\"print_name\":false,\"print_name_position\":\"above\",\"print_description\":false,\"print_description_position\":\"below\",\"extra_css_classes\":\"\",\"use_datatables\":true,\"datatables_sort\":true,\"datatables_filter\":true,\"datatables_paginate\":false,\"datatables_lengthchange\":true,\"datatables_paginate_entries\":10,\"datatables_info\":true,\"datatables_scrollx\":false,\"datatables_custom_commands\":\"\"}');
INSERT INTO `wp_postmeta` VALUES (363,189,'_tablepress_table_visibility','{\"rows\":[1,1,1,1,1,1,1,1,1,1],\"columns\":[1,1]}');
INSERT INTO `wp_postmeta` VALUES (364,186,'_oembed_ce2d6724a10be32e0b29781b3bfbc85f','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (365,186,'_oembed_3c22ef339bc4757f0c295096a1541ae9','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (366,186,'_oembed_75c8ac0281fa9b58668b045c1f86f012','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (367,186,'_oembed_df5d766065f8baf441d2db87419f3adb','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (368,186,'_oembed_6671a085bef0aec9aee221575736ea12','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (369,186,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (381,201,'_edit_lock','1456969864:1');
INSERT INTO `wp_postmeta` VALUES (380,201,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (382,201,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (383,213,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (384,213,'_tablepress_table_options','{\"last_editor\":1,\"table_head\":true,\"table_foot\":false,\"alternating_row_colors\":true,\"row_hover\":true,\"print_name\":false,\"print_name_position\":\"above\",\"print_description\":false,\"print_description_position\":\"below\",\"extra_css_classes\":\"\",\"use_datatables\":true,\"datatables_sort\":true,\"datatables_filter\":true,\"datatables_paginate\":true,\"datatables_lengthchange\":true,\"datatables_paginate_entries\":10,\"datatables_info\":true,\"datatables_scrollx\":false,\"datatables_custom_commands\":\"\"}');
INSERT INTO `wp_postmeta` VALUES (385,213,'_tablepress_table_visibility','{\"rows\":[1,1,1,1,1,1],\"columns\":[1,1]}');
INSERT INTO `wp_postmeta` VALUES (386,216,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (387,216,'_tablepress_table_options','{\"last_editor\":1,\"table_head\":true,\"table_foot\":false,\"alternating_row_colors\":true,\"row_hover\":true,\"print_name\":false,\"print_name_position\":\"above\",\"print_description\":false,\"print_description_position\":\"below\",\"extra_css_classes\":\"\",\"use_datatables\":true,\"datatables_sort\":true,\"datatables_filter\":true,\"datatables_paginate\":true,\"datatables_lengthchange\":true,\"datatables_paginate_entries\":10,\"datatables_info\":true,\"datatables_scrollx\":false,\"datatables_custom_commands\":\"\"}');
INSERT INTO `wp_postmeta` VALUES (388,216,'_tablepress_table_visibility','{\"rows\":[1,1,1,1,1,1,1,1,1],\"columns\":[1,1]}');
INSERT INTO `wp_postmeta` VALUES (389,201,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (395,222,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (394,162,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (396,162,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (401,224,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (399,223,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (400,201,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (402,224,'_oembed_54c16c8735633e27bfa7aa5757db63c8','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (403,224,'_edit_lock','1457072640:1');
INSERT INTO `wp_postmeta` VALUES (404,224,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (405,225,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (406,225,'_edit_lock','1457258716:1');
INSERT INTO `wp_postmeta` VALUES (407,225,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (408,226,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (409,225,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457340255;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (410,227,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (411,228,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (412,229,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (413,230,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (414,231,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (415,225,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (418,232,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (419,232,'_edit_lock','1457248032:1');
INSERT INTO `wp_postmeta` VALUES (420,232,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (421,233,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (422,232,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457423121;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:1;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (423,232,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (426,234,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (427,234,'_edit_lock','1457256732:1');
INSERT INTO `wp_postmeta` VALUES (428,234,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (429,235,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (430,236,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (431,234,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (434,234,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457442963;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:1;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (435,237,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (449,240,'_edit_lock','1457257250:1');
INSERT INTO `wp_postmeta` VALUES (438,238,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (448,240,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (447,239,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (450,240,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (451,241,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (452,240,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (455,242,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (458,240,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457441653;s:7:\"payload\";a:1:{i:0;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (459,243,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (460,243,'_edit_lock','1457257415:1');
INSERT INTO `wp_postmeta` VALUES (461,243,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (462,244,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (463,243,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (466,245,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (467,245,'_edit_lock','1457257861:1');
INSERT INTO `wp_postmeta` VALUES (468,245,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (469,243,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457439356;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (470,245,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (473,246,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (476,247,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (477,247,'_edit_lock','1457258112:1');
INSERT INTO `wp_postmeta` VALUES (478,247,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (479,248,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (480,247,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (483,249,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (484,249,'_edit_lock','1457258580:1');
INSERT INTO `wp_postmeta` VALUES (485,249,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (486,249,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (489,250,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (492,251,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (495,252,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (501,253,'_edit_lock','1457259900:1');
INSERT INTO `wp_postmeta` VALUES (500,253,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (502,253,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (503,253,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (507,253,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457420078;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (506,254,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (508,255,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (511,256,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (515,258,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (514,257,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (516,258,'_edit_lock','1457260411:1');
INSERT INTO `wp_postmeta` VALUES (517,258,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (518,259,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (519,258,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (522,260,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (523,258,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (527,262,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (526,261,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (528,262,'_edit_lock','1457260855:1');
INSERT INTO `wp_postmeta` VALUES (529,262,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (530,262,'_oembed_c65db3019a792ab71d285468fc2048c9','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (531,262,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (535,264,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (536,262,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458098763;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (534,263,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (553,270,'_edit_lock','1457261419:1');
INSERT INTO `wp_postmeta` VALUES (539,265,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (540,266,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (541,266,'_edit_lock','1457261114:1');
INSERT INTO `wp_postmeta` VALUES (542,266,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (543,266,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (550,269,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (546,267,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (552,270,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (549,268,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (551,266,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457469311;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (554,270,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (555,270,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (558,271,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (561,272,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (562,272,'_edit_lock','1457269952:1');
INSERT INTO `wp_postmeta` VALUES (563,272,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (564,272,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (567,273,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (573,274,'_edit_lock','1457271077:1');
INSERT INTO `wp_postmeta` VALUES (572,274,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (574,274,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (575,275,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (576,276,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (577,276,'_edit_lock','1457271062:1');
INSERT INTO `wp_postmeta` VALUES (578,276,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (579,276,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (582,277,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (586,279,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (585,278,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (587,279,'_edit_lock','1457271344:1');
INSERT INTO `wp_postmeta` VALUES (588,279,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (589,280,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (590,281,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (591,279,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (594,279,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457444702;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (595,282,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (596,282,'_edit_lock','1457271531:1');
INSERT INTO `wp_postmeta` VALUES (597,282,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (598,282,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (601,283,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (604,284,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (605,284,'_edit_lock','1457271844:1');
INSERT INTO `wp_postmeta` VALUES (606,284,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (607,284,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (623,288,'_edit_lock','1457272001:1');
INSERT INTO `wp_postmeta` VALUES (610,285,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (616,286,'_edit_lock','1457271776:1');
INSERT INTO `wp_postmeta` VALUES (615,286,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (617,286,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (618,286,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (622,288,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (621,287,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (624,288,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (625,288,'_oembed_9933c36095f1413a71c25e29afe513c3','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (626,288,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (630,290,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (631,290,'_edit_lock','1457272086:1');
INSERT INTO `wp_postmeta` VALUES (629,289,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (632,290,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (633,290,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (637,292,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (636,291,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (638,292,'_edit_lock','1457272273:1');
INSERT INTO `wp_postmeta` VALUES (639,292,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (640,292,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (643,293,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (649,294,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (646,294,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (647,294,'_edit_lock','1457272605:1');
INSERT INTO `wp_postmeta` VALUES (648,294,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (653,296,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (652,295,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (657,298,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (656,297,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (658,298,'_edit_lock','1457272609:1');
INSERT INTO `wp_postmeta` VALUES (659,298,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (660,299,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (661,298,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (665,301,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (664,300,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (666,301,'_edit_lock','1457407922:1');
INSERT INTO `wp_postmeta` VALUES (667,301,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (668,301,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (671,302,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (674,303,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (675,303,'_edit_lock','1457273394:1');
INSERT INTO `wp_postmeta` VALUES (676,303,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (677,303,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (680,304,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (683,305,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (684,305,'_edit_lock','1457273473:1');
INSERT INTO `wp_postmeta` VALUES (685,305,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (686,306,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (687,307,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (688,307,'_edit_lock','1457273586:1');
INSERT INTO `wp_postmeta` VALUES (689,307,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (690,307,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (693,308,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (696,309,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (697,309,'_edit_lock','1457273737:1');
INSERT INTO `wp_postmeta` VALUES (698,309,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (699,309,'_oembed_1c3cf44f61a0c0580027f0b43e472ef1','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (700,309,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (707,311,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (703,310,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (704,311,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (705,311,'_edit_lock','1457275695:1');
INSERT INTO `wp_postmeta` VALUES (706,311,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (711,313,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (710,312,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (715,311,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457445558;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (714,314,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (719,316,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (718,315,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (720,316,'_edit_lock','1457275841:1');
INSERT INTO `wp_postmeta` VALUES (721,316,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (722,316,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (726,318,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (725,317,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (727,316,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457727515;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (731,320,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (730,319,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (732,320,'_edit_lock','1457275087:1');
INSERT INTO `wp_postmeta` VALUES (733,320,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (737,320,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (736,321,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (741,323,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (740,322,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (745,320,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457480859;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:1;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (744,324,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (746,325,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (747,325,'_edit_lock','1457275414:1');
INSERT INTO `wp_postmeta` VALUES (748,325,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (749,326,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (750,327,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (751,132,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (752,132,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (955,393,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (956,394,'_wp_attached_file','2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png');
INSERT INTO `wp_postmeta` VALUES (758,329,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (759,329,'_edit_lock','1457336289:1');
INSERT INTO `wp_postmeta` VALUES (760,329,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (761,329,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (765,329,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457817746;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (764,330,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (766,331,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (767,331,'_oembed_f5af46beac185ff01833335114f54a45','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (768,331,'_edit_lock','1457350832:1');
INSERT INTO `wp_postmeta` VALUES (769,331,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (770,332,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (771,333,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (772,333,'_edit_lock','1457361144:1');
INSERT INTO `wp_postmeta` VALUES (773,333,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (774,334,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (775,333,'_oembed_637f40af61e2225b4b6d4f3f07c42b11','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (776,335,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (777,336,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (778,336,'_oembed_9c57eb3f6013a20541e0eaf7ea205c77','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (779,336,'_edit_lock','1457359160:1');
INSERT INTO `wp_postmeta` VALUES (780,336,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (781,337,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (782,338,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (783,338,'_edit_lock','1457347731:1');
INSERT INTO `wp_postmeta` VALUES (784,338,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (785,339,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (786,338,'_oembed_0764a6e092c49204cb4bcaca35b4c7ce','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (787,340,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (788,341,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (789,331,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457776596;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (790,247,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457392927;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (791,331,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (794,342,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (795,343,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (796,336,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (802,345,'_wp_attached_file','2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png');
INSERT INTO `wp_postmeta` VALUES (799,344,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (803,345,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:2560;s:6:\"height\";i:1136;s:4:\"file\";s:49:\"2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.07.05-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\";s:5:\"width\";i:300;s:6:\"height\";i:133;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.07.05-PM-768x341.png\";s:5:\"width\";i:768;s:6:\"height\";i:341;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-03-07-at-10.07.05-PM-1024x454.png\";s:5:\"width\";i:1024;s:6:\"height\";i:454;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.07.05-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (804,346,'_wp_attached_file','2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png');
INSERT INTO `wp_postmeta` VALUES (805,346,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:976;s:6:\"height\";i:1124;s:4:\"file\";s:49:\"2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.10.35-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\";s:5:\"width\";i:260;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.10.35-PM-768x884.png\";s:5:\"width\";i:768;s:6:\"height\";i:884;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-03-07-at-10.10.35-PM-889x1024.png\";s:5:\"width\";i:889;s:6:\"height\";i:1024;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.10.35-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (806,347,'_wp_attached_file','2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png');
INSERT INTO `wp_postmeta` VALUES (807,347,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:976;s:6:\"height\";i:1152;s:4:\"file\";s:49:\"2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.11.26-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\";s:5:\"width\";i:254;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.11.26-PM-768x906.png\";s:5:\"width\";i:768;s:6:\"height\";i:906;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:50:\"Screen-Shot-2016-03-07-at-10.11.26-PM-868x1024.png\";s:5:\"width\";i:868;s:6:\"height\";i:1024;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-07-at-10.11.26-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (808,333,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (812,333,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458086159;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:1;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (811,348,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (813,349,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (816,350,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (819,351,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (820,276,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457436933;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (821,272,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457442359;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (822,282,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457444610;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (823,249,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457450083;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:1;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (824,352,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (827,353,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (833,307,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457701991;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (830,301,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (954,393,'_edit_lock','1458043959:1');
INSERT INTO `wp_postmeta` VALUES (953,393,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (834,286,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457452440;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:1;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (835,292,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457453661;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (836,290,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457702007;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (837,303,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457701943;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (838,270,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457464894;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (839,284,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457701999;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (840,356,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (841,356,'_edit_lock','1457434633:1');
INSERT INTO `wp_postmeta` VALUES (842,356,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (843,356,'_oembed_72791b31aa875580766b8915dd5034d8','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (844,357,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (845,298,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457471588;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (846,309,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457472673;s:7:\"payload\";a:1:{i:0;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (847,294,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457474982;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (848,358,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (849,359,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (850,359,'_oembed_90c965a5bd3dd56b5cb66257b0524426','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (851,359,'_edit_lock','1457709685:1');
INSERT INTO `wp_postmeta` VALUES (852,359,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (853,360,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (854,288,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457483236;s:7:\"payload\";a:1:{i:0;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (855,361,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (856,361,'_oembed_941a81602d7b72f6f4a1e18ab54db653','<blockquote data-secret=\"OFv6fA4Gzu\" class=\"wp-embedded-content\"><a href=\"https://wolfpaulus.com/journal/mac/tomcat8/\">Installing Tomcat 8 on OS X 10.11 El Capitan</a></blockquote><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"display:none;\" src=\"https://wolfpaulus.com/journal/mac/tomcat8/embed/#?secret=OFv6fA4Gzu\" data-secret=\"OFv6fA4Gzu\" width=\"600\" height=\"338\" title=\"Embedded WordPress Post\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>');
INSERT INTO `wp_postmeta` VALUES (857,361,'_oembed_time_941a81602d7b72f6f4a1e18ab54db653','1457448256');
INSERT INTO `wp_postmeta` VALUES (858,361,'_edit_lock','1457709674:1');
INSERT INTO `wp_postmeta` VALUES (859,361,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (860,362,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (861,361,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (862,363,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (863,359,'_oembed_d64873ad5a10fd0eab9d82addfd04149','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (864,364,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (865,364,'_edit_lock','1457615457:1');
INSERT INTO `wp_postmeta` VALUES (866,364,'_oembed_aebbc90b98e725987b09163fc7380f97','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (867,364,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (868,365,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (869,364,'_oembed_cf1801f2a282039273d4decbf83ebfeb','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (870,364,'_oembed_d2d7dbedb1c801cc5a73cf30f55da5f8','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (871,366,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (872,367,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (873,368,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (874,369,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (875,369,'_edit_lock','1457673930:1');
INSERT INTO `wp_postmeta` VALUES (876,369,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (877,369,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (881,369,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457880895;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (880,370,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (882,371,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (883,371,'_edit_lock','1457706395:1');
INSERT INTO `wp_postmeta` VALUES (884,371,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (885,371,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (889,373,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (888,372,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (890,336,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457783342;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (891,245,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1457786607;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (892,371,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458068251;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:1;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (893,374,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (894,374,'_edit_lock','1457791730:1');
INSERT INTO `wp_postmeta` VALUES (895,374,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (896,374,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (900,374,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458001934;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:165;}i:1;a:1:{s:2:\"id\";i:143;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (899,375,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (901,376,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (902,376,'_edit_lock','1457845627:1');
INSERT INTO `wp_postmeta` VALUES (903,376,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (904,376,'_oembed_cac4523c5409ce804d0cfab2f08cb331','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (905,376,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (909,376,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458083536;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}i:2;a:1:{s:2:\"id\";i:1;}}}}');
INSERT INTO `wp_postmeta` VALUES (908,377,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (910,378,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (911,378,'_edit_lock','1457848919:1');
INSERT INTO `wp_postmeta` VALUES (912,378,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (913,378,'_oembed_bc483dfa0b14c026f4150056ef3af88e','<blockquote data-secret=\"UimhubKNli\" class=\"wp-embedded-content\"><a href=\"http://www.glenstevens.ca/unity3d-best-practices/\">Unity3D Best Practices</a></blockquote><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"display:none;\" src=\"http://www.glenstevens.ca/unity3d-best-practices/embed/#?secret=UimhubKNli\" data-secret=\"UimhubKNli\" width=\"600\" height=\"338\" title=\"Embedded WordPress Post\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>');
INSERT INTO `wp_postmeta` VALUES (914,378,'_oembed_time_bc483dfa0b14c026f4150056ef3af88e','1457846141');
INSERT INTO `wp_postmeta` VALUES (915,378,'_oembed_81e2e09d24a86ef3a428290bcb1f50e1','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (916,378,'_oembed_2d59b621aea3b8975b1f16f2cb1b2d0e','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (917,379,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (918,379,'_edit_lock','1457850460:1');
INSERT INTO `wp_postmeta` VALUES (919,379,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (920,380,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (921,379,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458057322;s:7:\"payload\";a:1:{i:0;a:1:{s:2:\"id\";i:143;}}}}');
INSERT INTO `wp_postmeta` VALUES (922,379,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (926,382,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (925,381,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (927,382,'_edit_lock','1457859114:1');
INSERT INTO `wp_postmeta` VALUES (928,382,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (929,383,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (930,382,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (933,384,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (934,2,'_wp_trash_meta_status','publish');
INSERT INTO `wp_postmeta` VALUES (935,2,'_wp_trash_meta_time','1457870293');
INSERT INTO `wp_postmeta` VALUES (936,385,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (937,2,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (938,139,'_wp_trash_meta_status','publish');
INSERT INTO `wp_postmeta` VALUES (939,139,'_wp_trash_meta_time','1457870365');
INSERT INTO `wp_postmeta` VALUES (940,386,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (941,139,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (942,387,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (943,387,'_edit_lock','1457933885:1');
INSERT INTO `wp_postmeta` VALUES (944,387,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (945,387,'_oembed_d75d9f647058f1cf4ff1927f2b3304cc','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (946,388,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (947,389,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (948,390,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (949,391,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (950,391,'_edit_lock','1457950787:1');
INSERT INTO `wp_postmeta` VALUES (951,391,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (952,392,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (957,394,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:647;s:6:\"height\";i:529;s:4:\"file\";s:48:\"2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.16-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\";s:5:\"width\";i:300;s:6:\"height\";i:245;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.16-PM-647x510.png\";s:5:\"width\";i:647;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (958,395,'_wp_attached_file','2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png');
INSERT INTO `wp_postmeta` VALUES (959,395,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1920;s:6:\"height\";i:1053;s:4:\"file\";s:48:\"2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.40-PM-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:9:\"image/png\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.40-PM-768x421.png\";s:5:\"width\";i:768;s:6:\"height\";i:421;s:9:\"mime-type\";s:9:\"image/png\";}s:5:\"large\";a:4:{s:4:\"file\";s:49:\"Screen-Shot-2016-03-15-at-7.51.40-PM-1024x562.png\";s:5:\"width\";i:1024;s:6:\"height\";i:562;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:48:\"Screen-Shot-2016-03-15-at-7.51.40-PM-825x510.png\";s:5:\"width\";i:825;s:6:\"height\";i:510;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (960,396,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (961,393,'_jetpack_related_posts_cache','a:0:{}');
INSERT INTO `wp_postmeta` VALUES (962,397,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (963,398,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (964,399,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (965,393,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (968,400,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (969,400,'_edit_lock','1458051067:1');
INSERT INTO `wp_postmeta` VALUES (970,400,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (971,401,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (972,402,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (973,400,'_oembed_1b922cf1c34b06ebf108f5f08dc11227','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (974,400,'_wpas_done_all','1');
INSERT INTO `wp_postmeta` VALUES (978,400,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458094415;s:7:\"payload\";a:2:{i:0;a:1:{s:2:\"id\";i:143;}i:1;a:1:{s:2:\"id\";i:165;}}}}');
INSERT INTO `wp_postmeta` VALUES (977,403,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (979,404,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (980,404,'_oembed_e87077ea5ef0fe9e1b1c2f18e35abaf6','{{unknown}}');
INSERT INTO `wp_postmeta` VALUES (981,404,'_edit_lock','1458052949:1');
INSERT INTO `wp_postmeta` VALUES (982,404,'_edit_last','1');
INSERT INTO `wp_postmeta` VALUES (983,405,'_wpcom_is_markdown','1');
INSERT INTO `wp_postmeta` VALUES (984,382,'_jetpack_related_posts_cache','a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1458098790;s:7:\"payload\";a:1:{i:0;a:1:{s:2:\"id\";i:143;}}}}');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=MyISAM AUTO_INCREMENT=406 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (1,1,'2013-02-20 12:58:59','2013-02-20 04:58:59','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','publish','open','open','','hello-world','','','2016-03-02 19:54:36','2016-03-02 11:54:36','',0,'http://115.159.76.183/?p=1',0,'post','',0);
INSERT INTO `wp_posts` VALUES (2,1,'2016-02-20 12:58:59','2016-02-20 04:58:59','这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样：\n\n<blockquote>我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。</blockquote>\n\n……或下面这样：\n\n<blockquote>XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的贡献。</blockquote>\n\n作为一个新的WordPress用户，您可以前往<a href=\"http://115.159.76.183/wp-admin/\">您的仪表盘</a>删除这个页面，并建立属于您的全新内容。祝您使用愉快！','示例页面','','trash','closed','open','','sample-page','','','2016-03-13 19:58:13','2016-03-13 11:58:13','这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样：\n\n<blockquote>我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。</blockquote>\n\n……或下面这样：\n\n<blockquote>XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的贡献。</blockquote>\n\n作为一个新的WordPress用户，您可以前往<a href=\"http://115.159.76.183/wp-admin/\">您的仪表盘</a>删除这个页面，并建立属于您的全新内容。祝您使用愉快！',0,'http://115.159.76.183/?page_id=2',0,'page','',0);
INSERT INTO `wp_posts` VALUES (6,1,'2016-02-20 19:51:10','2016-02-20 11:51:10','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\n\n破土君\n<blockquote> Keep looking. Don\'t settle!\n\n&nbsp;</blockquote>\n90后的我，乐观开朗，做自己喜欢的事\n\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\n\n喜欢70、80年代的老歌，有一个怀旧的心\n\n朋友们都说我很靠谱\n\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\n\n在那里，我收获了一枚美眉、一群朋友\n\n还有那一份牵挂一生的友情\n\n后来，我来到了北京\n\n成为了码农\n\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\n\n读点闲书，看个电影\n\n偶尔思考一下宇宙是什么\n\n咖啡是不喜欢喝的\n\n对明信片有种特别的爱好，那里有对远方的憧憬\n\n学点设计，写点代码\n\n自己的理想工作状态是成为一个旅行式的自由职业者\n\n虽然很困难，但是我在不断努力中\n\n人，就该有点梦想不是？\n\n2014年5月13日，我做出了一个让我自己感动的决定\n\n给自己一点时间，给自己一个机会，做自己喜欢的事情\n\n现在的我，身在上海\n\n一群小伙伴，还有一只可爱的猫\n\n一起努力，书写着自己喜欢的故事\n\n这就是我\n\n期待和你相识，分享你的故事\n\n我们的故事未完待续...\n\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','inherit','closed','closed','','1-autosave-v1','','','2016-02-20 19:51:10','2016-02-20 11:51:10','',1,'http://115.159.76.183/?p=6',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (7,1,'2016-02-20 14:37:19','2016-02-20 06:37:19','&lt;img src=\"/content/images/2015/10/7148d7bfjw1dz3vdz0dnxj-2.jpg\" style=\"width: 100px;\"&gt;\r\n\r\n破土君\r\n\r\n&gt; Keep looking. Don\'t settle!\r\n\r\n---\r\n\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：[破土君](http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place)\r\n\r\n作吧！','关于作者','','inherit','closed','closed','','1-revision-v1','','','2016-02-20 14:37:19','2016-02-20 06:37:19','',1,'http://115.159.76.183/?p=7',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (8,1,'2016-02-20 14:39:09','2016-02-20 06:39:09','','------','','inherit','open','closed','','8','','','2016-02-20 14:39:09','2016-02-20 06:39:09','',0,'http://115.159.76.183/wp-content/uploads/2016/02/png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (9,1,'2016-02-20 14:39:10','2016-02-20 06:39:10','','-----2015-10-24---1-28-26','','inherit','open','closed','','2015-10-24-1-28-26','','','2016-03-02 20:05:25','2016-03-02 12:05:25','',186,'http://115.159.76.183/wp-content/uploads/2016/02/2015-10-24-1-28-26.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (10,1,'2016-02-20 14:39:10','2016-02-20 06:39:10','','4fb02efb-57f4-4762-a271-5f38a34fbff7--1-','','inherit','open','closed','','4fb02efb-57f4-4762-a271-5f38a34fbff7-1','','','2016-02-20 14:39:10','2016-02-20 06:39:10','',0,'http://115.159.76.183/wp-content/uploads/2016/02/4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (11,1,'2016-02-20 14:39:11','2016-02-20 06:39:11','','5657d033jw1exetq9dd5vg20b4091gqn','','inherit','open','closed','','5657d033jw1exetq9dd5vg20b4091gqn','','','2016-03-06 17:37:35','2016-03-06 09:37:35','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (12,1,'2016-02-20 14:39:12','2016-02-20 06:39:12','','5657d033jw1exetq9fjgsg20b409stbq','','inherit','open','closed','','5657d033jw1exetq9fjgsg20b409stbq','','','2016-03-06 17:38:21','2016-03-06 09:38:21','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (13,1,'2016-02-20 14:39:13','2016-02-20 06:39:13','','5657d033jw1exetq9if07g20b408cq8x','','inherit','open','closed','','5657d033jw1exetq9if07g20b408cq8x','','','2016-03-06 17:38:42','2016-03-06 09:38:42','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (14,1,'2016-02-20 14:39:13','2016-02-20 06:39:13','','5657d033jw1exetq9nqspg20b406978a','','inherit','open','closed','','5657d033jw1exetq9nqspg20b406978a','','','2016-03-06 17:39:01','2016-03-06 09:39:01','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (15,1,'2016-02-20 14:39:14','2016-02-20 06:39:14','','5657d033jw1exetq9p71vg20b408cdgd','','inherit','open','closed','','5657d033jw1exetq9p71vg20b408cdgd','','','2016-03-06 17:39:20','2016-03-06 09:39:20','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (16,1,'2016-02-20 14:39:14','2016-02-20 06:39:14','','5657d033jw1exetq9sretg20b408c46g','','inherit','open','closed','','5657d033jw1exetq9sretg20b408c46g','','','2016-03-06 17:39:35','2016-03-06 09:39:35','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (17,1,'2016-02-20 14:39:15','2016-02-20 06:39:15','','5657d033jw1exetqa8svmg20b408cgwy','','inherit','open','closed','','5657d033jw1exetqa8svmg20b408cgwy','','','2016-03-06 17:39:49','2016-03-06 09:39:49','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (18,1,'2016-02-20 14:39:16','2016-02-20 06:39:16','','5657d033jw1exetqaawlfg20b408c10c','','inherit','open','closed','','5657d033jw1exetqaawlfg20b408c10c','','','2016-03-06 17:40:04','2016-03-06 09:40:04','',240,'http://115.159.76.183/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (19,1,'2016-02-20 14:39:17','2016-02-20 06:39:17','','686272bdgw1exgnhdemmyg20m80gok2q-1','','inherit','open','closed','','686272bdgw1exgnhdemmyg20m80gok2q-1','','','2016-03-06 15:21:27','2016-03-06 07:21:27','',234,'http://115.159.76.183/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (20,1,'2016-02-20 14:39:17','2016-02-20 06:39:17','','686272bdgw1exgnhdemmyg20m80gok2q','','inherit','open','closed','','686272bdgw1exgnhdemmyg20m80gok2q','','','2016-03-06 15:21:11','2016-03-06 07:21:11','',234,'http://115.159.76.183/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (21,1,'2016-02-20 14:39:18','2016-02-20 06:39:18','','686272bdgw1exgnhfre88g208e0f6dhm','','inherit','open','closed','','686272bdgw1exgnhfre88g208e0f6dhm','','','2016-03-06 15:20:17','2016-03-06 07:20:17','',234,'http://115.159.76.183/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (22,1,'2016-02-20 14:39:19','2016-02-20 06:39:19','','69b7d63agw1eukxt53deig20b408ctig','','inherit','open','closed','','69b7d63agw1eukxt53deig20b408ctig','','','2016-03-06 17:56:47','2016-03-06 09:56:47','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (23,1,'2016-02-20 14:39:20','2016-02-20 06:39:20','','69b7d63agw1eukxt6uabkg20b408c7ug','','inherit','open','closed','','69b7d63agw1eukxt6uabkg20b408c7ug','','','2016-03-06 17:55:09','2016-03-06 09:55:09','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (24,1,'2016-02-20 14:39:21','2016-02-20 06:39:21','','69b7d63agw1eukxt88lsig20b408cdsb','','inherit','open','closed','','69b7d63agw1eukxt88lsig20b408cdsb','','','2016-03-06 17:55:54','2016-03-06 09:55:54','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (25,1,'2016-02-20 14:39:22','2016-02-20 06:39:22','','69b7d63agw1eukxt92c01g20b408cakh','','inherit','open','closed','','69b7d63agw1eukxt92c01g20b408cakh','','','2016-03-06 17:56:07','2016-03-06 09:56:07','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (26,1,'2016-02-20 14:39:22','2016-02-20 06:39:22','','69b7d63agw1eukxt9p5ycg20b408cq8e','','inherit','open','closed','','69b7d63agw1eukxt9p5ycg20b408cq8e','','','2016-03-06 17:55:30','2016-03-06 09:55:30','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (27,1,'2016-02-20 14:39:23','2016-02-20 06:39:23','','69b7d63agw1eukxtae3s8g20b408ctip','','inherit','open','closed','','69b7d63agw1eukxtae3s8g20b408ctip','','','2016-03-06 17:56:35','2016-03-06 09:56:35','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (28,1,'2016-02-20 14:39:23','2016-02-20 06:39:23','','69b7d63agw1eukxtwlb4ig20b408cduc','','inherit','open','closed','','69b7d63agw1eukxtwlb4ig20b408cduc','','','2016-03-06 17:56:19','2016-03-06 09:56:19','',247,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (29,1,'2016-02-20 14:39:24','2016-02-20 06:39:24','','69b7d63agw1ev04tnx11fg20c80961kx','','inherit','open','closed','','69b7d63agw1ev04tnx11fg20c80961kx','','','2016-03-06 17:47:32','2016-03-06 09:47:32','',245,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (30,1,'2016-02-20 14:39:25','2016-02-20 06:39:25','','69b7d63agw1ev04tokn96g20c8096gwx','','inherit','open','closed','','69b7d63agw1ev04tokn96g20c8096gwx','','','2016-03-06 17:47:45','2016-03-06 09:47:45','',245,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (31,1,'2016-02-20 14:39:26','2016-02-20 06:39:26','','69b7d63agw1ev04trl2pvg20c80961kx','','inherit','open','closed','','69b7d63agw1ev04trl2pvg20c80961kx','','','2016-03-06 17:47:17','2016-03-06 09:47:17','',245,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (32,1,'2016-02-20 14:39:27','2016-02-20 06:39:27','','69b7d63agw1ev04turj9xg20c8096k1t','','inherit','open','closed','','69b7d63agw1ev04turj9xg20c8096k1t','','','2016-03-06 17:47:59','2016-03-06 09:47:59','',245,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (33,1,'2016-02-20 14:39:28','2016-02-20 06:39:28','','69b7d63agw1evh4bvt9sng20c80967bf','','inherit','open','closed','','69b7d63agw1evh4bvt9sng20c80967bf','','','2016-03-06 17:59:11','2016-03-06 09:59:11','',249,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (34,1,'2016-02-20 14:39:28','2016-02-20 06:39:28','','69b7d63agw1evh4cirlapg20c8096x4a','','inherit','open','closed','','69b7d63agw1evh4cirlapg20c8096x4a','','','2016-03-06 17:58:58','2016-03-06 09:58:58','',249,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (35,1,'2016-02-20 14:39:29','2016-02-20 06:39:29','','69b7d63agw1evtufcz3h0g20c809610s','','inherit','open','closed','','69b7d63agw1evtufcz3h0g20c809610s','','','2016-03-06 17:58:46','2016-03-06 09:58:46','',249,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (36,1,'2016-02-20 14:39:30','2016-02-20 06:39:30','','69b7d63agw1ewercpkjvrg20c80964qp','','inherit','open','closed','','69b7d63agw1ewercpkjvrg20c80964qp','','','2016-03-06 17:58:20','2016-03-06 09:58:20','',249,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (37,1,'2016-02-20 14:39:30','2016-02-20 06:39:30','','69b7d63agw1ewercsvpg4g20c8096q40','','inherit','open','closed','','69b7d63agw1ewercsvpg4g20c8096q40','','','2016-03-06 17:58:07','2016-03-06 09:58:07','',249,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (38,1,'2016-02-20 14:39:31','2016-02-20 06:39:31','','69b7d63agw1ewerctomvqg20c8096mzh','','inherit','open','closed','','69b7d63agw1ewerctomvqg20c8096mzh','','','2016-03-06 17:59:28','2016-03-06 09:59:28','',249,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (39,1,'2016-02-20 14:39:34','2016-02-20 06:39:34','','69b7d63agw1ewzvomh0y6g20c8062e87','','inherit','open','closed','','69b7d63agw1ewzvomh0y6g20c8062e87','','','2016-03-06 17:44:36','2016-03-06 09:44:36','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (40,1,'2016-02-20 14:39:36','2016-02-20 06:39:36','','69b7d63agw1ewzw1xq2v0g20b408ckjm-1','','inherit','open','closed','','69b7d63agw1ewzw1xq2v0g20b408ckjm-1','','','2016-03-06 17:44:58','2016-03-06 09:44:58','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (41,1,'2016-02-20 14:39:38','2016-02-20 06:39:38','','69b7d63agw1ewzw1xq2v0g20b408ckjm','','inherit','open','closed','','69b7d63agw1ewzw1xq2v0g20b408ckjm','','','2016-02-20 14:39:38','2016-02-20 06:39:38','',0,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (42,1,'2016-02-20 14:39:39','2016-02-20 06:39:39','','69b7d63agw1ewzw227mwcg20c80961ky','','inherit','open','closed','','69b7d63agw1ewzw227mwcg20c80961ky','','','2016-03-06 17:43:46','2016-03-06 09:43:46','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (43,1,'2016-02-20 14:39:40','2016-02-20 06:39:40','','69b7d63agw1ewzw24gw5zg20c80964qp-1','','inherit','open','closed','','69b7d63agw1ewzw24gw5zg20c80964qp-1','','','2016-03-06 17:42:45','2016-03-06 09:42:45','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (44,1,'2016-02-20 14:39:41','2016-02-20 06:39:41','','69b7d63agw1ewzw24gw5zg20c80964qp','','inherit','open','closed','','69b7d63agw1ewzw24gw5zg20c80964qp','','','2016-02-20 14:39:41','2016-02-20 06:39:41','',0,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (45,1,'2016-02-20 14:39:41','2016-02-20 06:39:41','','69b7d63agw1ewzw2555ggg20c8096abv-1','','inherit','open','closed','','69b7d63agw1ewzw2555ggg20c8096abv-1','','','2016-02-20 14:39:41','2016-02-20 06:39:41','',0,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv-1.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (46,1,'2016-02-20 14:39:42','2016-02-20 06:39:42','','69b7d63agw1ewzw2555ggg20c8096abv','','inherit','open','closed','','69b7d63agw1ewzw2555ggg20c8096abv','','','2016-03-06 17:43:29','2016-03-06 09:43:29','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (47,1,'2016-02-20 14:39:44','2016-02-20 06:39:44','','69b7d63agw1ewzw2h0tqig20c8096kjq','','inherit','open','closed','','69b7d63agw1ewzw2h0tqig20c8096kjq','','','2016-03-06 17:42:22','2016-03-06 09:42:22','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (48,1,'2016-02-20 14:39:45','2016-02-20 06:39:45','','69b7d63agw1ewzw2i4783g20c8096q6z','','inherit','open','closed','','69b7d63agw1ewzw2i4783g20c8096q6z','','','2016-03-06 17:45:17','2016-03-06 09:45:17','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (49,1,'2016-02-20 14:39:46','2016-02-20 06:39:46','','69b7d63agw1ewzw2kh819g20c80964qp','','inherit','open','closed','','69b7d63agw1ewzw2kh819g20c80964qp','','','2016-03-06 17:43:09','2016-03-06 09:43:09','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (50,1,'2016-02-20 14:39:50','2016-02-20 06:39:50','','69b7d63agw1ewzw2lkkw2g20c8096n94','','inherit','open','closed','','69b7d63agw1ewzw2lkkw2g20c8096n94','','','2016-03-06 17:44:01','2016-03-06 09:44:01','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (51,1,'2016-02-20 14:39:50','2016-02-20 06:39:50','','69b7d63agw1ewzw2o0idng20c80964qp','','inherit','open','closed','','69b7d63agw1ewzw2o0idng20c80964qp','','','2016-03-06 17:44:22','2016-03-06 09:44:22','',243,'http://115.159.76.183/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (52,1,'2016-02-20 14:39:51','2016-02-20 06:39:51','','7148d7bfjw1dz3vdz0dnxj-1','','inherit','open','closed','','7148d7bfjw1dz3vdz0dnxj-1','','','2016-02-20 14:41:58','2016-02-20 06:41:58','',1,'http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (53,1,'2016-02-20 14:39:52','2016-02-20 06:39:52','','7148d7bfjw1dz3vdz0dnxj-2','','inherit','open','closed','','7148d7bfjw1dz3vdz0dnxj-2','','','2016-02-20 14:39:52','2016-02-20 06:39:52','',0,'http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-2.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (54,1,'2016-02-20 14:39:53','2016-02-20 06:39:53','','7148d7bfjw1dz3vdz0dnxj','','inherit','open','closed','','7148d7bfjw1dz3vdz0dnxj','','','2016-02-20 14:39:53','2016-02-20 06:39:53','',0,'http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (55,1,'2016-02-20 14:39:54','2016-02-20 06:39:54','','add-1','','inherit','open','closed','','add-1','','','2016-03-02 19:22:53','2016-03-02 11:22:53','',165,'http://115.159.76.183/wp-content/uploads/2016/02/add-1.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (56,1,'2016-02-20 14:39:54','2016-02-20 06:39:54','','add','','inherit','open','closed','','add','','','2016-02-20 14:39:54','2016-02-20 06:39:54','',0,'http://115.159.76.183/wp-content/uploads/2016/02/add.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (57,1,'2016-02-20 14:39:55','2016-02-20 06:39:55','','alpha','','inherit','open','closed','','alpha','','','2016-03-01 19:49:15','2016-03-01 11:49:15','',165,'http://115.159.76.183/wp-content/uploads/2016/02/alpha.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (58,1,'2016-02-20 14:39:57','2016-02-20 06:39:57','','b50ea691gw1exixlntaq4g20b408c7wn','','inherit','open','closed','','b50ea691gw1exixlntaq4g20b408c7wn','','','2016-03-04 20:34:49','2016-03-04 12:34:49','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (59,1,'2016-02-20 14:39:58','2016-02-20 06:39:58','','b50ea691gw1exixlpon6rg20m80go7v6','','inherit','open','closed','','b50ea691gw1exixlpon6rg20m80go7v6','','','2016-03-06 18:02:00','2016-03-06 10:02:00','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (60,1,'2016-02-20 14:40:00','2016-02-20 06:40:00','','b50ea691gw1exixlqf3wug20m80gojyf','','inherit','open','closed','','b50ea691gw1exixlqf3wug20m80gojyf','','','2016-03-06 18:02:23','2016-03-06 10:02:23','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (61,1,'2016-02-20 14:40:01','2016-02-20 06:40:01','','b50ea691gw1exixlrv9csg20m80gob0d','','inherit','open','closed','','b50ea691gw1exixlrv9csg20m80gob0d','','','2016-03-06 18:02:50','2016-03-06 10:02:50','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (62,1,'2016-02-20 14:40:02','2016-02-20 06:40:02','','b50ea691gw1exixltat5ug20m80godo3-1','','inherit','open','closed','','b50ea691gw1exixltat5ug20m80godo3-1','','','2016-03-06 18:03:13','2016-03-06 10:03:13','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (63,1,'2016-02-20 14:40:03','2016-02-20 06:40:03','','b50ea691gw1exixltat5ug20m80godo3','','inherit','open','closed','','b50ea691gw1exixltat5ug20m80godo3','','','2016-02-20 14:40:03','2016-02-20 06:40:03','',0,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (64,1,'2016-02-20 14:40:04','2016-02-20 06:40:04','','b50ea691gw1exixlveoovg20m80gohdt','','inherit','open','closed','','b50ea691gw1exixlveoovg20m80gohdt','','','2016-03-06 18:03:31','2016-03-06 10:03:31','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (65,1,'2016-02-20 14:40:05','2016-02-20 06:40:05','','b50ea691gw1exixlwuq38g20m80go4ng','','inherit','open','closed','','b50ea691gw1exixlwuq38g20m80go4ng','','','2016-03-06 18:03:49','2016-03-06 10:03:49','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (66,1,'2016-02-20 14:40:06','2016-02-20 06:40:06','','b50ea691gw1exixlxpi3cg20m80goaj5','','inherit','open','closed','','b50ea691gw1exixlxpi3cg20m80goaj5','','','2016-03-06 18:04:06','2016-03-06 10:04:06','',225,'http://115.159.76.183/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (67,1,'2016-02-20 14:40:07','2016-02-20 06:40:07','','create-rendertexture','','inherit','open','closed','','create-rendertexture','','','2016-03-02 20:04:52','2016-03-02 12:04:52','',186,'http://115.159.76.183/wp-content/uploads/2016/02/create-rendertexture.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (68,1,'2016-02-20 14:40:08','2016-02-20 06:40:08','','dissolve','','inherit','open','closed','','dissolve','','','2016-03-02 19:20:36','2016-03-02 11:20:36','',165,'http://115.159.76.183/wp-content/uploads/2016/02/dissolve.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (69,1,'2016-02-20 14:40:09','2016-02-20 06:40:09','','iconSinaWeibo100x100-2x','','inherit','open','closed','','iconsinaweibo100x100-2x','','','2016-02-20 14:40:09','2016-02-20 06:40:09','',0,'http://115.159.76.183/wp-content/uploads/2016/02/iconSinaWeibo100x100-2x.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (70,1,'2016-02-20 14:40:09','2016-02-20 06:40:09','','iconWechat-2x-1','','inherit','open','closed','','iconwechat-2x-1','','','2016-02-20 14:40:09','2016-02-20 06:40:09','',0,'http://115.159.76.183/wp-content/uploads/2016/02/iconWechat-2x-1.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (71,1,'2016-02-20 14:40:09','2016-02-20 06:40:09','','iconWechat-2x','','inherit','open','closed','','iconwechat-2x','','','2016-02-20 14:40:09','2016-02-20 06:40:09','',0,'http://115.159.76.183/wp-content/uploads/2016/02/iconWechat-2x.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (72,1,'2016-02-20 14:40:10','2016-02-20 06:40:10','','lenna','','inherit','open','closed','','lenna','','','2016-02-20 14:40:10','2016-02-20 06:40:10','',0,'http://115.159.76.183/wp-content/uploads/2016/02/lenna.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (73,1,'2016-02-20 14:40:11','2016-02-20 06:40:11','','lenna_full','','inherit','open','closed','','lenna_full','','','2016-02-20 14:40:11','2016-02-20 06:40:11','',0,'http://115.159.76.183/wp-content/uploads/2016/02/lenna_full.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (74,1,'2016-02-20 14:40:12','2016-02-20 06:40:12','','multiply','','inherit','open','closed','','multiply','','','2016-03-02 19:25:20','2016-03-02 11:25:20','',165,'http://115.159.76.183/wp-content/uploads/2016/02/multiply.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (75,1,'2016-02-20 14:40:12','2016-02-20 06:40:12','','normal-alpha','','inherit','open','closed','','normal-alpha','','','2016-03-01 19:48:48','2016-03-01 11:48:48','',165,'http://115.159.76.183/wp-content/uploads/2016/02/normal-alpha.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (76,1,'2016-02-20 14:40:12','2016-02-20 06:40:12','','Normal-Copy-1','','inherit','open','closed','','normal-copy-1','','','2016-02-20 14:40:12','2016-02-20 06:40:12','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Normal-Copy-1.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (77,1,'2016-02-20 14:40:13','2016-02-20 06:40:13','','Normal-Copy-2','','inherit','open','closed','','normal-copy-2','','','2016-02-20 14:40:13','2016-02-20 06:40:13','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Normal-Copy-2.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (78,1,'2016-02-20 14:40:14','2016-02-20 06:40:14','','Normal-Copy','','inherit','open','closed','','normal-copy','','','2016-02-20 14:40:14','2016-02-20 06:40:14','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Normal-Copy.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (79,1,'2016-02-20 14:40:14','2016-02-20 06:40:14','','opaque','','inherit','open','closed','','opaque','','','2016-03-01 19:44:17','2016-03-01 11:44:17','',165,'http://115.159.76.183/wp-content/uploads/2016/02/opaque.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (80,1,'2016-02-20 14:40:15','2016-02-20 06:40:15','','PipelineBlend','','inherit','open','closed','','pipelineblend','','','2016-03-02 22:43:57','2016-03-02 14:43:57','',201,'http://115.159.76.183/wp-content/uploads/2016/02/PipelineBlend.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (81,1,'2016-02-20 14:40:15','2016-02-20 06:40:15','','rgb-color-space-visualized-as-a-cube-msdn','','inherit','open','closed','','rgb-color-space-visualized-as-a-cube-msdn','','','2016-03-02 19:23:28','2016-03-02 11:23:28','',165,'http://115.159.76.183/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (82,1,'2016-02-20 14:40:16','2016-02-20 06:40:16','','sub','','inherit','open','closed','','sub','','','2016-03-02 19:24:04','2016-03-02 11:24:04','',165,'http://115.159.76.183/wp-content/uploads/2016/02/sub.gif',0,'attachment','image/gif',0);
INSERT INTO `wp_posts` VALUES (83,1,'2016-02-20 14:40:16','2016-02-20 06:40:16','','weibo-logo','','inherit','open','closed','','weibo-logo','','','2016-02-20 14:40:16','2016-02-20 06:40:16','',0,'http://115.159.76.183/wp-content/uploads/2016/02/weibo-logo.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (84,1,'2016-02-20 14:40:16','2016-02-20 06:40:16','','ab-menu2','','inherit','open','closed','','ab-menu2','','','2016-03-06 18:32:11','2016-03-06 10:32:11','',258,'http://115.159.76.183/wp-content/uploads/2016/02/ab-menu2.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (85,1,'2016-02-20 14:40:17','2016-02-20 06:40:17','','ab-variant-menu2','','inherit','open','closed','','ab-variant-menu2','','','2016-03-06 18:34:34','2016-03-06 10:34:34','',258,'http://115.159.76.183/wp-content/uploads/2016/02/ab-variant-menu2.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (86,1,'2016-02-20 14:40:18','2016-02-20 06:40:18','','assetbundlename','','inherit','open','closed','','assetbundlename','','','2016-03-06 18:31:24','2016-03-06 10:31:24','',258,'http://115.159.76.183/wp-content/uploads/2016/02/assetbundlename.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (87,1,'2016-02-20 14:40:18','2016-02-20 06:40:18','','creating_a_new_ab_name','','inherit','open','closed','','creating_a_new_ab_name','','','2016-03-06 18:32:39','2016-03-06 10:32:39','',258,'http://115.159.76.183/wp-content/uploads/2016/02/creating_a_new_ab_name.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (88,1,'2016-02-20 14:40:19','2016-02-20 06:40:19','','dependencies2','','inherit','open','closed','','dependencies2','','','2016-03-06 18:10:14','2016-03-06 10:10:14','',253,'http://115.159.76.183/wp-content/uploads/2016/02/dependencies2.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (89,1,'2016-02-20 14:40:20','2016-02-20 06:40:20','','matching_variant_structure','','inherit','open','closed','','matching_variant_structure','','','2016-03-06 18:33:43','2016-03-06 10:33:43','',258,'http://115.159.76.183/wp-content/uploads/2016/02/matching_variant_structure.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (90,1,'2016-02-20 14:40:21','2016-02-20 06:40:21','','meshmodelwmaterial','','inherit','open','closed','','meshmodelwmaterial','','','2016-03-06 18:09:50','2016-03-06 10:09:50','',253,'http://115.159.76.183/wp-content/uploads/2016/02/meshmodelwmaterial.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (91,1,'2016-02-20 14:40:21','2016-02-20 06:40:21','','Screen-Shot-2015-11-08-at-4-34-05-PM','','inherit','open','closed','','screen-shot-2015-11-08-at-4-34-05-pm','','','2016-03-06 18:37:09','2016-03-06 10:37:09','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (92,1,'2016-02-20 14:40:23','2016-02-20 06:40:23','','Screen-Shot-2015-11-08-at-4-52-50-PM','','inherit','open','closed','','screen-shot-2015-11-08-at-4-52-50-pm','','','2016-03-06 18:37:38','2016-03-06 10:37:38','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (93,1,'2016-02-20 14:40:24','2016-02-20 06:40:24','','Screen-Shot-2015-11-08-at-5-07-17-PM','','inherit','open','closed','','screen-shot-2015-11-08-at-5-07-17-pm','','','2016-03-06 18:38:01','2016-03-06 10:38:01','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (94,1,'2016-02-20 14:40:25','2016-02-20 06:40:25','','Screen-Shot-2015-11-08-at-5-38-27-PM','','inherit','open','closed','','screen-shot-2015-11-08-at-5-38-27-pm','','','2016-03-06 18:38:20','2016-03-06 10:38:20','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (95,1,'2016-02-20 14:40:25','2016-02-20 06:40:25','','Screen-Shot-2015-11-08-at-5-41-16-PM','','inherit','open','closed','','screen-shot-2015-11-08-at-5-41-16-pm','','','2016-03-06 18:38:37','2016-03-06 10:38:37','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (96,1,'2016-02-20 14:40:26','2016-02-20 06:40:26','','Screen-Shot-2015-11-08-at-6-15-02-PM','','inherit','open','closed','','screen-shot-2015-11-08-at-6-15-02-pm','','','2016-03-06 18:38:56','2016-03-06 10:38:56','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (97,1,'2016-02-20 14:40:27','2016-02-20 06:40:27','','Screen-Shot-2015-11-09-at-11-12-15-AM','','inherit','open','closed','','screen-shot-2015-11-09-at-11-12-15-am','','','2016-03-06 18:39:13','2016-03-06 10:39:13','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (98,1,'2016-02-20 14:40:28','2016-02-20 06:40:28','','Screen-Shot-2015-11-09-at-11-13-14-AM','','inherit','open','closed','','screen-shot-2015-11-09-at-11-13-14-am','','','2016-03-06 18:39:28','2016-03-06 10:39:28','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (99,1,'2016-02-20 14:40:29','2016-02-20 06:40:29','','Screen-Shot-2015-11-09-at-11-28-42-AM','','inherit','open','closed','','screen-shot-2015-11-09-at-11-28-42-am','','','2016-03-06 18:39:51','2016-03-06 10:39:51','',262,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (100,1,'2016-02-20 14:40:30','2016-02-20 06:40:30','','Screen-Shot-2015-11-19-at-8-09-23-PM','','inherit','open','closed','','screen-shot-2015-11-19-at-8-09-23-pm','','','2016-03-06 18:51:11','2016-03-06 10:51:11','',272,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (101,1,'2016-02-20 14:40:31','2016-02-20 06:40:31','','Screen-Shot-2015-11-19-at-8-12-04-PM','','inherit','open','closed','','screen-shot-2015-11-19-at-8-12-04-pm','','','2016-03-06 18:51:32','2016-03-06 10:51:32','',272,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (102,1,'2016-02-20 14:40:31','2016-02-20 06:40:31','','Screen-Shot-2015-11-19-at-8-15-54-PM-1','','inherit','open','closed','','screen-shot-2015-11-19-at-8-15-54-pm-1','','','2016-02-20 14:40:31','2016-02-20 06:40:31','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-15-54-PM-1.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (103,1,'2016-02-20 14:40:32','2016-02-20 06:40:32','','Screen-Shot-2015-11-19-at-8-15-54-PM','','inherit','open','closed','','screen-shot-2015-11-19-at-8-15-54-pm','','','2016-02-20 14:40:32','2016-02-20 06:40:32','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-15-54-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (104,1,'2016-02-20 14:40:33','2016-02-20 06:40:33','','Screen-Shot-2015-11-19-at-8-19-46-PM','','inherit','open','closed','','screen-shot-2015-11-19-at-8-19-46-pm','','','2016-03-06 18:51:48','2016-03-06 10:51:48','',272,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (105,1,'2016-02-20 14:40:35','2016-02-20 06:40:35','','Screen-Shot-2015-11-19-at-8-23-07-PM','','inherit','open','closed','','screen-shot-2015-11-19-at-8-23-07-pm','','','2016-03-06 18:52:06','2016-03-06 10:52:06','',272,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (106,1,'2016-02-20 14:40:36','2016-02-20 06:40:36','','simple_scene','','inherit','open','closed','','simple_scene','','','2016-03-06 18:31:01','2016-03-06 10:31:01','',258,'http://115.159.76.183/wp-content/uploads/2016/02/simple_scene.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (107,1,'2016-02-20 14:40:37','2016-02-20 06:40:37','','tank_assigned_to_ab','','inherit','open','closed','','tank_assigned_to_ab','','','2016-03-06 18:33:15','2016-03-06 10:33:15','',258,'http://115.159.76.183/wp-content/uploads/2016/02/tank_assigned_to_ab.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (108,1,'2016-02-20 14:40:38','2016-02-20 06:40:38','','two_rock_columns','','inherit','open','closed','','two_rock_columns','','','2016-03-06 18:10:30','2016-03-06 10:10:30','',253,'http://115.159.76.183/wp-content/uploads/2016/02/two_rock_columns.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (109,1,'2016-02-20 14:40:39','2016-02-20 06:40:39','','variant_name_hd','','inherit','open','closed','','variant_name_hd','','','2016-03-06 18:33:58','2016-03-06 10:33:58','',258,'http://115.159.76.183/wp-content/uploads/2016/02/variant_name_hd.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (110,1,'2016-02-20 14:40:40','2016-02-20 06:40:40','','variant_name_sd','','inherit','open','closed','','variant_name_sd','','','2016-03-06 18:34:14','2016-03-06 10:34:14','',258,'http://115.159.76.183/wp-content/uploads/2016/02/variant_name_sd.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (111,1,'2016-02-20 14:40:40','2016-02-20 06:40:40','','7148d7bfgw1ez9b47p8s4j20zk0qo106','','inherit','open','closed','','7148d7bfgw1ez9b47p8s4j20zk0qo106','','','2016-03-06 21:43:08','2016-03-06 13:43:08','',284,'http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (112,1,'2016-02-20 14:40:41','2016-02-20 06:40:41','','7148d7bfgw1ez9b487awej20qo0zkwkh','','inherit','open','closed','','7148d7bfgw1ez9b487awej20qo0zkwkh','','','2016-03-06 21:42:54','2016-03-06 13:42:54','',284,'http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (113,1,'2016-02-20 14:40:42','2016-02-20 06:40:42','','7148d7bfgw1ez9b48vr2jj20qo0zkdod','','inherit','open','closed','','7148d7bfgw1ez9b48vr2jj20qo0zkdod','','','2016-03-06 21:43:22','2016-03-06 13:43:22','',284,'http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg',0,'attachment','image/jpeg',0);
INSERT INTO `wp_posts` VALUES (114,1,'2016-02-20 14:40:42','2016-02-20 06:40:42','','Screen-Shot-2016-01-01-at-10-45-18-PM','','inherit','open','closed','','screen-shot-2016-01-01-at-10-45-18-pm','','','2016-03-06 21:35:09','2016-03-06 13:35:09','',279,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (115,1,'2016-02-20 14:40:43','2016-02-20 06:40:43','','Screen-Shot-2016-01-01-at-11-09-05-PM','','inherit','open','closed','','screen-shot-2016-01-01-at-11-09-05-pm','','','2016-03-06 21:35:38','2016-03-06 13:35:38','',279,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (116,1,'2016-02-20 14:40:43','2016-02-20 06:40:43','','Screen-Shot-2016-01-01-at-11-10-50-PM','','inherit','open','closed','','screen-shot-2016-01-01-at-11-10-50-pm','','','2016-03-06 21:35:56','2016-03-06 13:35:56','',279,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (117,1,'2016-02-20 14:40:44','2016-02-20 06:40:44','','Screen-Shot-2016-01-01-at-11-15-20-PM','','inherit','open','closed','','screen-shot-2016-01-01-at-11-15-20-pm','','','2016-03-06 21:36:19','2016-03-06 13:36:19','',279,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (118,1,'2016-02-20 14:40:45','2016-02-20 06:40:45','','Screen-Shot-2016-01-01-at-11-21-04-PM','','inherit','open','closed','','screen-shot-2016-01-01-at-11-21-04-pm','','','2016-03-06 21:37:02','2016-03-06 13:37:02','',279,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (119,1,'2016-02-20 14:40:45','2016-02-20 06:40:45','','Screen-Shot-2016-01-01-at-11-35-10-PM','','inherit','open','closed','','screen-shot-2016-01-01-at-11-35-10-pm','','','2016-03-06 21:37:22','2016-03-06 13:37:22','',279,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (120,1,'2016-02-20 14:40:46','2016-02-20 06:40:46','','Screen-Shot-2016-01-29-at-3-16-29-PM-1','','inherit','open','closed','','screen-shot-2016-01-29-at-3-16-29-pm-1','','','2016-03-06 21:55:57','2016-03-06 13:55:57','',294,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (121,1,'2016-02-20 14:40:46','2016-02-20 06:40:46','','Screen-Shot-2016-01-29-at-3-16-29-PM','','inherit','open','closed','','screen-shot-2016-01-29-at-3-16-29-pm','','','2016-02-20 14:40:46','2016-02-20 06:40:46','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (122,1,'2016-02-20 14:40:47','2016-02-20 06:40:47','','Screen-Shot-2016-01-29-at-3-27-46-PM','','inherit','open','closed','','screen-shot-2016-01-29-at-3-27-46-pm','','','2016-03-06 21:58:40','2016-03-06 13:58:40','',298,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (123,1,'2016-02-20 14:40:47','2016-02-20 06:40:47','','Screen-Shot-2016-02-19-at-2-00-11-PM','','inherit','open','closed','','screen-shot-2016-02-19-at-2-00-11-pm','','','2016-02-20 14:40:47','2016-02-20 06:40:47','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-19-at-2-00-11-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (124,1,'2016-02-20 14:40:48','2016-02-20 06:40:48','','Screen-Shot-2016-02-19-at-2-00-22-PM','','inherit','open','closed','','screen-shot-2016-02-19-at-2-00-22-pm','','','2016-02-20 14:40:48','2016-02-20 06:40:48','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-19-at-2-00-22-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (125,1,'2016-02-20 14:40:48','2016-02-20 06:40:48','','UI_LayoutElementInspector','','inherit','open','closed','','ui_layoutelementinspector','','','2016-03-06 22:20:00','2016-03-06 14:20:00','',311,'http://115.159.76.183/wp-content/uploads/2016/02/UI_LayoutElementInspector.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (126,1,'2016-02-20 14:42:19','2016-02-20 06:42:19','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n---\r\n\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：[破土君](http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place)\r\n\r\n作吧！','关于作者','','inherit','closed','closed','','1-revision-v1','','','2016-02-20 14:42:19','2016-02-20 06:42:19','',1,'http://115.159.76.183/?p=126',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (128,1,'2016-02-20 14:42:55','2016-02-20 06:42:55','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：[破土君](http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place)\r\n\r\n作吧！','关于作者','','inherit','closed','closed','','1-revision-v1','','','2016-02-20 14:42:55','2016-02-20 06:42:55','',1,'http://115.159.76.183/?p=128',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (127,1,'2016-02-20 14:42:34','2016-02-20 06:42:34','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n&nbsp;\r\n\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：[破土君](http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place)\r\n\r\n作吧！','关于作者','','inherit','closed','closed','','1-revision-v1','','','2016-02-20 14:42:34','2016-02-20 06:42:34','',1,'http://115.159.76.183/?p=127',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (129,1,'2016-02-20 14:44:42','2016-02-20 06:44:42','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','inherit','closed','closed','','1-revision-v1','','','2016-02-20 14:44:42','2016-02-20 06:44:42','',1,'http://115.159.76.183/?p=129',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (132,1,'2016-02-20 19:22:17','2016-02-20 11:22:17','休息休息的发生大幅度','Unity UGUI 本地坐标系','','draft','open','open','','unity-ugui-%e6%9c%ac%e5%9c%b0%e5%9d%90%e6%a0%87%e7%b3%bb','','','2016-03-06 23:24:39','2016-03-06 15:24:39','休息休息的发生大幅度',0,'http://115.159.76.183/?p=132',0,'post','',0);
INSERT INTO `wp_posts` VALUES (133,1,'2016-02-20 15:31:47','2016-02-20 07:31:47','','Unity UGUI 本地坐标系','','inherit','closed','closed','','132-revision-v1','','','2016-02-20 15:31:47','2016-02-20 07:31:47','',132,'http://115.159.76.183/?p=133',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (135,1,'2016-02-20 19:20:20','2016-02-20 11:20:20','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','publish','closed','closed','','%e5%85%b3%e4%ba%8e%e4%bd%9c%e8%80%85','','','2016-02-20 19:20:20','2016-02-20 11:20:20','',0,'http://115.159.76.183/?page_id=135',0,'page','',0);
INSERT INTO `wp_posts` VALUES (136,1,'2016-02-20 19:20:17','2016-02-20 11:20:17','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','inherit','closed','closed','','135-revision-v1','','','2016-02-20 19:20:17','2016-02-20 11:20:17','',135,'http://115.159.76.183/?p=136',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (138,1,'2016-02-20 19:22:17','2016-02-20 11:22:17','休息休息的发生大幅度','Unity UGUI 本地坐标系','','inherit','closed','closed','','132-revision-v1','','','2016-02-20 19:22:17','2016-02-20 11:22:17','',132,'http://115.159.76.183/?p=138',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (139,1,'2016-02-20 19:39:58','2016-02-20 11:39:58','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\n\n破土君\n\n<blockquote> Keep looking. Don\'t settle!</blockquote>\n\n90后的我，乐观开朗，做自己喜欢的事\n\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\n\n喜欢70、80年代的老歌，有一个怀旧的心\n\n朋友们都说我很靠谱\n\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\n\n在那里，我收获了一枚美眉、一群朋友\n\n还有那一份牵挂一生的友情\n\n后来，我来到了北京\n\n成为了码农\n\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\n\n读点闲书，看个电影\n\n偶尔思考一下宇宙是什么\n\n咖啡是不喜欢喝的\n\n对明信片有种特别的爱好，那里有对远方的憧憬\n\n学点设计，写点代码\n\n自己的理想工作状态是成为一个旅行式的自由职业者\n\n虽然很困难，但是我在不断努力中\n\n人，就该有点梦想不是？\n\n2014年5月13日，我做出了一个让我自己感动的决定\n\n给自己一点时间，给自己一个机会，做自己喜欢的事情\n\n现在的我，身在上海\n\n一群小伙伴，还有一只可爱的猫\n\n一起努力，书写着自己喜欢的故事\n\n这就是我\n\n期待和你相识，分享你的故事\n\n我们的故事未完待续...\n\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','trash','closed','closed','','%e5%85%b3%e4%ba%8e','','','2016-03-13 19:59:25','2016-03-13 11:59:25','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>',0,'http://115.159.76.183/?page_id=139',0,'page','',0);
INSERT INTO `wp_posts` VALUES (140,1,'2016-02-20 19:39:58','2016-02-20 11:39:58','关于关于','关于','','inherit','closed','closed','','139-revision-v1','','','2016-02-20 19:39:58','2016-02-20 11:39:58','',139,'http://115.159.76.183/?p=140',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (142,1,'2016-02-20 19:44:30','2016-02-20 11:44:30','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','inherit','closed','closed','','139-revision-v1','','','2016-02-20 19:44:30','2016-02-20 11:44:30','',139,'http://115.159.76.183/?p=142',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (143,1,'2016-02-21 13:08:42','2016-02-21 05:08:42','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。<!--more--></p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。需要注意的是 DrivenRectTransformTracker 是一个结构体，而不是一个类。</p>\r\n<p class=\"p1\">在 LayoutGroup 组件中就使用了 DrivenRectTransformTracker ，感兴趣的读者可以自行阅读它相关的源码 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src/0155c39e05ca5d7dcc97d9974256ef83bc122586/UnityEngine.UI/UI/Core/Layout/LayoutGroup.cs?at=5.2&amp;fileviewer=file-view-default\" target=\"_blank\">Unity UI LayoutGroup 源码</a>。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n\r\n\r\n<hr />\r\n<p class=\"p1\">参考资料：</p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','publish','open','open','','unity-ugui-drivenrecttransformtracker-%e6%ba%90%e7%a0%81%e8%a7%a3%e6%9e%90','','','2016-02-21 13:30:03','2016-02-21 05:30:03','',0,'http://115.159.76.183/?p=143',0,'post','',0);
INSERT INTO `wp_posts` VALUES (145,1,'2016-02-21 12:51:03','2016-02-21 04:51:03','','Screen Shot 2016-02-21 at 12.48.03 PM','','inherit','open','closed','','screen-shot-2016-02-21-at-12-48-03-pm','','','2016-02-21 12:51:03','2016-02-21 04:51:03','',143,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (146,1,'2016-02-21 13:04:41','2016-02-21 05:04:41','','Screen Shot 2016-02-21 at 1.03.47 PM','','inherit','open','closed','','screen-shot-2016-02-21-at-1-03-47-pm','','','2016-02-21 13:04:41','2016-02-21 05:04:41','',143,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (147,1,'2016-02-21 13:08:42','2016-02-21 05:08:42','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。</p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n<p class=\"p1\"></p>\r\n<p class=\"p6\"><!--more--></p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:08:42','2016-02-21 05:08:42','',143,'http://115.159.76.183/?p=147',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (148,1,'2016-02-21 13:09:07','2016-02-21 05:09:07','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。</p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n<p class=\"p6\"><!--more--></p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:09:07','2016-02-21 05:09:07','',143,'http://115.159.76.183/?p=148',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (149,1,'2016-02-21 13:29:33','2016-02-21 05:29:33','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。<!--more--></p>\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\n\n<blockquote>\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\n</blockquote>\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\n<p class=\"p1\">代码很简单，不再赘述。需要注意的是 DrivenRectTransformTracker 是一个结构体，而不是一个类。</p>\n<p class=\"p1\">在 LayoutGroup 组件中就使用了 DrivenRectTransformTracker ，感兴趣的读者可以自行阅读它相关的源码 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src/0155c39e05ca5d7dcc97d9974256ef83bc122586/UnityEngine.UI/UI/Core/Layout/LayoutGroup.cs?at=5.2&amp;fileviewer=file-view-default\" target=\"_blank\">Unity UI LayoutGroup 源码</a>。</p>\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\n\n\n<hr />\n<p class=\"p1\">参考资料：</p>\n\n<blockquote>\n<ul>\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\n</ul>\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-autosave-v1','','','2016-02-21 13:29:33','2016-02-21 05:29:33','',143,'http://115.159.76.183/?p=149',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (150,1,'2016-02-21 13:10:47','2016-02-21 05:10:47','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。</p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n<p class=\"p1\"></p>\r\n<p class=\"p6\"><!--more--></p>\r\n<p class=\"p6\">相关资料：</p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:10:47','2016-02-21 05:10:47','',143,'http://115.159.76.183/?p=150',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (151,1,'2016-02-21 13:15:01','2016-02-21 05:15:01','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。<!--more--></p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n<p class=\"p1\"></p>\r\n<p class=\"p1\">参考资料：</p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:15:01','2016-02-21 05:15:01','',143,'http://115.159.76.183/?p=151',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (152,1,'2016-02-21 13:16:14','2016-02-21 05:16:14','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。<!--more--></p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n\r\n\r\n<hr />\r\n<p class=\"p1\"></p>\r\n<p class=\"p1\">参考资料：</p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:16:14','2016-02-21 05:16:14','',143,'http://115.159.76.183/?p=152',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (153,1,'2016-02-21 13:23:31','2016-02-21 05:23:31','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。<!--more--></p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。</p>\r\n<p class=\"p1\">在 LayoutGroup 组件中就使用了 DrivenRectTransformTracker ，感兴趣的读者可以自行阅读它相关的源码 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src/0155c39e05ca5d7dcc97d9974256ef83bc122586/UnityEngine.UI/UI/Core/Layout/LayoutGroup.cs?at=5.2&amp;fileviewer=file-view-default\" target=\"_blank\">Unity UI LayoutGroup 源码</a>。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n\r\n\r\n<hr />\r\n<p class=\"p1\">参考资料：</p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:23:31','2016-02-21 05:23:31','',143,'http://115.159.76.183/?p=153',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (154,1,'2016-02-21 13:30:03','2016-02-21 05:30:03','<p class=\"p1\"><strong>DrivenRectTransformTracker</strong></p>\r\n<p class=\"p1\"><b></b>一个组件可以被设计为用来驱动一个 RectTransform 组件。如果一个组件驱动了 RectTransform，那么我们就需要知道它驱动了哪些 RectTransform 组件。 而DrivenRectTransformTracker 这个结构体就是用来指定这个组件驱动了哪些 RectTransform 组件的。</p>\r\n<p class=\"p6\">一个组件驱动一个 RectTransform 意味着这个被驱动的 RectTransform 的某些值是被这个组件控制的。这些 RectTransform 的值不再像之前一样可以在 Inspector 中被编辑修改了（它们被显示为已禁用）。它们也不会随着场景的保存而被保存，以防止意外的场景文件更改。<!--more--></p>\r\n<p class=\"p6\">如下图所示，如果你使用了 GridLayoutGroup 组件，那么它的所有的子对象的 RectTransform 组件都是被驱动的，你也可以看到它的 Anchor 以及 width 和 height 等都是无法编辑的了。</p>\r\n<p class=\"p6\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM.png\" rel=\"attachment wp-att-145\"><img class=\"alignnone size-medium wp-image-145\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-12.48.03-PM-300x98.png\" alt=\"Screen Shot 2016-02-21 at 12.48.03 PM\" width=\"300\" height=\"98\" /></a></p>\r\n<p class=\"p6\">当一个组件想改变它所驱动的 RectTransform 的某些值时，它必须先调用 Clear 方法，然后在调用 Add 方法去把所有的它想驱动的 RectTransform 组件添加进来。在 OnDisable 回调里面，也需要调用这个 Clear 方法。下面是方法原型：</p>\r\n\r\n<blockquote>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Add</b>(<a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/Object.html\"><span class=\"s2\">Object </span></a><b>driver</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/RectTransform.html\"><span class=\"s2\">RectTransform </span></a><b>rectTransform</b>, <a href=\"file:///Users/lijiahan/Library/Application%20Support/Dash/DocSets/Unity_3D/Unity%203D.docset/Contents/Resources/Documents/docs/ScriptReference/DrivenTransformProperties.html\"><span class=\"s2\">DrivenTransformProperties </span></a><b>drivenProperties</b>);</span></p>\r\n<p class=\"p1\"><span class=\"s1\">public void <b>Clear</b>();</span></p>\r\n</blockquote>\r\n<p class=\"p1\">虽然我们没有 Unity 的源码，但是我们可以从UnityEngine.DLL 这里面看到一些代码的实现细节，下面我们来看看它的源码是怎么样的。</p>\r\n<p class=\"p1\"><a href=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM.png\" rel=\"attachment wp-att-146\"><img class=\"alignnone size-medium wp-image-146\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-21-at-1.03.47-PM-300x166.png\" alt=\"Screen Shot 2016-02-21 at 1.03.47 PM\" width=\"300\" height=\"166\" /></a></p>\r\n<p class=\"p1\">代码很简单，不再赘述。需要注意的是 DrivenRectTransformTracker 是一个结构体，而不是一个类。</p>\r\n<p class=\"p1\">在 LayoutGroup 组件中就使用了 DrivenRectTransformTracker ，感兴趣的读者可以自行阅读它相关的源码 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src/0155c39e05ca5d7dcc97d9974256ef83bc122586/UnityEngine.UI/UI/Core/Layout/LayoutGroup.cs?at=5.2&amp;fileviewer=file-view-default\" target=\"_blank\">Unity UI LayoutGroup 源码</a>。</p>\r\n<p class=\"p1\">如果你不知道如何查看 UnityEngine.DLL 中的源码，请参看我的另一篇文章。</p>\r\n\r\n\r\n<hr />\r\n<p class=\"p1\">参考资料：</p>\r\n\r\n<blockquote>\r\n<ul>\r\n	<li class=\"p6\"><a href=\"http://docs.unity3d.com/462/Documentation/ScriptReference/DrivenRectTransformTracker.html\" target=\"_blank\">DrivenRectTransformTracker 官方文档</a></li>\r\n</ul>\r\n</blockquote>','Unity UGUI DrivenRectTransformTracker 源码解析','','inherit','closed','closed','','143-revision-v1','','','2016-02-21 13:30:03','2016-02-21 05:30:03','',143,'http://115.159.76.183/?p=154',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (155,1,'2016-02-22 09:15:02','0000-00-00 00:00:00','http://answers.unity3d.com/questions/524998/testing-for-null-bug-or-feature.html\r\n\r\nhttp://forum.unity3d.com/threads/fun-with-null.148090/\r\n\r\n&nbsp;','unity override null check','','draft','open','open','','','','','2016-02-22 09:15:02','2016-02-22 01:15:02','',0,'http://115.159.76.183/?p=155',0,'post','',0);
INSERT INTO `wp_posts` VALUES (156,1,'2016-02-21 19:46:38','2016-02-21 11:46:38','http://answers.unity3d.com/questions/524998/testing-for-null-bug-or-feature.html\r\n\r\nhttp://forum.unity3d.com/threads/fun-with-null.148090/\r\n\r\n&nbsp;','unity override null check','','inherit','closed','closed','','155-revision-v1','','','2016-02-21 19:46:38','2016-02-21 11:46:38','',155,'http://115.159.76.183/?p=156',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (356,1,'2016-03-08 18:59:34','0000-00-00 00:00:00','http://blog.csdn.net/akof1314/article/details/49077983\n\nText 源码解析\n\n&nbsp;','Unity Text 插入超链接','','draft','open','open','','','','','2016-03-08 18:59:34','2016-03-08 10:59:34','http://blog.csdn.net/akof1314/article/details/49077983\r\n\r\nText 源码解析\r\n\r\n&nbsp;',0,'http://codingcoder.com/?p=356',0,'post','',0);
INSERT INTO `wp_posts` VALUES (158,1,'2016-02-22 10:15:48','2016-02-22 02:15:48','','Screen Shot 2016-02-22 at 10.15.15 AM','','inherit','open','closed','','screen-shot-2016-02-22-at-10-15-15-am','','','2016-02-22 10:15:48','2016-02-22 02:15:48','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-22-at-10.15.15-AM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (159,1,'2016-02-22 10:16:13','2016-02-22 02:16:13','','Screen Shot 2016-02-22 at 10.15.55 AM','','inherit','open','closed','','screen-shot-2016-02-22-at-10-15-55-am','','','2016-02-22 10:16:13','2016-02-22 02:16:13','',0,'http://115.159.76.183/wp-content/uploads/2016/02/Screen-Shot-2016-02-22-at-10.15.55-AM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (165,1,'2015-10-20 21:45:49','2015-10-20 13:45:49','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/alpha.png\" rel=\"attachment wp-att-182\"><img class=\"alignnone size-full wp-image-182\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/alpha.png\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n[latexpage]\r\n\r\n$R = \\alpha F+(1-\\alpha)B $\r\n\r\n其中 R 代表混合后的输出结果（Result），$ \\alpha $ 表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" rel=\"attachment wp-att-68\"><img class=\"alignnone size-full wp-image-68\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" alt=\"dissolve\" width=\"145\" height=\"97\" /></a>\r\n\r\n$ f(B, F)= F $\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n$ f(B, F)= F $\r\n\r\n<hr />\r\n\r\n<h1>加色模式</h1>\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1.gif\" rel=\"attachment wp-att-55\"><img class=\"alignnone size-medium wp-image-55\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1-266x300.gif\" alt=\"add-1\" width=\"266\" height=\"300\" /></a>\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果\r\n\r\n$$\\vec{F}=(r1, g1, b1)$$\r\n\r\n$$ \\vec{B}=(r2, g2, b2)$$\r\n\r\n则\r\n\r\n$$\\vec{F+B} =(r1+r2, g1+g2, b1+b2)$$\r\n\r\n$$\\vec{R} = min(\\vec{F+B}, \\vec{White})$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" rel=\"attachment wp-att-81\"><img class=\"alignnone size-full wp-image-81\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" alt=\"rgb-color-space-visualized-as-a-cube-msdn\" width=\"267\" height=\"220\" /></a>\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n<hr />\r\n\r\n<h1>减色模式</h1>\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/sub.gif\" rel=\"attachment wp-att-82\"><img class=\"alignnone size-medium wp-image-82\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/sub-265x300.gif\" alt=\"sub\" width=\"265\" height=\"300\" /></a>\r\n\r\n$$\\vec{R} = max(\\vec{B-F}, \\vec{Black})$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n<hr />\r\n\r\n<h1>差值模式</h1>\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n<hr />\r\n\r\n<h1>乘法模式（变暗模式）</h1>\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply.gif\" rel=\"attachment wp-att-74\"><img class=\"alignnone size-medium wp-image-74\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply-240x300.gif\" alt=\"multiply\" width=\"240\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 $\\times$ 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n<hr />\r\n\r\n<h1>结语</h1>\r\n在 Photoshop 中的混合模式有27种，此文<a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a>对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书<a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a>的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<blockquote>\r\n<ul>\r\n	<li><a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a></li>\r\n	<li><a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a></li>\r\n	<li><a href=\"https://en.wikipedia.org/wiki/Blend_modes#cite_note-1\">Blend Modes in wikipedia</a></li>\r\n	<li><a href=\"http://elringus.me/blend-modes-in-unity/\">Blend Modes in Unity</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\">ShaderLab: Blending</a></li>\r\n	<li><a href=\"http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html\">The Cg Tutorial</a></li>\r\n</ul>\r\n</blockquote>','混合模式的数学原理','','publish','open','open','','%e6%b7%b7%e5%90%88%e6%a8%a1%e5%bc%8f%e7%9a%84%e6%95%b0%e5%ad%a6%e5%8e%9f%e7%90%86','','\nhttp://elringus.me/blend-modes-in-unity/','2016-03-02 19:50:41','2016-03-02 11:50:41','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n&nbsp;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n$R = \\alpha F+(1-\\alpha)B $\r\n\r\n<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\r\n\r\n其中 R 代表混合后的输出结果（Result），$$ \\alpha $$ 表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n&nbsp;\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n---\r\n\r\n# 加色模式\r\n\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n---\r\n\r\n#减色模式\r\n\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n---\r\n\r\n#差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n---\r\n\r\n#乘法模式（变暗模式）\r\n\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n---\r\n\r\n#结语\r\n\r\n在 Photoshop 中的混合模式有27种，此文[Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书[Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n----\r\n\r\n参考资料：\r\n\r\n&gt; + [Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)\r\n\r\n&gt; + [Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)\r\n\r\n&gt; + [Blend Modes in wikipedia](https://en.wikipedia.org/wiki/Blend_modes#cite_note-1)\r\n\r\n&gt; + [Blend Modes in Unity](http://elringus.me/blend-modes-in-unity/)\r\n\r\n&gt; + [ShaderLab: Blending](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n&gt; + [The Cg Tutorial](http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html)',0,'http://codingcoder.com/?p=165',0,'post','',0);
INSERT INTO `wp_posts` VALUES (161,1,'2016-02-24 23:28:11','0000-00-00 00:00:00','http://qiankanglai.me/project/2015/08/15/LoopScrollRect/','几种 Grid/List view 的实现形式','','draft','open','open','','','','','2016-02-24 23:28:11','2016-02-24 15:28:11','',0,'http://115.159.76.183/?p=161',0,'post','',0);
INSERT INTO `wp_posts` VALUES (162,1,'2016-03-03 09:51:35','0000-00-00 00:00:00','https://msdn.microsoft.com/en-us/library/z5z9kes2.aspx\n\n#hello wold','implicity operator','','draft','open','open','','','','','2016-03-03 09:51:35','2016-03-03 01:51:35','https://msdn.microsoft.com/en-us/library/z5z9kes2.aspx\r\n\r\n#hello wold',0,'http://codingcoder.com/?p=162',0,'post','',0);
INSERT INTO `wp_posts` VALUES (163,1,'2016-02-25 16:43:44','2016-02-25 08:43:44','https://msdn.microsoft.com/en-us/library/z5z9kes2.aspx','implicity operator','','inherit','closed','closed','','162-revision-v1','','','2016-02-25 16:43:44','2016-02-25 08:43:44','',162,'http://codingcoder.com/?p=163',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (166,1,'2016-03-01 19:40:39','2016-03-01 11:40:39','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n---\r\n\r\n# 正常模式\r\n\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/opaque.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n在这里 $B$ 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 $F$ 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n*注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。*\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/alpha.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n$$R = \\alpha F+(1-\\alpha)B $$\r\n\r\n其中 R 代表混合后的输出结果（Result），$ \\alpha $表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n---\r\n\r\n# 溶解模式\r\n\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n*注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。*\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n---\r\n\r\n# 加色模式\r\n\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n---\r\n\r\n#减色模式\r\n\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n---\r\n\r\n#差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n---\r\n\r\n#乘法模式（变暗模式）\r\n\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n---\r\n\r\n#结语\r\n\r\n在 Photoshop 中的混合模式有27种，此文[Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书[Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n----\r\n\r\n参考资料：\r\n\r\n&gt; + [Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)\r\n\r\n&gt; + [Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)\r\n\r\n&gt; + [Blend Modes in wikipedia](https://en.wikipedia.org/wiki/Blend_modes#cite_note-1)\r\n\r\n&gt; + [Blend Modes in Unity](http://elringus.me/blend-modes-in-unity/)\r\n\r\n&gt; + [ShaderLab: Blending](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n&gt; + [The Cg Tutorial](http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html)','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-01 19:40:39','2016-03-01 11:40:39','',165,'http://codingcoder.com/?p=166',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (167,1,'2016-03-01 19:53:35','2016-03-01 11:53:35','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n&nbsp;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n$$R = \\alpha F+(1-\\alpha)B $$\r\n\r\n其中 R 代表混合后的输出结果（Result），$ \\alpha $表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n---\r\n\r\n# 溶解模式\r\n\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n*注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。*\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n---\r\n\r\n# 加色模式\r\n\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n---\r\n\r\n#减色模式\r\n\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n---\r\n\r\n#差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n---\r\n\r\n#乘法模式（变暗模式）\r\n\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n---\r\n\r\n#结语\r\n\r\n在 Photoshop 中的混合模式有27种，此文[Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书[Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n----\r\n\r\n参考资料：\r\n\r\n&gt; + [Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)\r\n\r\n&gt; + [Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)\r\n\r\n&gt; + [Blend Modes in wikipedia](https://en.wikipedia.org/wiki/Blend_modes#cite_note-1)\r\n\r\n&gt; + [Blend Modes in Unity](http://elringus.me/blend-modes-in-unity/)\r\n\r\n&gt; + [ShaderLab: Blending](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n&gt; + [The Cg Tutorial](http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html)','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-01 19:53:35','2016-03-01 11:53:35','',165,'http://codingcoder.com/?p=167',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (168,1,'2016-03-01 20:12:18','2016-03-01 12:12:18','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n&nbsp;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n$$R = \\alpha F+(1-\\alpha)B $$\r\n\r\n其中 R 代表混合后的输出结果（Result），$ \\alpha $表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n&nbsp;\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n---\r\n\r\n# 加色模式\r\n\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n---\r\n\r\n#减色模式\r\n\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n---\r\n\r\n#差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n---\r\n\r\n#乘法模式（变暗模式）\r\n\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n---\r\n\r\n#结语\r\n\r\n在 Photoshop 中的混合模式有27种，此文[Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书[Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n----\r\n\r\n参考资料：\r\n\r\n&gt; + [Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)\r\n\r\n&gt; + [Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)\r\n\r\n&gt; + [Blend Modes in wikipedia](https://en.wikipedia.org/wiki/Blend_modes#cite_note-1)\r\n\r\n&gt; + [Blend Modes in Unity](http://elringus.me/blend-modes-in-unity/)\r\n\r\n&gt; + [ShaderLab: Blending](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n&gt; + [The Cg Tutorial](http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html)','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-01 20:12:18','2016-03-01 12:12:18','',165,'http://codingcoder.com/?p=168',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (169,1,'2016-03-01 21:45:49','2016-03-01 13:45:49','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\n\n阅读本文，可以帮助读者解决以下问题：\n\n<ol>\n    <li>什么是混合模式</li>\n    <li>混合模式的数学原理</li>\n    <li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\n</ol>\n\n<hr />\n\n<h1>正常模式</h1>\n\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\n\n&nbsp;\n\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\n\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\n\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\n\n&nbsp;\n\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\n\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\n\n&nbsp;\n\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\n\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\n\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\n\n$R = \\alpha F+(1-\\alpha)B $\n\n<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\n\n其中 R 代表混合后的输出结果（Result），$$ \\alpha $$ 表示前景图层的不透明度的归一化值，介于0到1之间。\n\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\n\n<hr />\n\n<h1>溶解模式</h1>\n\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\n\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\n\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\n\n&nbsp;\n\n&lt;div style=\"text-align:center;\"&gt;\n\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\n\n&lt;/div&gt;\n\n而在正常模式下的效果是这样的：\n\n&lt;div style=\"text-align:center;\"&gt;\n\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\n\n&lt;/div&gt;\n\n<hr />\n\n<h1>加色模式</h1>\n\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\n\n&lt;div style=\"text-align:center;\"&gt;\n\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\n\n&lt;/div&gt;\n\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\n\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\n\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\n\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\n\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\n\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\n\n&lt;div style=\"text-align:center;\"&gt;\n\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\n\n&lt;/div&gt;\n\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\n\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\n\n<hr />\n\n#减色模式\n\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\n\n&lt;div style=\"text-align:center;\"&gt;\n\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\n\n&lt;/div&gt;\n\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\n\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\n\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\n\n<hr />\n\n#差值模式\n\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\n\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\n\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\n\n<hr />\n\n#乘法模式（变暗模式）\n\n乘法模式（Multiply）的原理如下图所示：\n\n&lt;div style=\"text-align:center;\"&gt;\n\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\n\n&lt;/div&gt;\n\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\n\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\n\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\n\n<hr />\n\n#结语\n\n在 Photoshop 中的混合模式有27种，此文<a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a>对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\n\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书<a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a>的第五章，上面有详细的介绍。\n\n笔者也是初学者，如有错误，还请留言指正。\n\n<hr />\n\n参考资料：\n\n<blockquote>\n  <ul>\n  <li><p><a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a></p></li>\n  <li><p><a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a></p></li>\n  <li><p><a href=\"https://en.wikipedia.org/wiki/Blend_modes#cite_note-1\">Blend Modes in wikipedia</a></p></li>\n  <li><p><a href=\"http://elringus.me/blend-modes-in-unity/\">Blend Modes in Unity</a></p></li>\n  <li><p><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\">ShaderLab: Blending</a></p></li>\n  <li><p><a href=\"http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html\">The Cg Tutorial</a></p></li>\n  </ul>\n</blockquote>','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-01 21:45:49','2016-03-01 13:45:49','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n&nbsp;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n$R = \\alpha F+(1-\\alpha)B $\r\n\r\n<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\r\n\r\n其中 R 代表混合后的输出结果（Result），$$ \\alpha $$ 表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n&nbsp;\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n---\r\n\r\n# 加色模式\r\n\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n---\r\n\r\n#减色模式\r\n\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n---\r\n\r\n#差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n---\r\n\r\n#乘法模式（变暗模式）\r\n\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n---\r\n\r\n#结语\r\n\r\n在 Photoshop 中的混合模式有27种，此文[Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书[Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n----\r\n\r\n参考资料：\r\n\r\n&gt; + [Photoshop Blend Mods Explained](http://photoblogstop.com/photoshop/photoshop-blend-modes-explained)\r\n\r\n&gt; + [Math Blend Modes](http://gimp-savvy.com/BOOK/index.html?node55.html)\r\n\r\n&gt; + [Blend Modes in wikipedia](https://en.wikipedia.org/wiki/Blend_modes#cite_note-1)\r\n\r\n&gt; + [Blend Modes in Unity](http://elringus.me/blend-modes-in-unity/)\r\n\r\n&gt; + [ShaderLab: Blending](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n&gt; + [The Cg Tutorial](http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html)',165,'http://codingcoder.com/?p=169',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (170,1,'2016-03-01 22:15:17','2016-03-01 14:15:17','http://codingcoder.com/wp-content/uploads/2016/02/cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png','cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png','','inherit','open','closed','','cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-png','','','2016-03-01 22:15:17','2016-03-01 14:15:17','',0,'http://codingcoder.com/wp-content/uploads/2016/02/cropped-4fb02efb-57f4-4762-a271-5f38a34fbff7-1-.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (171,1,'2016-03-01 22:42:06','0000-00-00 00:00:00','[latexpage]\r\n\r\n<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\r\n\r\n$f(x)$','','','draft','open','open','','','','','2016-03-01 22:42:06','2016-03-01 14:42:06','<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>',0,'http://codingcoder.com/?p=171',0,'post','',0);
INSERT INTO `wp_posts` VALUES (172,1,'2016-03-01 22:40:39','0000-00-00 00:00:00','<div class=\"ql-examples\">[latexpage]\r\nAt first, we sample $f(x)$ in the $N$ ($N$ is odd) equidistant points around $x^*$:\r\n\\[\r\nf_k = f(x_k),\\: x_k = x^*+kh,\\: k=-\\frac{N-1}{2},\\dots,\\frac{N-1}{2}\r\n\\]\r\nwhere $h$ is some step.\r\nThen we interpolate points $\\{(x_k,f_k)\\}$ by polynomial\r\n\\begin{equation} \\label{eq:poly}\r\nP_{N-1}(x)=\\sum_{j=0}^{N-1}{a_jx^j}\r\n\\end{equation}\r\nIts coefficients $\\{a_j\\}$ are found as a solution of system of linear equations:\r\n\\begin{equation} \\label{eq:sys}\r\n\\left\\{ P_{N-1}(x_k) = f_k\\right\\},\\quad k=-\\frac{N-1}{2},\\dots,\\frac{N-1}{2}\r\n\\end{equation}\r\nHere are references to existing equations: (\\ref{eq:poly}), (\\ref{eq:sys}).\r\nHere is reference to non-existing equation (\\ref{eq:unknown}).</div>','','','draft','open','open','','','','','2016-03-01 22:40:39','2016-03-01 14:40:39','<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>',0,'http://codingcoder.com/?p=172',0,'post','',0);
INSERT INTO `wp_posts` VALUES (178,1,'2016-03-01 22:41:37','2016-03-01 14:41:37','<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\r\n\r\n$f(x)$','','','inherit','closed','closed','','171-revision-v1','','','2016-03-01 22:41:37','2016-03-01 14:41:37','',171,'http://codingcoder.com/?p=178',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (179,1,'2016-03-01 22:42:06','2016-03-01 14:42:06','[latexpage]\r\n\r\n<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\r\n\r\n$f(x)$','','','inherit','closed','closed','','171-revision-v1','','','2016-03-01 22:42:06','2016-03-01 14:42:06','',171,'http://codingcoder.com/?p=179',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (177,1,'2016-03-01 22:39:58','2016-03-01 14:39:58','<div class=\"ql-examples\">[latexpage]\r\nAt first, we sample $f(x)$ in the $N$ ($N$ is odd) equidistant points around $x^*$:\r\n\\[\r\nf_k = f(x_k),\\: x_k = x^*+kh,\\: k=-\\frac{N-1}{2},\\dots,\\frac{N-1}{2}\r\n\\]\r\nwhere $h$ is some step.\r\nThen we interpolate points $\\{(x_k,f_k)\\}$ by polynomial\r\n\\begin{equation} \\label{eq:poly}\r\nP_{N-1}(x)=\\sum_{j=0}^{N-1}{a_jx^j}\r\n\\end{equation}\r\nIts coefficients $\\{a_j\\}$ are found as a solution of system of linear equations:\r\n\\begin{equation} \\label{eq:sys}\r\n\\left\\{ P_{N-1}(x_k) = f_k\\right\\},\\quad k=-\\frac{N-1}{2},\\dots,\\frac{N-1}{2}\r\n\\end{equation}\r\nHere are references to existing equations: (\\ref{eq:poly}), (\\ref{eq:sys}).\r\nHere is reference to non-existing equation (\\ref{eq:unknown}).</div>','','','inherit','closed','closed','','172-revision-v1','','','2016-03-01 22:39:58','2016-03-01 14:39:58','',172,'http://codingcoder.com/?p=177',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (180,1,'2016-03-02 19:52:01','2016-03-02 11:52:01','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\n\n阅读本文，可以帮助读者解决以下问题：\n<ol>\n	<li>什么是混合模式</li>\n	<li>混合模式的数学原理</li>\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\n</ol>\n\n<hr />\n\n<h2>正常模式</h2>\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\n\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\n\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\n\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\n\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\n\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/alpha.png\" rel=\"attachment wp-att-182\"><img class=\"alignnone size-full wp-image-182\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/alpha.png\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\n\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\n\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\n\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\n\n[latexpage]\n\n$R = \\alpha F+(1-\\alpha)B $\n\n其中 R 代表混合后的输出结果（Result），$ \\alpha $ 表示前景图层的不透明度的归一化值，介于0到1之间。\n\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\n\n<hr />\n\n<h2>溶解模式</h2>\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\n\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\n\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" rel=\"attachment wp-att-68\"><img class=\"alignnone size-full wp-image-68\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" alt=\"dissolve\" width=\"145\" height=\"97\" /></a>\n\n$ f(B, F)= F $\n\n而在正常模式下的效果是这样的：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\n\n$ f(B, F)= F $\n\n<hr />\n\n<h2>加色模式</h2>\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1.gif\" rel=\"attachment wp-att-55\"><img class=\"alignnone size-medium wp-image-55\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1-266x300.gif\" alt=\"add-1\" width=\"266\" height=\"300\" /></a>\n\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\n\n如果\n\n$$\\vec{F}=(r1, g1, b1)$$\n\n$$ \\vec{B}=(r2, g2, b2)$$\n\n则\n\n$$\\vec{F+B} =(r1+r2, g1+g2, b1+b2)$$\n\n$$\\vec{R} = min(\\vec{F+B}, \\vec{White})$$\n\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\n\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" rel=\"attachment wp-att-81\"><img class=\"alignnone size-full wp-image-81\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" alt=\"rgb-color-space-visualized-as-a-cube-msdn\" width=\"267\" height=\"220\" /></a>\n\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\n\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\n\n<hr />\n\n<h2>减色模式</h2>\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/sub.gif\" rel=\"attachment wp-att-82\"><img class=\"alignnone size-medium wp-image-82\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/sub-265x300.gif\" alt=\"sub\" width=\"265\" height=\"300\" /></a>\n\n$$\\vec{R} = max(\\vec{B-F}, \\vec{Black})$$\n\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\n\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\n\n<hr />\n\n<h2>差值模式</h2>\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\n\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\n\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\n\n<hr />\n\n<h2>乘法模式（变暗模式）</h2>\n乘法模式（Multiply）的原理如下图所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply.gif\" rel=\"attachment wp-att-74\"><img class=\"alignnone size-medium wp-image-74\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply-240x300.gif\" alt=\"multiply\" width=\"240\" height=\"300\" /></a>\n\n&nbsp;\n\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\n\n需要特别注意一点，这里的 $\\times$ 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\n\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\n\n<hr />\n\n<h2>结语</h2>\n在 Photoshop 中的混合模式有27种，此文<a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a>对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\n\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书<a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a>的第五章，上面有详细的介绍。\n\n笔者也是初学者，如有错误，还请留言指正。\n\n<hr />\n\n参考资料：\n<blockquote>\n<ul>\n	<li><a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a></li>\n	<li><a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a></li>\n	<li><a href=\"https://en.wikipedia.org/wiki/Blend_modes#cite_note-1\">Blend Modes in wikipedia</a></li>\n	<li><a href=\"http://elringus.me/blend-modes-in-unity/\">Blend Modes in Unity</a></li>\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\">ShaderLab: Blending</a></li>\n	<li><a href=\"http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html\">The Cg Tutorial</a></li>\n</ul>\n</blockquote>','混合模式的数学原理','','inherit','closed','closed','','165-autosave-v1','','','2016-03-02 19:52:01','2016-03-02 11:52:01','',165,'http://codingcoder.com/?p=180',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (174,1,'2016-03-01 22:29:22','2016-03-01 14:29:22','<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>','','','inherit','closed','closed','','172-revision-v1','','','2016-03-01 22:29:22','2016-03-01 14:29:22','<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>',172,'http://codingcoder.com/?p=174',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (176,1,'2016-03-01 22:38:51','2016-03-01 14:38:51','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n&nbsp;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n$R = \\alpha F+(1-\\alpha)B $\r\n\r\n&nbsp;\r\n\r\n<code>$</code><code>latex i\\hbar\\frac{\\partial}{\\partial t}\\left|\\Psi(t)\\right&gt;=H\\left|\\Psi(t)\\right&gt;$</code>\r\n\r\n其中 R 代表混合后的输出结果（Result），$$ \\alpha $$ 表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n&nbsp;\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/dissolve.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/normal-alpha.png\" style=\"width: 100px; vertical-align: middle;\"&gt;         $ f(B, F)= F $\r\n\r\n&lt;/div&gt;\r\n\r\n<hr />\r\n\r\n<h1>加色模式</h1>\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/add-1.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/rgb-color-space-visualized-as-a-cube-msdn.png\" style=\"width:250px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n<hr />\r\n\r\n#减色模式\r\n\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/sub.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n<hr />\r\n\r\n#差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n<hr />\r\n\r\n#乘法模式（变暗模式）\r\n\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n&lt;div style=\"text-align:center;\"&gt;\r\n\r\n&lt;img src=\"/content/images/2015/10/multiply.gif\" style=\"width:200px;vertical-align:middle;\"&gt;\r\n\r\n&lt;/div&gt;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n<hr />\r\n\r\n#结语\r\n\r\n在 Photoshop 中的混合模式有27种，此文<a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a>对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书<a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a>的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<blockquote>\r\n<ul>\r\n	<li><a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a></li>\r\n	<li><a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a></li>\r\n	<li><a href=\"https://en.wikipedia.org/wiki/Blend_modes#cite_note-1\">Blend Modes in wikipedia</a></li>\r\n	<li><a href=\"http://elringus.me/blend-modes-in-unity/\">Blend Modes in Unity</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\">ShaderLab: Blending</a></li>\r\n	<li><a href=\"http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html\">The Cg Tutorial</a></li>\r\n</ul>\r\n</blockquote>','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-01 22:38:51','2016-03-01 14:38:51','',165,'http://codingcoder.com/?p=176',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (181,1,'2016-03-02 19:25:54','2016-03-02 11:25:54','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n&nbsp;\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" rel=\"attachment wp-att-57\"><img class=\"alignnone size-full wp-image-57\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/alpha.gif\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n&nbsp;\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n[latexpage]\r\n\r\n$R = \\alpha F+(1-\\alpha)B $\r\n\r\n其中 R 代表混合后的输出结果（Result），$ \\alpha $ 表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" rel=\"attachment wp-att-68\"><img class=\"alignnone size-full wp-image-68\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" alt=\"dissolve\" width=\"145\" height=\"97\" /></a>\r\n\r\n$ f(B, F)= F $\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n$ f(B, F)= F $\r\n\r\n<hr />\r\n\r\n<h1>加色模式</h1>\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1.gif\" rel=\"attachment wp-att-55\"><img class=\"alignnone size-medium wp-image-55\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1-266x300.gif\" alt=\"add-1\" width=\"266\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果$$\\vec{F}=（r1, g1, b1）， \\vec{B}=（r2, g2, b2）$$则\r\n\r\n$$\\vec{F+B} =（r1+r2, g1+g2, b1+b2）$$\r\n\r\n$$\\vec{R} = min（\\vec{F+B}, \\vec{White}）$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" rel=\"attachment wp-att-81\"><img class=\"alignnone size-full wp-image-81\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" alt=\"rgb-color-space-visualized-as-a-cube-msdn\" width=\"267\" height=\"220\" /></a>\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n<hr />\r\n\r\n<h1>减色模式</h1>\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/sub.gif\" rel=\"attachment wp-att-82\"><img class=\"alignnone size-medium wp-image-82\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/sub-265x300.gif\" alt=\"sub\" width=\"265\" height=\"300\" /></a>\r\n\r\n$$\\vec{R} = max（\\vec{B-F}, \\vec{Black}）$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n<hr />\r\n\r\n差值模式\r\n\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n<hr />\r\n\r\n<h1>乘法模式（变暗模式）</h1>\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply.gif\" rel=\"attachment wp-att-74\"><img class=\"alignnone size-medium wp-image-74\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply-240x300.gif\" alt=\"multiply\" width=\"240\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 X 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n<hr />\r\n\r\n<h1>结语</h1>\r\n在 Photoshop 中的混合模式有27种，此文<a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a>对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书<a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a>的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<blockquote>\r\n<ul>\r\n	<li><a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a></li>\r\n	<li><a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a></li>\r\n	<li><a href=\"https://en.wikipedia.org/wiki/Blend_modes#cite_note-1\">Blend Modes in wikipedia</a></li>\r\n	<li><a href=\"http://elringus.me/blend-modes-in-unity/\">Blend Modes in Unity</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\">ShaderLab: Blending</a></li>\r\n	<li><a href=\"http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html\">The Cg Tutorial</a></li>\r\n</ul>\r\n</blockquote>','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-02 19:25:54','2016-03-02 11:25:54','',165,'http://codingcoder.com/?p=181',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (182,1,'2016-03-02 19:35:42','2016-03-02 11:35:42','','alpha','','inherit','open','closed','','alpha-2','','','2016-03-02 19:35:42','2016-03-02 11:35:42','',165,'http://codingcoder.com/wp-content/uploads/2016/03/alpha.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (183,1,'2016-03-02 19:49:04','2016-03-02 11:49:04','本文主要讲解混合模式（Blend Mode）的原理，并以 Photoshop 作为效果展示工具，形象化的展示每种混合模式的效果。\r\n\r\n阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是混合模式</li>\r\n	<li>混合模式的数学原理</li>\r\n	<li>详细讲解常见的几种混合模式，如正常（Normal)、溶解（Dissolve）、加色模式 (Addition)、减色模式（Subtract）、差值模式（Difference）和乘法模式（Multiply） 等混合模式的数学原理</li>\r\n</ol>\r\n\r\n<hr />\r\n\r\n<h1>正常模式</h1>\r\n在像 Photoshop 这样的数字图像处理软件中，混合模式是用来决定如何将两个图层相互混合的技术。最简单的混合模式就是只显示上面的图层，而完全的隐藏后面的图层。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" rel=\"attachment wp-att-79\"><img class=\"alignnone size-full wp-image-79\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/opaque.png\" alt=\"opaque\" width=\"145\" height=\"97\" /></a>\r\n\r\n在这里 B 是位于下面的图层的颜色值，每个像素都是不带透明度的纯红色 RGBA =（255, 0, 0, 255），而 F 是上面图层的颜色值，每个像素为不带透明度的纯蓝色 RGBA = (0, 255, 0, 255)。显而易见，这种模式是直接使用的两层中位于上面的涂层的颜色值作为混合后输出的颜色值。这种模式称为正常模式（Normal）。\r\n\r\n<strong><em>注意：为了简单，上面的公式是没有讨论 Alpha 通道如果是半透明或者全透明时的结果。</em></strong>\r\n\r\n那么如果前景图层是半透明的呢？我们先来看效果图吧。这里前景图层 F 的不透明度是60%，即 Alpha 通道值为0.4。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n你会发现，由于前景图层 F 透明度的存在，背景图层 B 的颜色也会混合进来。\r\n\r\n我们来看具体的数学原理，下图是归一化后的 RGB 颜色空间的立方体示意图，其中的 R、G、B 边分别代表色彩的 RGB 分量值，每个分量的取值范围都在0到1之间。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/alpha.png\" rel=\"attachment wp-att-182\"><img class=\"alignnone size-full wp-image-182\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/alpha.png\" alt=\"alpha\" width=\"269\" height=\"284\" /></a>\r\n\r\n两个蓝色的向量分别代表前景图层 F 和背景图层 B 的像素 RGB 值，这两个向量的的两个终点之间的连线即代表不同透明度。\r\n\r\n三个红色的向量分别代表的是当不透明度为25%、50%、75%时，前景图层的像素的颜色向量和背景图层的像素的颜色向量混合而得到的像素的颜色向量。\r\n\r\n你会发现，当不透明度越大时，混合得到的颜色向量会越趋向于前景图层 F 的颜色向量。反之，当前景越透明时，混合得到的颜色会越趋向于背景图层 B 的颜色向量。可以用如下公式表示：\r\n\r\n[latexpage]\r\n\r\n$R = \\alpha F+(1-\\alpha)B $\r\n\r\n其中 R 代表混合后的输出结果（Result），$ \\alpha $ 表示前景图层的不透明度的归一化值，介于0到1之间。\r\n\r\n当前景图层完全不透明时，即$ \\alpha = 1 $，混合得到的颜色就是我们前面讨论的公式$ f(B, F)= F $所表达的含义。反之，当前景图层完全透明时，即$ \\alpha = 0 $，这时混合后应该只会看到背景图层的颜色，因为前景图层完全不可见，即 $ f(B, F)= B $。\r\n\r\n<hr />\r\n\r\n<h1>溶解模式</h1>\r\n溶解模式（Dissolve）的工作原理是允许在前景图层中可以看到一定比例的背景图层中的像素。通过使一部分前景图层的像素成为半透明，而另一部分像素成为全透明的方式，可以实现这种溶解效果。哪部分像素是半透明的，哪部分像素是全透明的，是通过随机的方式决定的。\r\n\r\n<em><strong>注意：想要使溶解模式能够产生预想的效果，前景图层必须半透明的，即其 Alpha 通道值要小于255。</strong></em>\r\n\r\n下图为不透明度为60%的前景图层和完全不透明的背景图层的溶解效果：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" rel=\"attachment wp-att-68\"><img class=\"alignnone size-full wp-image-68\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dissolve.png\" alt=\"dissolve\" width=\"145\" height=\"97\" /></a>\r\n\r\n$ f(B, F)= F $\r\n\r\n而在正常模式下的效果是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" rel=\"attachment wp-att-75\"><img class=\"alignnone size-full wp-image-75\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/normal-alpha.png\" alt=\"normal-alpha\" width=\"145\" height=\"97\" /></a>\r\n\r\n$ f(B, F)= F $\r\n\r\n<hr />\r\n\r\n<h1>加色模式</h1>\r\n加色模式（Addition）是把前景图层的颜色向量和背景图层的颜色向量，进行向量的加法操作，得到混合后的颜色向量。如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1.gif\" rel=\"attachment wp-att-55\"><img class=\"alignnone size-medium wp-image-55\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/add-1-266x300.gif\" alt=\"add-1\" width=\"266\" height=\"300\" /></a>\r\n\r\n向量 $\\vec{F}$ 和向量 $\\vec{B}$ 进行向量叠加运算后，得到混合后的颜色向量$\\vec{R}$。\r\n\r\n如果\r\n\r\n$$\\vec{F}=(r1, g1, b1)$$\r\n\r\n$$ \\vec{B}=(r2, g2, b2)$$\r\n\r\n则\r\n\r\n$$\\vec{F+B} =(r1+r2, g1+g2, b1+b2)$$\r\n\r\n$$\\vec{R} = min(\\vec{F+B}, \\vec{White})$$\r\n\r\n其中$\\vec{White} = (1, 1, 1)$，为了防止向量相加后数值溢出，需要做取最小值的操作。\r\n\r\n细心的读者可以看出来，加色后的颜色向量$\\vec{R}$一定要比向量 $\\vec{F}$ 和向量 $\\vec{B}$的颜色更接近白色，也就是看上去感觉颜色更浅。为什么呢？我们先来看一张 RGB 色彩空间的分布示意图：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" rel=\"attachment wp-att-81\"><img class=\"alignnone size-full wp-image-81\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/rgb-color-space-visualized-as-a-cube-msdn.png\" alt=\"rgb-color-space-visualized-as-a-cube-msdn\" width=\"267\" height=\"220\" /></a>\r\n\r\n你会发现在这个立方体中，由 Black 和 White 两个顶点所组成的对角线上的点，所有的点的 R、G、B 分量都是完全相同的。比如，在 Black 点 RGB = (0, 0, 0)，而 White 点的 RGB = （1, 1, 1）。只要 RGB 分量完全相同的色值，它一定是一个灰度值，这一点读者可以自行在 Photoshop 里面去验证一下。\r\n\r\n所以颜色向量越靠近 Black 和 White 两点所组成的对角线，颜色值就越靠近灰度值，颜色也就看上去越浅。\r\n\r\n<hr />\r\n\r\n<h1>减色模式</h1>\r\n类似于叠加模式，减色模式（Subtract）是用背景图层的颜色与前景图层的颜色做向量减法操作。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/sub.gif\" rel=\"attachment wp-att-82\"><img class=\"alignnone size-medium wp-image-82\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/sub-265x300.gif\" alt=\"sub\" width=\"265\" height=\"300\" /></a>\r\n\r\n$$\\vec{R} = max(\\vec{B-F}, \\vec{Black})$$\r\n\r\n其中$\\vec{Black}$ = (0, 0, 0)，max操作是为了保证每个颜色分量值都不小于0。\r\n\r\n细心的读者可能已经发现了，减色模式是不对称的。即把背景图层和前景图层互换顺序，即背景变前景，前景变背景，所产生的混合结果是不相同的。而加色模式是对称的，交换前景和背景不会改变最终的混合结果。\r\n\r\n<hr />\r\n\r\n<h1>差值模式</h1>\r\n差值模式（Difference）类似于减色模式，但是差值模式是对称的。其数学公式如下：\r\n\r\n$$\\vec{R} = |\\vec{F} - \\vec{B} |$$\r\n\r\n相比于减色模式，这里有一个取绝对值的操作，导致了它是一种对称混合模式。\r\n\r\n<hr />\r\n\r\n<h1>乘法模式（变暗模式）</h1>\r\n乘法模式（Multiply）的原理如下图所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply.gif\" rel=\"attachment wp-att-74\"><img class=\"alignnone size-medium wp-image-74\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/multiply-240x300.gif\" alt=\"multiply\" width=\"240\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n$$\\vec{R} = \\vec{F}\\times\\vec{B} $$\r\n\r\n需要特别注意一点，这里的 $\\times$ 是按照不同的分量单独进行乘法操作，而不是向量叉乘。 即$$\\vec{R} = (r1 \\times r2, g1 \\times g2, b1 \\times b2)$$\r\n\r\n由于每个分量都小于1，所以它们相乘后乘积要比任何一个都小。从上面的颜色空间坐标示意图中，我们知道分量越小，颜色越接近黑色，也就意味着颜色越暗。\r\n\r\n<hr />\r\n\r\n<h1>结语</h1>\r\n在 Photoshop 中的混合模式有27种，此文<a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a>对此做了详细介绍。本文对上述几种比较简单的混合模式的数学原理做了讲解，但是请读者注意，上面的混合模式的原理只是最基本的数学原理，在 Photoshop 这样的商业软件中，会有一些特定的算法。所以你会发现，有时候 Photoshop 展示的效果并不完全符合上述简单的数学原理。\r\n\r\n对于其他没有介绍的混合模式，感兴趣的读者可以自行参考此书<a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a>的第五章，上面有详细的介绍。\r\n\r\n笔者也是初学者，如有错误，还请留言指正。\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<blockquote>\r\n<ul>\r\n	<li><a href=\"http://photoblogstop.com/photoshop/photoshop-blend-modes-explained\">Photoshop Blend Mods Explained</a></li>\r\n	<li><a href=\"http://gimp-savvy.com/BOOK/index.html?node55.html\">Math Blend Modes</a></li>\r\n	<li><a href=\"https://en.wikipedia.org/wiki/Blend_modes#cite_note-1\">Blend Modes in wikipedia</a></li>\r\n	<li><a href=\"http://elringus.me/blend-modes-in-unity/\">Blend Modes in Unity</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\">ShaderLab: Blending</a></li>\r\n	<li><a href=\"http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html\">The Cg Tutorial</a></li>\r\n</ul>\r\n</blockquote>','混合模式的数学原理','','inherit','closed','closed','','165-revision-v1','','','2016-03-02 19:49:04','2016-03-02 11:49:04','',165,'http://codingcoder.com/?p=183',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (184,1,'2016-03-02 19:57:22','2016-03-02 11:57:22','1. Unity RectTransform width in awake start在 Unity UI 中，当我们使用\r\n\r\n2. awake start execute order','todo list','','trash','open','open','','todo-list','','','2016-03-02 19:57:36','2016-03-02 11:57:36','',0,'http://codingcoder.com/?p=184',0,'post','',0);
INSERT INTO `wp_posts` VALUES (185,1,'2016-03-02 19:57:22','2016-03-02 11:57:22','1. Unity RectTransform width in awake start在 Unity UI 中，当我们使用\r\n\r\n2. awake start execute order','todo list','','inherit','closed','closed','','184-revision-v1','','','2016-03-02 19:57:22','2016-03-02 11:57:22','',184,'http://codingcoder.com/?p=185',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (186,1,'2015-10-24 23:39:27','2015-10-24 15:39:27','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n\r\n[table id=1 /]\r\n\r\n<hr />\r\n\r\n<h2>实例</h2>\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTM2ODE5NzMxMg==.html[/embed]\r\n\r\n&nbsp;','Unity 中渲染纹理的应用','','publish','open','open','','unity-%e4%b8%ad%e6%b8%b2%e6%9f%93%e7%ba%b9%e7%90%86%e7%9a%84%e5%ba%94%e7%94%a8','','','2016-03-02 22:35:31','2016-03-02 14:35:31','',0,'http://codingcoder.com/?p=186',0,'post','',0);
INSERT INTO `wp_posts` VALUES (196,1,'2016-03-02 22:16:32','2016-03-02 14:16:32','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />)\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n\r\n[table id=1 /]\r\n\r\n<hr />\r\n\r\n<h2>实例</h2>\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTM2ODE5NzMxMg==.html[/embed]\r\n\r\n&nbsp;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 22:16:32','2016-03-02 14:16:32','',186,'http://codingcoder.com/?p=196',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (187,1,'2016-03-02 19:58:27','2016-03-02 11:58:27','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 什么是渲染纹理（RenderTexture）\r\n+ 怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n---\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的[水预设](http://docs.unity3d.com/Manual/HOWTO-Water.html)（Water） 就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n![](http://docs.unity3d.com/uploads/Main/Water_Reflective.png)\r\n![](http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png)\r\n\r\n---\r\n\r\n#属性介绍\r\n\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n![](/content/images/2015/10/create-rendertexture.png)\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n![](/content/images/2015/10/-----2015-10-24---1-28-26.png)\r\n&lt;table border=\"0\"&gt;\r\n&lt;tr&gt;\r\n&lt;th&gt;属性：&lt;/th&gt;\r\n&lt;th&gt;作用描述：&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td style=\"width:200px;\"&gt;大小（Size）&lt;/td&gt;\r\n&lt;td&gt;渲染纹理 (Render Texture) 的大小（以像素为单位）。只能选择二的幂值大小。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;抗锯齿（Anti-Aliasing）&lt;/td&gt;\r\n&lt;td&gt;抗锯齿的等级，可以选择：无、2个、4个或者8个临近像素采样混合。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;深度缓冲区（Depth Buffer）&lt;/td&gt;\r\n&lt;td&gt;深度缓冲区的类型，可以选在无深度缓冲、或者16位、24位深度缓冲。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt;循环模式（Wrap Mode）&lt;/td&gt;\r\n&lt;td&gt;当平铺时，纹理是被拉伸还是重复。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt;过滤模式（Filter Mode）&lt;/td&gt;\r\n&lt;td&gt;纹理经三维变换拉伸时的过滤方式。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;不过滤模式（No Filtering）&lt;/td&gt;\r\n&lt;td&gt;纹理在近距离变成块状。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 双线性过滤模式&lt;br/&gt;（Bilinear）&lt;/td&gt;\r\n&lt;td&gt;纹理在近距离变得模糊。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 三线性过滤模式（Trilinear）&lt;/td&gt;\r\n&lt;td&gt;类似双线性，但纹理也在不同的纹理层次(mip levels)之间变模糊。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 各向异性等级（Aniso Level）&lt;/td&gt;\r\n&lt;td&gt;在一个陡峭的角度观看纹理时提高纹理的质量。适用于地板和地面纹理。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n#实例\r\n\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n&lt;div&gt;\r\n&lt;iframe src=\"http://player.youku.com/embed/XMTM2ODE5NzMxMg==\" frameborder=0 allowfullscreen style = \"width:100%; height:auto;\"&gt;&lt;/iframe&gt;\r\n&lt;/div&gt;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 19:58:27','2016-03-02 11:58:27','',186,'http://codingcoder.com/?p=187',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (189,1,'2016-03-02 20:12:46','2016-03-02 12:12:46','[[\"\\u5c5e\\u6027\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\\u5927\\u5c0f\\uff08\\bSize\\uff09\",\"\\u6e32\\u67d3\\u7eb9\\u7406 (Render Texture) \\u7684\\u5927\\u5c0f\\uff08\\u4ee5\\u50cf\\u7d20\\u4e3a\\u5355\\u4f4d\\uff09\\u3002\\u53ea\\u80fd\\u9009\\u62e9\\u4e8c\\u7684\\u5e42\\u503c\\u5927\\u5c0f\\u3002\"],[\"\\u6297\\u952f\\u9f7f\\uff08\\bAnti-Aliasing\\uff09\",\"\\u6297\\u952f\\u9f7f\\u7684\\u7b49\\u7ea7\\uff0c\\u53ef\\u4ee5\\u9009\\u62e9\\uff1a\\u65e0\\u30012\\u4e2a\\u30014\\u4e2a\\u6216\\u80058\\u4e2a\\u4e34\\u8fd1\\u50cf\\u7d20\\u91c7\\u6837\\u6df7\\u5408\\u3002\"],[\"\\u6df1\\u5ea6\\u7f13\\u51b2\\u533a\\uff08\\bDepth Buffer\\uff09\",\"\\u6df1\\u5ea6\\u7f13\\u51b2\\u533a\\u7684\\u7c7b\\u578b\\uff0c\\u53ef\\u4ee5\\u9009\\u5728\\u65e0\\u6df1\\u5ea6\\u7f13\\u51b2\\u3001\\u6216\\u800516\\u4f4d\\u300124\\u4f4d\\u6df1\\u5ea6\\u7f13\\u51b2\\u3002\"],[\"\\u5faa\\u73af\\u6a21\\u5f0f\\uff08Wrap Mode\\uff09\",\"\\u5f53\\u5e73\\u94fa\\u65f6\\uff0c\\u7eb9\\u7406\\u662f\\u88ab\\u62c9\\u4f38\\u8fd8\\u662f\\u91cd\\u590d\\u3002\"],[\"\\b\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Filter Mode\\uff09\",\"\\u7eb9\\u7406\\u7ecf\\u4e09\\u7ef4\\u53d8\\u6362\\u62c9\\u4f38\\u65f6\\u7684\\u8fc7\\u6ee4\\u65b9\\u5f0f\\u3002\"],[\"\\u4e0d\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08No Filtering\\uff09\",\"\\u7eb9\\u7406\\u5728\\u8fd1\\u8ddd\\u79bb\\u53d8\\u6210\\u5757\\u72b6\\u3002\"],[\"\\u53cc\\u7ebf\\u6027\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Bilinear\\uff09\",\"\\u7eb9\\u7406\\u5728\\u8fd1\\u8ddd\\u79bb\\u53d8\\u5f97\\u6a21\\u7cca\\u3002\"],[\"\\u4e09\\u7ebf\\u6027\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Trilinear\\uff09\",\"\\u7c7b\\u4f3c\\u53cc\\u7ebf\\u6027\\uff0c\\u4f46\\u7eb9\\u7406\\u4e5f\\u5728\\u4e0d\\u540c\\u7684\\u7eb9\\u7406\\u5c42\\u6b21(mip levels)\\u4e4b\\u95f4\\u53d8\\u6a21\\u7cca\\u3002\"],[\"\\u5404\\u5411\\u5f02\\u6027\\u7b49\\u7ea7\\uff08Aniso Level\\uff09\",\"\\u5728\\u4e00\\u4e2a\\u9661\\u5ced\\u7684\\u89d2\\u5ea6\\u89c2\\u770b\\u7eb9\\u7406\\u65f6\\u63d0\\u9ad8\\u7eb9\\u7406\\u7684\\u8d28\\u91cf\\u3002\\u9002\\u7528\\u4e8e\\u5730\\u677f\\u548c\\u5730\\u9762\\u7eb9\\u7406\\u3002\"]]','RenderTexture 属性面板','','publish','closed','closed','','table-1','','','2016-03-02 22:30:56','2016-03-02 14:30:56','',0,'http://codingcoder.com/?post_type=tablepress_table&#038;p=189',0,'tablepress_table','application/json',0);
INSERT INTO `wp_posts` VALUES (188,1,'2016-03-02 20:06:11','2016-03-02 12:06:11','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />)\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n&lt;table border=\"0\"&gt;\r\n&lt;tr&gt;\r\n&lt;th&gt;属性：&lt;/th&gt;\r\n&lt;th&gt;作用描述：&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td style=\"width:200px;\"&gt;大小（Size）&lt;/td&gt;\r\n&lt;td&gt;渲染纹理 (Render Texture) 的大小（以像素为单位）。只能选择二的幂值大小。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;抗锯齿（Anti-Aliasing）&lt;/td&gt;\r\n&lt;td&gt;抗锯齿的等级，可以选择：无、2个、4个或者8个临近像素采样混合。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;深度缓冲区（Depth Buffer）&lt;/td&gt;\r\n&lt;td&gt;深度缓冲区的类型，可以选在无深度缓冲、或者16位、24位深度缓冲。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt;循环模式（Wrap Mode）&lt;/td&gt;\r\n&lt;td&gt;当平铺时，纹理是被拉伸还是重复。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt;过滤模式（Filter Mode）&lt;/td&gt;\r\n&lt;td&gt;纹理经三维变换拉伸时的过滤方式。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;不过滤模式（No Filtering）&lt;/td&gt;\r\n&lt;td&gt;纹理在近距离变成块状。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 双线性过滤模式&lt;br/&gt;（Bilinear）&lt;/td&gt;\r\n&lt;td&gt;纹理在近距离变得模糊。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 三线性过滤模式（Trilinear）&lt;/td&gt;\r\n&lt;td&gt;类似双线性，但纹理也在不同的纹理层次(mip levels)之间变模糊。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 各向异性等级（Aniso Level）&lt;/td&gt;\r\n&lt;td&gt;在一个陡峭的角度观看纹理时提高纹理的质量。适用于地板和地面纹理。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n#实例\r\n\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n&lt;div&gt;\r\n&lt;iframe src=\"http://player.youku.com/embed/XMTM2ODE5NzMxMg==\" frameborder=0 allowfullscreen style = \"width:100%; height:auto;\"&gt;&lt;/iframe&gt;\r\n&lt;/div&gt;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 20:06:11','2016-03-02 12:06:11','',186,'http://codingcoder.com/?p=188',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (190,1,'2016-03-02 20:13:37','2016-03-02 12:13:37','[[\"\",\"\"],[\"\",\"\"],[\"\",\"\"],[\"\",\"\"],[\"\",\"\"]]','table-1','','inherit','closed','closed','','189-revision-v1','','','2016-03-02 20:13:37','2016-03-02 12:13:37','',189,'http://codingcoder.com/?p=190',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (191,1,'2016-03-02 20:14:24','2016-03-02 12:14:24','[[\"\\u5c5e\\u6027\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\",\"\"],[\"\",\"\"],[\"\",\"\"],[\"\",\"\"]]','table-1','','inherit','closed','closed','','189-revision-v1','','','2016-03-02 20:14:24','2016-03-02 12:14:24','',189,'http://codingcoder.com/?p=191',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (192,1,'2016-03-02 20:17:02','2016-03-02 12:17:02','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />)\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n\r\n&nbsp;\r\n\r\n&lt;table border=\"0\"&gt;\r\n&lt;tr&gt;\r\n&lt;th&gt;属性：&lt;/th&gt;\r\n&lt;th&gt;作用描述：&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td style=\"width:200px;\"&gt;大小（Size）&lt;/td&gt;\r\n&lt;td&gt;渲染纹理 (Render Texture) 的大小（以像素为单位）。只能选择二的幂值大小。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;抗锯齿（Anti-Aliasing）&lt;/td&gt;\r\n&lt;td&gt;抗锯齿的等级，可以选择：无、2个、4个或者8个临近像素采样混合。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;深度缓冲区（Depth Buffer）&lt;/td&gt;\r\n&lt;td&gt;深度缓冲区的类型，可以选在无深度缓冲、或者16位、24位深度缓冲。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt;循环模式（Wrap Mode）&lt;/td&gt;\r\n&lt;td&gt;当平铺时，纹理是被拉伸还是重复。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt;过滤模式（Filter Mode）&lt;/td&gt;\r\n&lt;td&gt;纹理经三维变换拉伸时的过滤方式。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;不过滤模式（No Filtering）&lt;/td&gt;\r\n&lt;td&gt;纹理在近距离变成块状。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 双线性过滤模式&lt;br/&gt;（Bilinear）&lt;/td&gt;\r\n&lt;td&gt;纹理在近距离变得模糊。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 三线性过滤模式（Trilinear）&lt;/td&gt;\r\n&lt;td&gt;类似双线性，但纹理也在不同的纹理层次(mip levels)之间变模糊。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;td&gt; 各向异性等级（Aniso Level）&lt;/td&gt;\r\n&lt;td&gt;在一个陡峭的角度观看纹理时提高纹理的质量。适用于地板和地面纹理。&lt;/td&gt;\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n#实例\r\n\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n&lt;div&gt;\r\n&lt;iframe src=\"http://player.youku.com/embed/XMTM2ODE5NzMxMg==\" frameborder=0 allowfullscreen style = \"width:100%; height:auto;\"&gt;&lt;/iframe&gt;\r\n&lt;/div&gt;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 20:17:02','2016-03-02 12:17:02','',186,'http://codingcoder.com/?p=192',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (193,1,'2016-03-02 20:20:34','2016-03-02 12:20:34','[[\"\\u5c5e\\u6027\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\",\"\"],[\"\",\"\"],[\"\",\"\"],[\"\",\"\"]]','RenderTexture 属性面板','','inherit','closed','closed','','189-revision-v1','','','2016-03-02 20:20:34','2016-03-02 12:20:34','',189,'http://codingcoder.com/?p=193',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (194,1,'2016-03-02 20:23:22','2016-03-02 12:23:22','[[\"\\u5c5e\\u6027\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\\u5927\\u5c0f\\uff08\\bSize\\uff09\",\"\\u6e32\\u67d3\\u7eb9\\u7406 (Render Texture) \\u7684\\u5927\\u5c0f\\uff08\\u4ee5\\u50cf\\u7d20\\u4e3a\\u5355\\u4f4d\\uff09\\u3002\\u53ea\\u80fd\\u9009\\u62e9\\u4e8c\\u7684\\u5e42\\u503c\\u5927\\u5c0f\\u3002\"],[\"\\u6297\\u952f\\u9f7f\\uff08\\bAnti-Aliasing\\uff09\",\"\\u6297\\u952f\\u9f7f\\u7684\\u7b49\\u7ea7\\uff0c\\u53ef\\u4ee5\\u9009\\u62e9\\uff1a\\u65e0\\u30012\\u4e2a\\u30014\\u4e2a\\u6216\\u80058\\u4e2a\\u4e34\\u8fd1\\u50cf\\u7d20\\u91c7\\u6837\\u6df7\\u5408\\u3002\"],[\"\\u6df1\\u5ea6\\u7f13\\u51b2\\u533a\\uff08\\bDepth Buffer\\uff09\",\"\\u6df1\\u5ea6\\u7f13\\u51b2\\u533a\\u7684\\u7c7b\\u578b\\uff0c\\u53ef\\u4ee5\\u9009\\u5728\\u65e0\\u6df1\\u5ea6\\u7f13\\u51b2\\u3001\\u6216\\u800516\\u4f4d\\u300124\\u4f4d\\u6df1\\u5ea6\\u7f13\\u51b2\\u3002\"],[\"\\u5faa\\u73af\\u6a21\\u5f0f\\uff08Wrap Mode\\uff09\",\"\\u5f53\\u5e73\\u94fa\\u65f6\\uff0c\\u7eb9\\u7406\\u662f\\u88ab\\u62c9\\u4f38\\u8fd8\\u662f\\u91cd\\u590d\\u3002\"],[\"\\b\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Filter Mode\\uff09\",\"\\u7eb9\\u7406\\u7ecf\\u4e09\\u7ef4\\u53d8\\u6362\\u62c9\\u4f38\\u65f6\\u7684\\u8fc7\\u6ee4\\u65b9\\u5f0f\\u3002\"],[\"\\u4e0d\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08No Filtering\\uff09\",\"\\u7eb9\\u7406\\u5728\\u8fd1\\u8ddd\\u79bb\\u53d8\\u6210\\u5757\\u72b6\\u3002\"],[\"\\u53cc\\u7ebf\\u6027\\u8fc7\\u6ee4\\u6a21\\u5f0f<br\\/>\\uff08Bilinear\\uff09\",\"\\u7eb9\\u7406\\u5728\\u8fd1\\u8ddd\\u79bb\\u53d8\\u5f97\\u6a21\\u7cca\\u3002\"],[\"\\u4e09\\u7ebf\\u6027\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Trilinear\\uff09\",\"\\u7c7b\\u4f3c\\u53cc\\u7ebf\\u6027\\uff0c\\u4f46\\u7eb9\\u7406\\u4e5f\\u5728\\u4e0d\\u540c\\u7684\\u7eb9\\u7406\\u5c42\\u6b21(mip levels)\\u4e4b\\u95f4\\u53d8\\u6a21\\u7cca\\u3002\"],[\"\\u5404\\u5411\\u5f02\\u6027\\u7b49\\u7ea7\\uff08Aniso Level\\uff09\",\"\\u5728\\u4e00\\u4e2a\\u9661\\u5ced\\u7684\\u89d2\\u5ea6\\u89c2\\u770b\\u7eb9\\u7406\\u65f6\\u63d0\\u9ad8\\u7eb9\\u7406\\u7684\\u8d28\\u91cf\\u3002\\u9002\\u7528\\u4e8e\\u5730\\u677f\\u548c\\u5730\\u9762\\u7eb9\\u7406\\u3002\"]]','RenderTexture 属性面板','','inherit','closed','closed','','189-revision-v1','','','2016-03-02 20:23:22','2016-03-02 12:23:22','',189,'http://codingcoder.com/?p=194',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (195,1,'2016-03-02 20:24:01','2016-03-02 12:24:01','[[\"\\u5c5e\\u6027\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\\u5927\\u5c0f\\uff08\\bSize\\uff09\",\"\\u6e32\\u67d3\\u7eb9\\u7406 (Render Texture) \\u7684\\u5927\\u5c0f\\uff08\\u4ee5\\u50cf\\u7d20\\u4e3a\\u5355\\u4f4d\\uff09\\u3002\\u53ea\\u80fd\\u9009\\u62e9\\u4e8c\\u7684\\u5e42\\u503c\\u5927\\u5c0f\\u3002\"],[\"\\u6297\\u952f\\u9f7f\\uff08\\bAnti-Aliasing\\uff09\",\"\\u6297\\u952f\\u9f7f\\u7684\\u7b49\\u7ea7\\uff0c\\u53ef\\u4ee5\\u9009\\u62e9\\uff1a\\u65e0\\u30012\\u4e2a\\u30014\\u4e2a\\u6216\\u80058\\u4e2a\\u4e34\\u8fd1\\u50cf\\u7d20\\u91c7\\u6837\\u6df7\\u5408\\u3002\"],[\"\\u6df1\\u5ea6\\u7f13\\u51b2\\u533a\\uff08\\bDepth Buffer\\uff09\",\"\\u6df1\\u5ea6\\u7f13\\u51b2\\u533a\\u7684\\u7c7b\\u578b\\uff0c\\u53ef\\u4ee5\\u9009\\u5728\\u65e0\\u6df1\\u5ea6\\u7f13\\u51b2\\u3001\\u6216\\u800516\\u4f4d\\u300124\\u4f4d\\u6df1\\u5ea6\\u7f13\\u51b2\\u3002\"],[\"\\u5faa\\u73af\\u6a21\\u5f0f\\uff08Wrap Mode\\uff09\",\"\\u5f53\\u5e73\\u94fa\\u65f6\\uff0c\\u7eb9\\u7406\\u662f\\u88ab\\u62c9\\u4f38\\u8fd8\\u662f\\u91cd\\u590d\\u3002\"],[\"\\b\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Filter Mode\\uff09\",\"\\u7eb9\\u7406\\u7ecf\\u4e09\\u7ef4\\u53d8\\u6362\\u62c9\\u4f38\\u65f6\\u7684\\u8fc7\\u6ee4\\u65b9\\u5f0f\\u3002\"],[\"\\u4e0d\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08No Filtering\\uff09\",\"\\u7eb9\\u7406\\u5728\\u8fd1\\u8ddd\\u79bb\\u53d8\\u6210\\u5757\\u72b6\\u3002\"],[\"\\u53cc\\u7ebf\\u6027\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Bilinear\\uff09\",\"\\u7eb9\\u7406\\u5728\\u8fd1\\u8ddd\\u79bb\\u53d8\\u5f97\\u6a21\\u7cca\\u3002\"],[\"\\u4e09\\u7ebf\\u6027\\u8fc7\\u6ee4\\u6a21\\u5f0f\\uff08Trilinear\\uff09\",\"\\u7c7b\\u4f3c\\u53cc\\u7ebf\\u6027\\uff0c\\u4f46\\u7eb9\\u7406\\u4e5f\\u5728\\u4e0d\\u540c\\u7684\\u7eb9\\u7406\\u5c42\\u6b21(mip levels)\\u4e4b\\u95f4\\u53d8\\u6a21\\u7cca\\u3002\"],[\"\\u5404\\u5411\\u5f02\\u6027\\u7b49\\u7ea7\\uff08Aniso Level\\uff09\",\"\\u5728\\u4e00\\u4e2a\\u9661\\u5ced\\u7684\\u89d2\\u5ea6\\u89c2\\u770b\\u7eb9\\u7406\\u65f6\\u63d0\\u9ad8\\u7eb9\\u7406\\u7684\\u8d28\\u91cf\\u3002\\u9002\\u7528\\u4e8e\\u5730\\u677f\\u548c\\u5730\\u9762\\u7eb9\\u7406\\u3002\"]]','RenderTexture 属性面板','','inherit','closed','closed','','189-revision-v1','','','2016-03-02 20:24:01','2016-03-02 12:24:01','',189,'http://codingcoder.com/?p=195',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (197,1,'2016-03-02 22:32:06','2016-03-02 14:32:06','阅读本文，可以帮助读者解决以下问题：\n<ol>\n	<li>什么是渲染纹理（RenderTexture）</li>\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\n\n<hr />\n\n</li>\n</ol>\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\n\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\n\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\n\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />\n\n<hr />\n\n<h2>属性介绍</h2>\n读者可以按照如下方式创建一个渲染纹理：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\n\n创建好后，你会在 Inspector 中看到如下属性面板：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\n\n[table id=1 /]\n\n<hr />\n\n<h2>实例</h2>\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\n\n[embed]http://v.youku.com/v_show/id_XMTM2ODE5NzMxMg==.html[/embed]\n\n&nbsp;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-autosave-v1','','','2016-03-02 22:32:06','2016-03-02 14:32:06','',186,'http://codingcoder.com/?p=197',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (198,1,'2016-03-02 22:32:14','2016-03-02 14:32:14','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n\r\n[table id=1 /]\r\n\r\n<hr />\r\n\r\n<h2>实例</h2>\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTM2ODE5NzMxMg==.html[/embed]\r\n\r\n&nbsp;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 22:32:14','2016-03-02 14:32:14','',186,'http://codingcoder.com/?p=198',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (200,1,'2016-03-02 22:35:31','2016-03-02 14:35:31','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的 <a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>  就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n\r\n[table id=1 /]\r\n\r\n<hr />\r\n\r\n<h2>实例</h2>\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTM2ODE5NzMxMg==.html[/embed]\r\n\r\n&nbsp;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 22:35:31','2016-03-02 14:35:31','',186,'http://codingcoder.com/?p=200',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (199,1,'2016-03-02 22:35:16','2016-03-02 14:35:16','阅读本文，可以帮助读者解决以下问题：\r\n<ol>\r\n	<li>什么是渲染纹理（RenderTexture）</li>\r\n	<li>怎样使用渲染纹理实现一个游戏内的直播大屏幕效果\r\n\r\n<hr />\r\n\r\n</li>\r\n</ol>\r\n渲染纹理（RenderTexture）是一种在运行时创建和更新的特殊的纹理（Texture）。要使用渲染纹理，你需要首先创建一个新的渲染纹理，并且把其中一个摄像机（Camera）设定为渲染到该渲染纹理中。随后你就可以像使用普通纹理一样，在材质中使用这个渲染纹理。\r\n\r\n在 Unity 标准资源（Standard Assets）中的&nbsp;<a href=\"http://docs.unity3d.com/Manual/HOWTO-Water.html\" target=\"_blank\">Water</a>&nbsp; 就是一个在实际中使用渲染纹理来实现实时反射和折射效果的例子。效果图如下所示：\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_Reflective.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/Water_ReflectiveRefractive.png\" alt=\"\" width=\"650\" height=\"456\" />\r\n\r\n<hr />\r\n\r\n<h2>属性介绍</h2>\r\n读者可以按照如下方式创建一个渲染纹理：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture.png\" rel=\"attachment wp-att-67\"><img class=\"alignnone size-medium wp-image-67\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/create-rendertexture-300x236.png\" alt=\"create-rendertexture\" width=\"300\" height=\"236\" /></a>\r\n\r\n创建好后，你会在 Inspector 中看到如下属性面板：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26.png\" rel=\"attachment wp-att-9\"><img class=\"alignnone size-medium wp-image-9\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/2015-10-24-1-28-26-300x204.png\" alt=\"-----2015-10-24---1-28-26\" width=\"300\" height=\"204\" /></a>\r\n\r\n[table id=1 /]\r\n\r\n<hr />\r\n\r\n<h2>实例</h2>\r\n我们现在想实现一个游戏内的直播大屏幕。即在游戏内的场景中有一个立方体，在这个立方体上可以实时播放游戏画面。具体操作很简单，可以看如下视频：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTM2ODE5NzMxMg==.html[/embed]\r\n\r\n&nbsp;','Unity 中渲染纹理的应用','','inherit','closed','closed','','186-revision-v1','','','2016-03-02 22:35:16','2016-03-02 14:35:16','',186,'http://codingcoder.com/?p=199',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (201,1,'2015-10-25 22:41:52','2015-10-25 14:41:52','阅读本文，可以帮助读者解决以下问题：\n\n<ul>\n<li>了解Unity 着色器（Shader）中混合模式（Blending）的语法规则</p></li>\n<li><p>详细对比不同的混合模式的混合方程式</p></li>\n</ul>\n\n<hr />\n\n<p>如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\n\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\n\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\n\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（<code>gl_FragColor</code>）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量<code>gl_FragColor</code>中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\n\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\n\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\n\n其中，<code>pixel_color</code>是已经在帧缓冲区的 RGBA 色值，<code>result</code>是混合的结果色值，也就是混合阶段的输出色值。<code>SrcFactor</code>和<code>DstFactor</code>是可配置的参数，它们都是<code>vec4</code>类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\n\n在 Unity ShaderLab 中会通过如下的语法方式来配置<code>SrcFactor</code>和<code>DstFactor</code>：\n\n<code>Blend SrcFactor DstFactor</code>\n\n<hr />\n\n<h2>语法</h2>\n\n<ul>\n    <li>`Blend Off`：关闭混合</li>\n    <li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\n    <li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\n    <li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\n</ul>\n\n<hr />\n\n混合操作的类型\n[table id=2 /]\n\n<hr />\n\n<h2>混合因子</h2>\n\n下面的属性对于混合命令中的<code>SrcFactor</code>和<code>DstFactor</code>都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当<code>BlendOp</code>使用逻辑运算时，混合因子会被忽略。\n\n[table id=3 /]\n\n<hr />\n\n<h2>详细对比</h2>\n\n下面是几种常见的混合模式。\n\n<h3>1. Alpha 混合</h3>\n\n<code>Blend SrcAlpha OneMinusSrcAlpha</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true \">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</pre>\n\n<h3>2. 加法混合</h3>\n\n<code>Blend One One</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\n</pre>\n\n&nbsp;\n\n<span style=\"font-size: 24px; font-weight: bold; line-height: 1.1667;\">3. 柔和相加</span>\n\n<code>Blend OneMinusDstColor One</code>\n\n对应方程式如下：\n\n<pre class=\"lang:c++ range:2 decode:true\">vec4 result =&amp;nbsp; (vec4(1.0) - pixel_color) * gl_FragColor \n+ vec4(1.0) * pixel_color;</pre>\n\n&nbsp;\n\n<h3>4. 相乘</h3>\n\n<code>Blend DstColor Zero</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\n</pre>\n\n<h3>5. 两倍相乘</h3>\n\n<code>Blend DstColor SrcColor</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true \">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\n</pre>\n\n&nbsp;\n\n<hr />\n\n参考资料：\n\n<ul>\n    <li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\" target=\"_blank\">Unity Manual - Blend</a></li>\n    <li><a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency\" target=\"_blank\">GLSL_Programming</a></li>\n</ul>','Unity 着色器中的混合模式','','publish','open','open','','unity-%e7%9d%80%e8%89%b2%e5%99%a8%e4%b8%ad%e7%9a%84%e6%b7%b7%e5%90%88%e6%a8%a1%e5%bc%8f','','','2016-03-03 09:53:12','2016-03-03 01:53:12','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\r\n\r\n在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n<hr />\r\n\r\n<h2>语法</h2>\r\n<ul>\r\n	<li>`Blend Off`：关闭混合</li>\r\n	<li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\r\n	<li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\r\n	<li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\r\n</ul>\r\n\r\n<hr />\r\n\r\n混合操作的类型\r\n[table id=2 /]\r\n\r\n<hr />\r\n\r\n<h2>混合因子</h2>\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n[table id=3 /]\r\n\r\n<hr />\r\n\r\n<h2>详细对比</h2>\r\n下面是几种常见的混合模式。\r\n<h3>1. Alpha 混合</h3>\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</pre>\r\n<h3>2. 加法混合</h3>\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<span style=\"font-size: 24px; font-weight: bold; line-height: 1.1667;\">3. 柔和相加</span>\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n<pre class=\"lang:c++ range:2 decode:true\">vec4 result =&amp;nbsp; (vec4(1.0) - pixel_color) * gl_FragColor \r\n+ vec4(1.0) * pixel_color;</pre>\r\n&nbsp;\r\n<h3>4. 相乘</h3>\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n</pre>\r\n<h3>5. 两倍相乘</h3>\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<ul>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\" target=\"_blank\">Unity Manual - Blend</a></li>\r\n	<li><a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency\" target=\"_blank\">GLSL_Programming</a></li>\r\n</ul>',0,'http://codingcoder.com/?p=201',0,'post','',0);
INSERT INTO `wp_posts` VALUES (219,1,'2016-03-03 09:41:05','2016-03-03 01:41:05','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\r\n\r\n在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n<hr />\r\n\r\n<h2>语法</h2>\r\n<ul>\r\n	<li>`Blend Off`：关闭混合</li>\r\n	<li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\r\n	<li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\r\n	<li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\r\n</ul>\r\n\r\n<hr />\r\n\r\n混合操作的类型\r\n[table id=2 /]\r\n\r\n<hr />\r\n\r\n<h2>混合因子</h2>\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n[table id=3 /]\r\n\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n<h2>详细对比</h2>\r\n下面是几种常见的混合模式。\r\n<h3>1. Alpha 混合</h3>\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n&nbsp;\r\n<h3>2. 加法混合</h3>\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n` vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;`\r\n<h3>3. 柔和相加</h3>\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n<h3>4. 相乘</h3>\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n<h3>5. 两倍相乘</h3>\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n\r\n参考资料：\r\n<ul>\r\n	<li>[Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)</li>\r\n	<li>[GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)</li>\r\n</ul>','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:41:05','2016-03-03 01:41:05','',201,'http://codingcoder.com/?p=219',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (216,1,'2016-03-03 09:33:36','2016-03-03 01:33:36','[[\"\\u7b80\\u5199\",\"\\u5177\\u4f53\\u6570\\u636e\\u7c7b\\u578b\"],[\"One\",\"<code>vec4(1.0) <\\/code>\"],[\"Zero\",\"<code>vec4(0.0)<\\/code>\"],[\"SrcAlpha\",\" <code>vec4(gl_FragColor.a)<\\/code>\"],[\"DstColor\",\" <code>pixel_color<\\/code>\"],[\"DstAlpha\",\"<code> vec4(pixel_color.a) <\\/code>\"],[\"OneMinusSrcColor\",\"<code> vec4(1.0) \\u2013 gl_FragColor <\\/code>\"],[\"OneMinusDstColor\",\" <code>vec4(1.0) \\u2013 pixel_color<\\/code>\"],[\"OneMinusDstAlpha\",\" <code>vec4(1.0 \\u2013 pixel_color.a)<\\/code>\"]]','混合因子','','publish','closed','closed','','%e6%b7%b7%e5%90%88%e5%9b%a0%e5%ad%90','','','2016-03-03 09:38:36','2016-03-03 01:38:36','',0,'http://codingcoder.com/?post_type=tablepress_table&#038;p=216',0,'tablepress_table','application/json',0);
INSERT INTO `wp_posts` VALUES (217,1,'2016-03-03 09:37:00','2016-03-03 01:37:00','[[\"\\u7b80\\u5199\",\"\\u5177\\u4f53\\u6570\\u636e\\u7c7b\\u578b\"],[\"One\",\"vec4(1.0) \"],[\"Zero\",\"vec4(0.0)\"],[\"SrcAlpha\",\" vec4(gl_FragColor.a)\"],[\"DstColor\",\" pixel_color\"],[\"DstAlpha\",\"<code> vec4(pixel_color.a) <\\/code>\"],[\"OneMinusSrcColor\",\"<code> vec4(1.0) \\u2013 gl_FragColor <\\/code>\"],[\"OneMinusDstColor\",\" vec4(1.0) \\u2013 pixel_color\"],[\"OneMinusDstAlpha\",\" vec4(1.0 \\u2013 pixel_color.a)\"]]','混合因子','','inherit','closed','closed','','216-revision-v1','','','2016-03-03 09:37:00','2016-03-03 01:37:00','',216,'http://codingcoder.com/?p=217',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (203,1,'2016-03-02 22:56:54','2016-03-02 14:56:54','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n\r\n<code>\r\nvec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;\r\n</code>\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同`gl_FragColor`和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-02 22:56:54','2016-03-02 14:56:54','',201,'http://codingcoder.com/?p=203',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (204,1,'2016-03-02 23:06:13','2016-03-02 15:06:13','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n\r\n<code language = \"cpp\">\r\nvec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;\r\n</code>\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同`gl_FragColor`和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-02 23:06:13','2016-03-02 15:06:13','',201,'http://codingcoder.com/?p=204',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (202,1,'2016-03-02 22:41:51','2016-03-02 14:41:51','<p class=\"p1\"><span class=\"s1\">阅读本文，可以帮助读者解决以下问题：</span></p>\r\n<p class=\"p3\"><span class=\"s1\">+ </span><span class=\"s2\">了解</span><span class=\"s1\">Unity </span><span class=\"s2\">着色器（</span><span class=\"s1\">Shader</span><span class=\"s2\">）中混合模式（</span><span class=\"s1\">Blending</span><span class=\"s2\">）的语法规则</span></p>\r\n<p class=\"p1\"><span class=\"s3\">+ </span><span class=\"s1\">详细对比不同的混合模式的混合方程式</span></p>\r\n<p class=\"p5\"><span class=\"s1\">---</span></p>\r\n<p class=\"p3\"><span class=\"s2\">如果读者对混合模式不熟悉，请先阅读</span><span class=\"s4\">[</span><span class=\"s5\">混合模式的数学原理</span><span class=\"s4\">]</span><span class=\"s1\">(www.codingcoder.com/blend-modes-in-unity-shader/)</span><span class=\"s2\">一文，非常有益于本文的理解。</span></p>\r\n<p class=\"p1\"><span class=\"s1\">在</span><span class=\"s3\"> Unity </span><span class=\"s1\">着色器（</span><span class=\"s3\">Shader</span><span class=\"s1\">）开发中，混合（</span><span class=\"s3\">Blending</span><span class=\"s1\">）是用来制作透明对象的。</span></p>\r\n<p class=\"p6\"><span class=\"s1\">![](/content/images/2015/10/PipelineBlend.png)</span></p>\r\n<p class=\"p1\"><span class=\"s1\">渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合</span><span class=\"s3\"> (Blend) </span><span class=\"s1\">命令就是用来控制这些像素如何与已有像素混合。</span></p>\r\n<p class=\"p3\"><span class=\"s2\">正如在</span><span class=\"s4\">[OpenGL ES 2.0 Pipeline]</span><span class=\"s1\">(<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\"><span class=\"s3\">https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline</span></a>)</span><span class=\"s2\">一文中所讲的那样，片段着色器（</span><span class=\"s1\">Fragment Shader</span><span class=\"s2\">）对于每个没有被舍弃掉的片段（</span><span class=\"s1\">fragment</span><span class=\"s2\">）都计算出一个</span><span class=\"s1\"> RGBA </span><span class=\"s2\">的颜色（</span><span class=\"s4\">`gl_FragColor`</span><span class=\"s2\">）。对于片段的处理，在</span><span class=\"s4\">[Per-Fragment Operations]</span><span class=\"s1\">(<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\"><span class=\"s3\">https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations</span></a>)</span><span class=\"s2\">一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量</span><span class=\"s4\">`gl_FragColor`</span><span class=\"s2\">中的颜色）和已经在帧缓存区（</span><span class=\"s1\">framebuffer</span><span class=\"s2\">）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（</span><span class=\"s1\">source color</span><span class=\"s2\">），对应像素的帧缓冲区色值为目标色值（</span><span class=\"s1\">destination color</span><span class=\"s2\">）。</span></p>\r\n<p class=\"p1\"><span class=\"s1\">混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">vec4 result = </span></p>\r\n<p class=\"p6\"><span class=\"s1\">SrcFactor * gl_FragColor + DstFactor * pixel_color;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s2\">其中，</span><span class=\"s1\">`</span><span class=\"s6\">pixel_color</span><span class=\"s1\">`</span><span class=\"s2\">是已经在帧缓冲区的</span><span class=\"s1\"> RGBA </span><span class=\"s2\">色值，</span><span class=\"s1\">`</span><span class=\"s6\">result</span><span class=\"s1\">`</span><span class=\"s2\">是混合的结果色值，也就是混合阶段的输出色值。</span><span class=\"s1\">`</span><span class=\"s6\">SrcFactor</span><span class=\"s1\">`</span><span class=\"s2\">和</span><span class=\"s1\">`</span><span class=\"s6\">DstFactor</span><span class=\"s1\">`</span><span class=\"s2\">是可配置的参数，它们都是</span><span class=\"s1\">`</span><span class=\"s6\">vec4</span><span class=\"s1\">`</span><span class=\"s2\">类型的</span><span class=\"s1\"> RGBA </span><span class=\"s2\">色值，它们会按照逐位相乘的方式同</span><span class=\"s1\">`</span><span class=\"s6\">gl_FragColor</span><span class=\"s1\">`</span><span class=\"s2\">和</span><span class=\"s1\">`</span><span class=\"s6\">pixel_color</span><span class=\"s1\">`</span><span class=\"s2\">相乘。在</span><span class=\"s1\"> Unity ShaderLab </span><span class=\"s2\">中会通过如下的语法方式来配置</span><span class=\"s1\">`</span><span class=\"s6\">SrcFactor</span><span class=\"s1\">`</span><span class=\"s2\">和</span><span class=\"s1\">`</span><span class=\"s6\">DstFactor</span><span class=\"s1\">`</span><span class=\"s2\">：</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend SrcFactor DstFactor</span><span class=\"s4\">`</span></p>\r\n<p class=\"p6\"><span class=\"s1\">---</span></p>\r\n<p class=\"p8\"><span class=\"s3\">#</span><span class=\"s1\">语法</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend Off</span><span class=\"s4\">`</span><span class=\"s5\">：关闭混合</span></p>\r\n<p class=\"p6\"><span class=\"s1\">`</span><span class=\"s6\">Blend SrcFactor DstFactor</span><span class=\"s1\">`</span><span class=\"s2\">：配置和启用混合。生成的颜色乘以</span><span class=\"s1\"> `</span><span class=\"s6\">SrcFactor</span><span class=\"s1\">`</span><span class=\"s2\">。已在屏幕上的颜色乘以</span><span class=\"s1\"> `</span><span class=\"s6\">DstFactor</span><span class=\"s1\">`</span><span class=\"s2\">，然后两者相加。</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend SrcFactor DstFactor, SrcFactorA DstFactorA</span><span class=\"s4\">`</span><span class=\"s5\">：与上述相同，但是对</span><span class=\"s4\"> Alpha </span><span class=\"s5\">通道使用不同的因子混合。</span></p>\r\n<p class=\"p8\"><span class=\"s3\">`</span><span class=\"s7\">BlendOp BlendOp</span><span class=\"s3\">`</span><span class=\"s1\">：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</span></p>\r\n<p class=\"p6\"><span class=\"s1\">---</span></p>\r\n<p class=\"p8\"><span class=\"s3\">#</span><span class=\"s1\">混合操作的类型</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;table border=\"0\"&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">相加（</span><span class=\"s1\">Add</span><span class=\"s2\">）</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">把源色值和目标色值相加</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td &gt;</span><span class=\"s2\">相减（</span><span class=\"s1\">Sub</span><span class=\"s2\">）</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">从源色值中减去目标色值</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">反相减（</span><span class=\"s1\">RevSub</span><span class=\"s2\">）</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">从目标色值中减去源色值</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">最小值（</span><span class=\"s1\">Min</span><span class=\"s2\">）</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p8\"><span class=\"s3\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s1\">使用目标色值和源色值中的最小值</span><span class=\"s3\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s2\">最大值（</span><span class=\"s1\">Max</span><span class=\"s2\">）</span><span class=\"s1\">&lt;/td&gt;</span></p>\r\n<p class=\"p8\"><span class=\"s3\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;</span><span class=\"s1\">使用目标色值和源色值中的最大值</span><span class=\"s3\">&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;/table&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">---</span></p>\r\n<p class=\"p8\"><span class=\"s3\">#</span><span class=\"s1\">混合因子</span></p>\r\n<p class=\"p8\"><span class=\"s1\">下面的属性对于混合命令中的</span><span class=\"s3\">`</span><span class=\"s7\">SrcFactor</span><span class=\"s3\">`</span><span class=\"s1\">和</span><span class=\"s3\">`</span><span class=\"s7\">DstFactor</span><span class=\"s3\">`</span><span class=\"s1\">都适用。源颜色（</span><span class=\"s3\">Source</span><span class=\"s1\">）是指已计算的颜色，目标颜色（</span><span class=\"s3\">Destination</span><span class=\"s1\">）是指已经在屏幕上的颜色。当</span><span class=\"s3\">`</span><span class=\"s7\">BlendOp</span><span class=\"s3\">`</span><span class=\"s1\">使用逻辑运算时，混合因子会被忽略。</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;table border=\"0\"&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;One&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;Zero&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;SrcAlpha&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;DstColor&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt; DstAlpha &lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt; OneMinusSrcColor &lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt; OneMinusDstColor &lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">    </span>&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\"><span class=\"Apple-converted-space\">  </span>&lt;/tr&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">&lt;/table&gt;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">---</span></p>\r\n<p class=\"p8\"><span class=\"s3\">#</span><span class=\"s1\">详细对比</span></p>\r\n<p class=\"p8\"><span class=\"s1\">下面是几种常见的混合模式。</span></p>\r\n<p class=\"p6\"><span class=\"s1\">##1. Alpha </span><span class=\"s2\">混合</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend SrcAlpha OneMinusSrcAlpha</span><span class=\"s4\">`</span></p>\r\n<p class=\"p8\"><span class=\"s1\">对应的方程式如下：</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">##2. </span><span class=\"s2\">加法混合</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend One One</span><span class=\"s4\">`</span></p>\r\n<p class=\"p8\"><span class=\"s1\">对应的方程式如下：</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">##3. </span><span class=\"s2\">柔和相加</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend OneMinusDstColor One</span><span class=\"s4\">`</span></p>\r\n<p class=\"p8\"><span class=\"s1\">对应方程式如下：</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">vec4 result =<span class=\"Apple-converted-space\">  </span>(vec4(1.0) - pixel_color) </span></p>\r\n<p class=\"p6\"><span class=\"s1\"> * gl_FragColor + vec4(1.0) * pixel_color;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">##4. </span><span class=\"s2\">相乘</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend DstColor Zero</span><span class=\"s4\">`</span></p>\r\n<p class=\"p8\"><span class=\"s1\">对应的方程式如下：</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">##5. </span><span class=\"s2\">两倍相乘</span></p>\r\n<p class=\"p3\"><span class=\"s4\">`</span><span class=\"s1\">Blend DstColor SrcColor</span><span class=\"s4\">`</span></p>\r\n<p class=\"p8\"><span class=\"s1\">对应的方程式如下：</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;</span></p>\r\n<p class=\"p6\"><span class=\"s1\">```</span></p>\r\n<p class=\"p6\"><span class=\"s1\">---</span></p>\r\n<p class=\"p8\"><span class=\"s1\">参考资料：</span></p>\r\n<p class=\"p6\"><span class=\"s1\">+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)</span></p>\r\n<p class=\"p6\"><span class=\"s1\">+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)</span></p>','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-02 22:41:51','2016-03-02 14:41:51','',201,'http://codingcoder.com/?p=202',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (205,1,'2016-03-02 23:19:56','2016-03-02 15:19:56','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n\r\n<code>vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;\r\n</code>\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同`gl_FragColor`和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-02 23:19:56','2016-03-02 15:19:56','',201,'http://codingcoder.com/?p=205',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (206,1,'2016-03-03 09:12:41','2016-03-03 01:12:41','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n\r\n<code>{c}vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;{/c}\r\n</code>\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同`gl_FragColor`和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:12:41','2016-03-03 01:12:41','',201,'http://codingcoder.com/?p=206',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (207,1,'2016-03-03 09:13:12','2016-03-03 01:13:12','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n\r\n{c}vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;{/c}\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同`gl_FragColor`和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:13:12','2016-03-03 01:13:12','',201,'http://codingcoder.com/?p=207',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (208,1,'2016-03-03 09:15:51','2016-03-03 01:15:51','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n \r\n<pre class=\"lang:default decode:true \" >vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre> \r\n\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同`gl_FragColor`和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:15:51','2016-03-03 01:15:51','',201,'http://codingcoder.com/?p=208',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (209,1,'2016-03-03 09:19:26','2016-03-03 01:19:26','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n \r\n<pre class=\"lang:default decode:true \" >vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre> \r\n\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同` <span class=\"lang:c++ decode:true  crayon-inline \" >gl_FragColor</span> `和`pixel_color`相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:19:26','2016-03-03 01:19:26','',201,'http://codingcoder.com/?p=209',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (210,1,'2016-03-03 09:20:35','2016-03-03 01:20:35','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n \r\n<pre class=\"lang:default decode:true \" >vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre> \r\n\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true  crayon-inline \" >gl_FragColor</span> 和 <span class=\"lang:c++ decode:true  crayon-inline \" >pixel_color</span> 相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:20:35','2016-03-03 01:20:35','',201,'http://codingcoder.com/?p=210',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (213,1,'2016-03-03 09:29:11','2016-03-03 01:29:11','[[\"\\u64cd\\u4f5c\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\\u76f8\\u52a0\\uff08Add\\uff09\",\"\\u628a\\u6e90\\u8272\\u503c\\u548c\\u76ee\\u6807\\u8272\\u503c\\u76f8\\u52a0\"],[\"\\u76f8\\u51cf\\uff08Sub\\uff09\",\"\\u4ece\\u6e90\\u8272\\u503c\\u4e2d\\u51cf\\u53bb\\u76ee\\u6807\\u8272\\u503c\"],[\"\\u53cd\\u76f8\\u51cf\\uff08RevSub\\uff09\",\"\\u4ece\\u76ee\\u6807\\u8272\\u503c\\u4e2d\\u51cf\\u53bb\\u6e90\\u8272\\u503c\"],[\"\\u6700\\u5c0f\\u503c\\uff08Min\\uff09\",\"\\u4f7f\\u7528\\u76ee\\u6807\\u8272\\u503c\\u548c\\u6e90\\u8272\\u503c\\u4e2d\\u7684\\u6700\\u5c0f\\u503c\"],[\"\\u6700\\u5927\\u503c\\uff08Max\\uff09\",\"\\u4f7f\\u7528\\u76ee\\u6807\\u8272\\u503c\\u548c\\u6e90\\u8272\\u503c\\u4e2d\\u7684\\u6700\\u5927\\u503c\"]]','混合操作的类型','','publish','closed','closed','','%e6%b7%b7%e5%90%88%e6%93%8d%e4%bd%9c%e7%9a%84%e7%b1%bb%e5%9e%8b','','','2016-03-03 09:31:58','2016-03-03 01:31:58','',0,'http://codingcoder.com/?post_type=tablepress_table&#038;p=213',0,'tablepress_table','application/json',0);
INSERT INTO `wp_posts` VALUES (211,1,'2016-03-03 09:21:56','2016-03-03 01:21:56','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n \r\n<pre class=\"lang:default decode:true \" >vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre> \r\n\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true  crayon-inline \" >gl_FragColor</span> 和 <span class=\"lang:c++ decode:true  crayon-inline \" >pixel_color</span> 相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n \r\n<pre class=\"lang:c++ decode:true \" >Blend SrcFactor DstFactor</pre> \r\n\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:21:56','2016-03-03 01:21:56','',201,'http://codingcoder.com/?p=211',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (212,1,'2016-03-03 09:22:34','2016-03-03 01:22:34','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n \r\n<pre class=\"lang:default decode:true \" >vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre> \r\n\r\n\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true  crayon-inline \" >gl_FragColor</span> 和 <span class=\"lang:c++ decode:true  crayon-inline \" >pixel_color</span> 相乘。在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n \r\n`Blend SrcFactor DstFactor`\r\n\r\n\r\n---\r\n\r\n#语法\r\n\r\n`Blend Off`：关闭混合\r\n\r\n`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。\r\n\r\n`Blend SrcFactor DstFactor, SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。\r\n\r\n`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。\r\n\r\n---\r\n\r\n#混合操作的类型\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;相加（Add）&lt;/td&gt;\r\n\r\n&lt;td&gt;把源色值和目标色值相加&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td &gt;相减（Sub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从源色值中减去目标色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;反相减（RevSub）&lt;/td&gt;\r\n\r\n&lt;td&gt;从目标色值中减去源色值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最小值（Min）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最小值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;最大值（Max）&lt;/td&gt;\r\n\r\n&lt;td&gt;使用目标色值和源色值中的最大值&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#混合因子\r\n\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n&lt;table border=\"0\"&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;One&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(1.0) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;Zero&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt;vec4(0.0)&lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;SrcAlpha&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt;DstColor&lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; DstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - gl_FragColor &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusSrcAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - gl_FragColor.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstColor &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0) - pixel_color &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;tr&gt;\r\n\r\n&lt;td&gt; OneMinusDstAlpha &lt;/td&gt;\r\n\r\n&lt;td&gt;&lt;code&gt; vec4(1.0 - pixel_color.a) &lt;/code&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n---\r\n\r\n#详细对比\r\n\r\n下面是几种常见的混合模式。\r\n\r\n##1. Alpha 混合\r\n\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;\r\n\r\n```\r\n\r\n##2. 加法混合\r\n\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##3. 柔和相加\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n\r\n```\r\n\r\nvec4 result =  (vec4(1.0) - pixel_color)\r\n\r\n* gl_FragColor + vec4(1.0) * pixel_color;\r\n\r\n```\r\n\r\n##4. 相乘\r\n\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n\r\n```\r\n\r\n##5. 两倍相乘\r\n\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n\r\n```\r\n\r\nvec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n\r\n```\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n+ [Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)\r\n\r\n+ [GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:22:34','2016-03-03 01:22:34','',201,'http://codingcoder.com/?p=212',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (214,1,'2016-03-03 09:31:11','2016-03-03 01:31:11','[[\"\\u76f8\\u52a0\\uff08Add\\uff09\",\"\\u628a\\u6e90\\u8272\\u503c\\u548c\\u76ee\\u6807\\u8272\\u503c\\u76f8\\u52a0\"],[\"\\u76f8\\u51cf\\uff08Sub\\uff09\",\"\\u4ece\\u6e90\\u8272\\u503c\\u4e2d\\u51cf\\u53bb\\u76ee\\u6807\\u8272\\u503c\"],[\"\\u53cd\\u76f8\\u51cf\\uff08RevSub\\uff09\",\"\\u4ece\\u76ee\\u6807\\u8272\\u503c\\u4e2d\\u51cf\\u53bb\\u6e90\\u8272\\u503c\"],[\"\\u6700\\u5c0f\\u503c\\uff08Min\\uff09\",\"\\u4f7f\\u7528\\u76ee\\u6807\\u8272\\u503c\\u548c\\u6e90\\u8272\\u503c\\u4e2d\\u7684\\u6700\\u5c0f\\u503c\"],[\"\\u6700\\u5927\\u503c\\uff08Max\\uff09\",\"\\u4f7f\\u7528\\u76ee\\u6807\\u8272\\u503c\\u548c\\u6e90\\u8272\\u503c\\u4e2d\\u7684\\u6700\\u5927\\u503c\"]]','混合操作的类型','','inherit','closed','closed','','213-revision-v1','','','2016-03-03 09:31:11','2016-03-03 01:31:11','',213,'http://codingcoder.com/?p=214',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (215,1,'2016-03-03 09:31:58','2016-03-03 01:31:58','[[\"\\u64cd\\u4f5c\",\"\\u4f5c\\u7528\\u63cf\\u8ff0\"],[\"\\u76f8\\u52a0\\uff08Add\\uff09\",\"\\u628a\\u6e90\\u8272\\u503c\\u548c\\u76ee\\u6807\\u8272\\u503c\\u76f8\\u52a0\"],[\"\\u76f8\\u51cf\\uff08Sub\\uff09\",\"\\u4ece\\u6e90\\u8272\\u503c\\u4e2d\\u51cf\\u53bb\\u76ee\\u6807\\u8272\\u503c\"],[\"\\u53cd\\u76f8\\u51cf\\uff08RevSub\\uff09\",\"\\u4ece\\u76ee\\u6807\\u8272\\u503c\\u4e2d\\u51cf\\u53bb\\u6e90\\u8272\\u503c\"],[\"\\u6700\\u5c0f\\u503c\\uff08Min\\uff09\",\"\\u4f7f\\u7528\\u76ee\\u6807\\u8272\\u503c\\u548c\\u6e90\\u8272\\u503c\\u4e2d\\u7684\\u6700\\u5c0f\\u503c\"],[\"\\u6700\\u5927\\u503c\\uff08Max\\uff09\",\"\\u4f7f\\u7528\\u76ee\\u6807\\u8272\\u503c\\u548c\\u6e90\\u8272\\u503c\\u4e2d\\u7684\\u6700\\u5927\\u503c\"]]','混合操作的类型','','inherit','closed','closed','','213-revision-v1','','','2016-03-03 09:31:58','2016-03-03 01:31:58','',213,'http://codingcoder.com/?p=215',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (218,1,'2016-03-03 09:38:36','2016-03-03 01:38:36','[[\"\\u7b80\\u5199\",\"\\u5177\\u4f53\\u6570\\u636e\\u7c7b\\u578b\"],[\"One\",\"<code>vec4(1.0) <\\/code>\"],[\"Zero\",\"<code>vec4(0.0)<\\/code>\"],[\"SrcAlpha\",\" <code>vec4(gl_FragColor.a)<\\/code>\"],[\"DstColor\",\" <code>pixel_color<\\/code>\"],[\"DstAlpha\",\"<code> vec4(pixel_color.a) <\\/code>\"],[\"OneMinusSrcColor\",\"<code> vec4(1.0) \\u2013 gl_FragColor <\\/code>\"],[\"OneMinusDstColor\",\" <code>vec4(1.0) \\u2013 pixel_color<\\/code>\"],[\"OneMinusDstAlpha\",\" <code>vec4(1.0 \\u2013 pixel_color.a)<\\/code>\"]]','混合因子','','inherit','closed','closed','','216-revision-v1','','','2016-03-03 09:38:36','2016-03-03 01:38:36','',216,'http://codingcoder.com/?p=218',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (220,1,'2016-03-03 09:44:33','2016-03-03 01:44:33','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\r\n\r\n在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n<hr />\r\n\r\n<h2>语法</h2>\r\n<ul>\r\n	<li>`Blend Off`：关闭混合</li>\r\n	<li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\r\n	<li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\r\n	<li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\r\n</ul>\r\n\r\n<hr />\r\n\r\n混合操作的类型\r\n[table id=2 /]\r\n\r\n<hr />\r\n\r\n<h2>混合因子</h2>\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n[table id=3 /]\r\n\r\n<hr />\r\n\r\n<h2>详细对比</h2>\r\n下面是几种常见的混合模式。\r\n<h3>1. Alpha 混合</h3>\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</pre>\r\n<h3>2. 加法混合</h3>\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<span style=\"font-size: 24px; font-weight: bold; line-height: 1.1667;\">3. 柔和相加</span>\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n<pre class=\"lang:c++ range:2 decode:true\">vec4 result =&amp;nbsp; (vec4(1.0) - pixel_color) * gl_FragColor \r\n+ vec4(1.0) * pixel_color;</pre>\r\n&nbsp;\r\n<h3>4. 相乘</h3>\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n</pre>\r\n<h3>5. 两倍相乘</h3>\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<ul>\r\n	<li>[Unity Manual - Blend](http://docs.unity3d.com/Manual/SL-Blend.html)</li>\r\n	<li>[GLSL_Programming](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency)</li>\r\n</ul>','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:44:33','2016-03-03 01:44:33','',201,'http://codingcoder.com/?p=220',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (221,1,'2016-03-03 09:46:01','2016-03-03 01:46:01','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\r\n\r\n在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n<hr />\r\n\r\n<h2>语法</h2>\r\n<ul>\r\n	<li>`Blend Off`：关闭混合</li>\r\n	<li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\r\n	<li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\r\n	<li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\r\n</ul>\r\n\r\n<hr />\r\n\r\n混合操作的类型\r\n[table id=2 /]\r\n\r\n<hr />\r\n\r\n<h2>混合因子</h2>\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n[table id=3 /]\r\n\r\n<hr />\r\n\r\n<h2>详细对比</h2>\r\n下面是几种常见的混合模式。\r\n<h3>1. Alpha 混合</h3>\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</pre>\r\n<h3>2. 加法混合</h3>\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<span style=\"font-size: 24px; font-weight: bold; line-height: 1.1667;\">3. 柔和相加</span>\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n<pre class=\"lang:c++ range:2 decode:true\">vec4 result =&amp;nbsp; (vec4(1.0) - pixel_color) * gl_FragColor \r\n+ vec4(1.0) * pixel_color;</pre>\r\n&nbsp;\r\n<h3>4. 相乘</h3>\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n</pre>\r\n<h3>5. 两倍相乘</h3>\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<ul>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\" target=\"_blank\">Unity Manual - Blend</a></li>\r\n	<li><a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency\" target=\"_blank\">GLSL_Programming</a></li>\r\n</ul>','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:46:01','2016-03-03 01:46:01','',201,'http://codingcoder.com/?p=221',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (222,1,'2016-03-03 09:48:14','2016-03-03 01:48:14','https://msdn.microsoft.com/en-us/library/z5z9kes2.aspx\n\n#hello wold','implicity operator','','inherit','closed','closed','','162-revision-v1','','','2016-03-03 09:48:14','2016-03-03 01:48:14','https://msdn.microsoft.com/en-us/library/z5z9kes2.aspx\r\n\r\n#hello wold',162,'http://codingcoder.com/?p=222',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (223,1,'2016-03-03 09:53:12','2016-03-03 01:53:12','阅读本文，可以帮助读者解决以下问题：\n\n<ul>\n<li>了解Unity 着色器（Shader）中混合模式（Blending）的语法规则</p></li>\n<li><p>详细对比不同的混合模式的混合方程式</p></li>\n</ul>\n\n<hr />\n\n<p>如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\n\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\n\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\n\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（<code>gl_FragColor</code>）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量<code>gl_FragColor</code>中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\n\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\n\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\n\n其中，<code>pixel_color</code>是已经在帧缓冲区的 RGBA 色值，<code>result</code>是混合的结果色值，也就是混合阶段的输出色值。<code>SrcFactor</code>和<code>DstFactor</code>是可配置的参数，它们都是<code>vec4</code>类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\n\n在 Unity ShaderLab 中会通过如下的语法方式来配置<code>SrcFactor</code>和<code>DstFactor</code>：\n\n<code>Blend SrcFactor DstFactor</code>\n\n<hr />\n\n<h2>语法</h2>\n\n<ul>\n    <li>`Blend Off`：关闭混合</li>\n    <li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\n    <li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\n    <li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\n</ul>\n\n<hr />\n\n混合操作的类型\n[table id=2 /]\n\n<hr />\n\n<h2>混合因子</h2>\n\n下面的属性对于混合命令中的<code>SrcFactor</code>和<code>DstFactor</code>都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当<code>BlendOp</code>使用逻辑运算时，混合因子会被忽略。\n\n[table id=3 /]\n\n<hr />\n\n<h2>详细对比</h2>\n\n下面是几种常见的混合模式。\n\n<h3>1. Alpha 混合</h3>\n\n<code>Blend SrcAlpha OneMinusSrcAlpha</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true \">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</pre>\n\n<h3>2. 加法混合</h3>\n\n<code>Blend One One</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\n</pre>\n\n&nbsp;\n\n<span style=\"font-size: 24px; font-weight: bold; line-height: 1.1667;\">3. 柔和相加</span>\n\n<code>Blend OneMinusDstColor One</code>\n\n对应方程式如下：\n\n<pre class=\"lang:c++ range:2 decode:true\">vec4 result =&amp;nbsp; (vec4(1.0) - pixel_color) * gl_FragColor \n+ vec4(1.0) * pixel_color;</pre>\n\n&nbsp;\n\n<h3>4. 相乘</h3>\n\n<code>Blend DstColor Zero</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\n</pre>\n\n<h3>5. 两倍相乘</h3>\n\n<code>Blend DstColor SrcColor</code>\n\n对应的方程式如下：\n\n<pre class=\"lang:c++ decode:true \">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\n</pre>\n\n&nbsp;\n\n<hr />\n\n参考资料：\n\n<ul>\n    <li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\" target=\"_blank\">Unity Manual - Blend</a></li>\n    <li><a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency\" target=\"_blank\">GLSL_Programming</a></li>\n</ul>','Unity 着色器中的混合模式','','inherit','closed','closed','','201-revision-v1','','','2016-03-03 09:53:12','2016-03-03 01:53:12','阅读本文，可以帮助读者解决以下问题：\r\n\r\n+ 了解Unity 着色器（Shader）中混合模式（Blending）的语法规则\r\n\r\n+ 详细对比不同的混合模式的混合方程式\r\n\r\n<hr />\r\n\r\n如果读者对混合模式不熟悉，请先阅读<a href=\"http://codingcoder.com/?p=165\" target=\"_blank\">混合模式的数学原理</a>一文，非常有益于本文的理解。\r\n\r\n在 Unity 着色器（Shader）开发中，混合（Blending）是用来制作透明对象的。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend.png\" rel=\"attachment wp-att-80\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/PipelineBlend-300x88.png\" alt=\"PipelineBlend\" width=\"300\" height=\"88\" /></a>\r\n\r\n渲染图形时，执行完所有着色器且应用所有纹理之后，就要将像素写入屏幕。混合 (Blend) 命令就是用来控制这些像素如何与已有像素混合。\r\n\r\n正如在 <a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/OpenGL_ES_2.0_Pipeline\" target=\"_blank\">OpenGL_ES_2.0_Pipeline</a> 一文中所讲的那样，片段着色器（Fragment Shader）对于每个没有被舍弃掉的片段（fragment）都计算出一个 RGBA 的颜色（`gl_FragColor`）。对于片段的处理，在<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Per-Fragment_Operations\" target=\"_blank\">Per-Fragment_Operations</a>一文中具体介绍，其中的一个步骤就是混合操作。混合操作把片段的颜色（也就是保存在变量`gl_FragColor`中的颜色）和已经在帧缓存区（framebuffer）中的对应像素的颜色做混合。因为混合操作后得到的混合颜色会作为新的帧缓存区对应像素的新的颜色值，所以在这个混合操作中，称片段色值为源色值（source color），对应像素的帧缓冲区色值为目标色值（destination color）。\r\n\r\n混合操作是一个固定的操作，你只能通过改变参数去配置它的操作结果，而不能够通过编程去改变它的行为方式。而配置混合操作是通过下面的方程式来完成的。\r\n<pre class=\"lang:default decode:true\">vec4 result = SrcFactor * gl_FragColor + DstFactor * pixel_color;</pre>\r\n其中，`pixel_color`是已经在帧缓冲区的 RGBA 色值，`result`是混合的结果色值，也就是混合阶段的输出色值。`SrcFactor`和`DstFactor`是可配置的参数，它们都是`vec4`类型的 RGBA 色值，它们会按照逐位相乘的方式同 <span class=\"lang:c++ decode:true crayon-inline \">gl_FragColor</span> 和 <span class=\"lang:c++ decode:true crayon-inline \">pixel_color</span> 相乘。\r\n\r\n在 Unity ShaderLab 中会通过如下的语法方式来配置`SrcFactor`和`DstFactor`：\r\n\r\n`Blend SrcFactor DstFactor`\r\n\r\n<hr />\r\n\r\n<h2>语法</h2>\r\n<ul>\r\n	<li>`Blend Off`：关闭混合</li>\r\n	<li>`Blend SrcFactor DstFactor`：配置和启用混合。生成的颜色乘以 `SrcFactor`。已在屏幕上的颜色乘以 `DstFactor`，然后两者相加。</li>\r\n	<li>`Blend SrcFactor DstFactor,  SrcFactorA DstFactorA`：与上述相同，但是对 Alpha 通道使用不同的因子混合。</li>\r\n	<li>`BlendOp BlendOp`：不是将混合颜色相加，而是对它们进行不同的操作。具体的操作下文介绍。</li>\r\n</ul>\r\n\r\n<hr />\r\n\r\n混合操作的类型\r\n[table id=2 /]\r\n\r\n<hr />\r\n\r\n<h2>混合因子</h2>\r\n下面的属性对于混合命令中的`SrcFactor`和`DstFactor`都适用。源颜色（Source）是指已计算的颜色，目标颜色（Destination）是指已经在屏幕上的颜色。当`BlendOp`使用逻辑运算时，混合因子会被忽略。\r\n\r\n[table id=3 /]\r\n\r\n<hr />\r\n\r\n<h2>详细对比</h2>\r\n下面是几种常见的混合模式。\r\n<h3>1. Alpha 混合</h3>\r\n`Blend SrcAlpha OneMinusSrcAlpha`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = vec4(gl_FragColor.a) * gl_FragColor + vec4(1.0 - gl_FragColor.a) * pixel_color;</pre>\r\n<h3>2. 加法混合</h3>\r\n`Blend One One`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = vec4(1.0) * gl_FragColor + vec4(1.0) * pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<span style=\"font-size: 24px; font-weight: bold; line-height: 1.1667;\">3. 柔和相加</span>\r\n\r\n`Blend OneMinusDstColor One`\r\n\r\n对应方程式如下：\r\n<pre class=\"lang:c++ range:2 decode:true\">vec4 result =&amp;nbsp; (vec4(1.0) - pixel_color) * gl_FragColor \r\n+ vec4(1.0) * pixel_color;</pre>\r\n&nbsp;\r\n<h3>4. 相乘</h3>\r\n`Blend DstColor Zero`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true\">vec4 result = pixel_color * gl_FragColor + vec4(0.0) * pixel_color;\r\n</pre>\r\n<h3>5. 两倍相乘</h3>\r\n`Blend DstColor SrcColor`\r\n\r\n对应的方程式如下：\r\n<pre class=\"lang:c++ decode:true \">vec4 result = pixel_color * gl_FragColor + gl_FragColor* pixel_color;\r\n</pre>\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n参考资料：\r\n<ul>\r\n	<li><a href=\"http://docs.unity3d.com/Manual/SL-Blend.html\" target=\"_blank\">Unity Manual - Blend</a></li>\r\n	<li><a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Transparency\" target=\"_blank\">GLSL_Programming</a></li>\r\n</ul>',201,'http://codingcoder.com/?p=223',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (224,1,'2016-03-04 14:08:03','0000-00-00 00:00:00','https://www.zhihu.com/question/21260723\n\n<ol>\n    <li>飞蛾扑火</li>\n    <li>眼见不一定为真，人的本质</li>\n    <li>光速可变，宇宙常数</li>\n    <li>人类认识的极限，知识边界</li>\n</ol>\n\n<pre id=\"best-content-27650726\" accuse=\"aContent\" class=\"\">有一个洞穴式的地下室，一条长长的通道通向外面，有微弱的阳光从通道里照进来。有一些囚徒从小就住在洞穴中，头颈和腿脚都被绑着，不能走动也不能转头，只能朝前看着洞穴后壁。在他们背后的上方，远远燃烧着一个火炬。在火炬和人的中间有一条隆起的道路，同时有一堵低墙。在这堵墙的后面，向着火光的地方，又有些别的人。他们手中拿着各色各样的假人或假兽，把它们高举过墙，让他们做出动作，这些人时而交谈，时而又不做声。于是，这些囚徒只能看见投射在他们面前的墙壁上的影像。他们将会把这些影像当作真实的东西，他们也会将回声当成影像所说的话。此时，假如有一个囚徒被解除了桎梏，被迫突然站起来，可以转头环视，他现在就可以看见事物本身了：但他们却以为他现在看到的是非本质的梦幻，最初看见的影像才是真实的。而假如有人把他从洞穴中带出来，走到阳光下面，他将会因为光线的刺激而觉得眼前金星乱蹦，以至什么也看不见。他就会恨那个把他带到阳光之下的人，认为这人使他看不见真实事物，而且给他带来了痛苦。</pre>','','','draft','open','open','','','','','2016-03-04 14:08:03','2016-03-04 06:08:03','https://www.zhihu.com/question/21260723\n<ol>\n	<li>飞蛾扑火</li>\n	<li>眼见不一定为真，人的本质</li>\n	<li>光速可变，宇宙常数</li>\n	<li>人类认识的极限，知识边界</li>\n</ol>\n<pre id=\"best-content-27650726\" accuse=\"aContent\" class=\"\">有一个洞穴式的地下室，一条长长的通道通向外面，有微弱的阳光从通道里照进来。有一些囚徒从小就住在洞穴中，头颈和腿脚都被绑着，不能走动也不能转头，只能朝前看着洞穴后壁。在他们背后的上方，远远燃烧着一个火炬。在火炬和人的中间有一条隆起的道路，同时有一堵低墙。在这堵墙的后面，向着火光的地方，又有些别的人。他们手中拿着各色各样的假人或假兽，把它们高举过墙，让他们做出动作，这些人时而交谈，时而又不做声。于是，这些囚徒只能看见投射在他们面前的墙壁上的影像。他们将会把这些影像当作真实的东西，他们也会将回声当成影像所说的话。此时，假如有一个囚徒被解除了桎梏，被迫突然站起来，可以转头环视，他现在就可以看见事物本身了：但他们却以为他现在看到的是非本质的梦幻，最初看见的影像才是真实的。而假如有人把他从洞穴中带出来，走到阳光下面，他将会因为光线的刺激而觉得眼前金星乱蹦，以至什么也看不见。他就会恨那个把他带到阳光之下的人，认为这人使他看不见真实事物，而且给他带来了痛苦。</pre>',0,'http://codingcoder.com/?p=224',0,'post','',0);
INSERT INTO `wp_posts` VALUES (225,1,'2015-10-31 18:15:04','2015-10-31 10:15:04','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-58\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif\" rel=\"attachment wp-att-59\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6-300x225.gif\" alt=\"b50ea691gw1exixlpon6rg20m80go7v6\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-59\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif\" rel=\"attachment wp-att-60\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf-300x225.gif\" alt=\"b50ea691gw1exixlqf3wug20m80gojyf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-60\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif\" rel=\"attachment wp-att-61\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d-300x225.gif\" alt=\"b50ea691gw1exixlrv9csg20m80gob0d\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-61\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif\" rel=\"attachment wp-att-62\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1-300x225.gif\" alt=\"b50ea691gw1exixltat5ug20m80godo3-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-62\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif\" rel=\"attachment wp-att-64\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt-300x225.gif\" alt=\"b50ea691gw1exixlveoovg20m80gohdt\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-64\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif\" rel=\"attachment wp-att-65\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng-300x225.gif\" alt=\"b50ea691gw1exixlwuq38g20m80go4ng\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-65\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" rel=\"attachment wp-att-66\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5-300x225.gif\" alt=\"b50ea691gw1exixlxpi3cg20m80goaj5\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-66\" /></a>','优秀交互动效集锦（一）下拉刷新动效','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e4%b8%80%ef%bc%89%e4%b8%8b%e6%8b%89%e5%88%b7%e6%96%b0%e5%8a%a8%e6%95%88','','','2016-03-06 18:07:30','2016-03-06 10:07:30','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-58\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif\" rel=\"attachment wp-att-59\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6-300x225.gif\" alt=\"b50ea691gw1exixlpon6rg20m80go7v6\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-59\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif\" rel=\"attachment wp-att-60\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf-300x225.gif\" alt=\"b50ea691gw1exixlqf3wug20m80gojyf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-60\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif\" rel=\"attachment wp-att-61\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d-300x225.gif\" alt=\"b50ea691gw1exixlrv9csg20m80gob0d\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-61\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif\" rel=\"attachment wp-att-62\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1-300x225.gif\" alt=\"b50ea691gw1exixltat5ug20m80godo3-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-62\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif\" rel=\"attachment wp-att-64\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt-300x225.gif\" alt=\"b50ea691gw1exixlveoovg20m80gohdt\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-64\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif\" rel=\"attachment wp-att-65\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng-300x225.gif\" alt=\"b50ea691gw1exixlwuq38g20m80go4ng\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-65\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" rel=\"attachment wp-att-66\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5-300x225.gif\" alt=\"b50ea691gw1exixlxpi3cg20m80goaj5\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-66\" /></a>\r\n',0,'http://codingcoder.com/?p=225',0,'post','',0);
INSERT INTO `wp_posts` VALUES (231,1,'2016-03-04 21:13:05','2016-03-04 13:13:05','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n[WPGP gif_id=\"59\" width=\"600\"]\n\n[WPGP gif_id=\"58\" width=\"600\"]\n\n[WPGP gif_id=\"60\" width=\"600\"]\n\n[WPGP gif_id=\"61\" width=\"600\"]\n\n[WPGP gif_id=\"62\" width=\"600\"]\n\n[WPGP gif_id=\"64\" width=\"600\"]\n\n[WPGP gif_id=\"65\" width=\"600\"]\n\n[WPGP gif_id=\"66\" width=\"600\"]\n\n&nbsp;','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-04 21:13:05','2016-03-04 13:13:05','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n[WPGP gif_id=\"59\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"58\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"60\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"61\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"62\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"64\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"65\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"66\" width=\"600\"]\r\n\r\n&nbsp;',225,'http://codingcoder.com/?p=231',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (230,1,'2016-03-04 21:10:58','2016-03-04 13:10:58','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n[WPGP gif_id=\"59\" width=\"600\"]\n\n[WPGP gif_id=\"58\" width=\"600\"]\n\n[WPGP gif_id=\"60\" width=\"600\"]\n\n&nbsp;\n\n[WPGP gif_id=\"61\" width=\"600\"]\n\n[WPGP gif_id=\"62\" width=\"600\"]\n\n[WPGP gif_id=\"64\" width=\"600\"]\n\n&nbsp;\n\n<img src=\"/content/images/2015/10/.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/ .gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" alt=\"\" />\n\n&nbsp;','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-04 21:10:58','2016-03-04 13:10:58','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n[WPGP gif_id=\"59\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"58\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"60\" width=\"600\"]\r\n\r\n&nbsp;\r\n\r\n[WPGP gif_id=\"61\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"62\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"64\" width=\"600\"]\r\n\r\n&nbsp;\r\n\r\n![](/content/images/2015/10/.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif)\r\n![](/content/images/2015/10/ .gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif)\r\n\r\n&nbsp;',225,'http://codingcoder.com/?p=230',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (229,1,'2016-03-04 21:05:13','2016-03-04 13:05:13','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n[WPGP gif_id=\"59\" width=\"600\"]\n\n[WPGP gif_id=\"58\" width=\"600\"]\n\n[WPGP gif_id=\"60\" width=\"600\"]\n\n<img src=\"/content/images/2015/10/.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" alt=\"\" />\n\n&nbsp;','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-04 21:05:13','2016-03-04 13:05:13','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n[WPGP gif_id=\"59\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"58\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"60\" width=\"600\"]\r\n\r\n![](/content/images/2015/10/.gif)\r\n\r\n![](/content/images/2015/10/.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif)\r\n\r\n&nbsp;',225,'http://codingcoder.com/?p=229',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (228,1,'2016-03-04 21:03:30','2016-03-04 13:03:30','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n[WPGP gif_id=\"59\" width=\"600\"]\n\n[WPGP gif_id=\"58\" width=\"600\"]\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlpon6rg20m80go7v6.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlqf3wug20m80gojyf.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" alt=\"\" />\n\n&nbsp;','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-04 21:03:30','2016-03-04 13:03:30','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n[WPGP gif_id=\"59\" width=\"600\"]\r\n\r\n[WPGP gif_id=\"58\" width=\"600\"]\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlpon6rg20m80go7v6.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlqf3wug20m80gojyf.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif)\r\n\r\n&nbsp;',225,'http://codingcoder.com/?p=228',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (226,1,'2016-03-04 20:33:42','2016-03-04 12:33:42','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>\n  要么特别，要么好玩儿，要么特别好玩儿。\n</blockquote>\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlntaq4g20b408c7wn.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlpon6rg20m80go7v6.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlqf3wug20m80gojyf.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" alt=\"\" />\n\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-04 20:33:42','2016-03-04 12:33:42','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n\r\n> 要么特别，要么好玩儿，要么特别好玩儿。\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlntaq4g20b408c7wn.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlpon6rg20m80go7v6.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlqf3wug20m80gojyf.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif)\r\n\r\n\r\n\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()',225,'http://codingcoder.com/?p=226',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (227,1,'2016-03-04 20:44:34','2016-03-04 12:44:34','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n&nbsp;\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img class=\"alignnone size-medium wp-image-58\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" /></a>\n\n[WPGP gif_id=\"59\" width=\"600\"]\n\n<img src=\"/content/images/2015/10/.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlpon6rg20m80go7v6.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlqf3wug20m80gojyf.gif\" alt=\"\" />\n\n<img src=\"/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" alt=\"\" />\n\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />\n<img src=\"\" alt=\"\" />','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-04 20:44:34','2016-03-04 12:44:34','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n&nbsp;\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img class=\"alignnone size-medium wp-image-58\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" /></a>\r\n\r\n[WPGP gif_id=\"59\" width=\"600\"]\r\n\r\n![](/content/images/2015/10/.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlpon6rg20m80go7v6.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlqf3wug20m80gojyf.gif)\r\n\r\n![](/content/images/2015/10/b50ea691gw1exixlrv9csg20m80gob0d.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixltat5ug20m80godo3-1.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlveoovg20m80gohdt.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlwuq38g20m80go4ng.gif)\r\n![](/content/images/2015/10/b50ea691gw1exixlxpi3cg20m80goaj5.gif)\r\n\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()\r\n![]()',225,'http://codingcoder.com/?p=227',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (232,1,'2016-01-30 20:54:28','2016-01-30 12:54:28','在 2D 游戏中如何实现具有视差效果的背景呢？这就是今天我要和大家分享的话题，也就是如何制作一个 Parallax Background System。\n\n视差效果大家肯定都见过，很多跑酷类的游戏都有。就是你后面的背景可能有不同的几个层次，比如，远处的有云彩，然后近一点的有山，再近一点的有树等等，这些不同远近的物体在游戏中的主角移动时，会以不同的速率相应的移动，远一点的移动的会慢一点，近处的移动的快一点。这样不同的移动速率就会给我们的眼睛造成一种视差效果。\n\n要实现一个 Parallax Background System 其实很容易，我这里针对两种不同的需求，分别提供不同的解决思路。\n\n第一种需求是，游戏的背景比较简单，可能就是两三个不同的图片来回的循环使用，不会出现不同的背景场景都不一样的情况。\n\n第二种需求相对比较复杂，是背景场景的每个地方都基本上不一样，不能像第一种需求那样可以使用几张不同的图片就可以循环实现所有的背景场景了。更复杂一点，可能不同位置的背景还要加一些不同的灯光效果等等。\n\n对于第一种需求，基本思路就是通过设计一个循环利用机制来实现一个无限的背景。\n\n比如，最远的背景图层可以用2张图片拼接在一起完成，当第一张图片移出视野范围时，这是紧跟着第二张图片慢慢的出现在视野范围中，同时把第一张图片拼接到第二张图片的后面。以此类推，就可以实现无线循环的背景图层了。\n\n上面我们解决了无限循环的问题，下面我们再来考虑视差的问题。\n\n其实也很简单，给每个背景层添加一个 Component，在这个 Component 中提供一个 Speed 的参数，让不同的背景层按照你提供的不同的 Speed 进行移动。这样我们就解决了视差的问题。\n\n一切看上去都很容易啊，但是我们再来仔细想想这个方案有什么问题呢。\n\n最大的问题就是我们要仔细的去调整不同层移动的那个 Speed，而且还只能在游戏运行的时候去调整。当层次一旦变多时，要达到一个比较好的视差效果需要花费很多精力去优化这个 Speed，这能再运行时去调整 Speed 更是加剧了这种不方便性。\n\n那么怎样才能解决这个问题呢？首先，我想要在 Editor 模式下就可以去调整这个 Speed，这样就非常的方便。我可以通过移动 Camera 的方式去模拟主角的移动，看看哪一层的 Speed 是不是合适。\n\n<hr />\n\n第二种需求不会有无限循环的问题，因为场景的每个地方都不相同。而且由于场景中的元素非常多，所以你就需要保证第5层的一个元素和第2层的一个元素的移动速率非常的匹配，甚至当你新加一个新的背景层时，你需要保证所有的层的 Speed 都要重新调整到一个完美的视差状态上。这时候你就会发现，能够在 Editor 模式下面实时预览和修改视差效果是多么的重要。\n\n对于第二种需求，可能你还需要考虑到主角旋转时的视差效果。比如，当主角抬头或者低头时，背景图层是不是也要有视差效果呢？\n\n这篇文章的思路是根据自己的思考，并且参考了下面的文章，对原文作者表示感谢。原文中有一份简单的示意代码，感兴趣的读者可以看一下。\n\n我会晚些时候抽空给出一份更详细的 Demo 的代码，来具体演示上面所讨论的具体解决方案。\n\n<hr />\n\n参考资料：\n\n<blockquote>\n  <a href=\"http://www.gamasutra.com/blogs/DavidDionPaquet/20140601/218766/Creating_a_parallax_system_in_Unity3D_is_harder_than_it_seems.php\">Creating a parallax system in Unity3D is harder than it seems</a>\n</blockquote>','Unity 2D Parallax Background System','','publish','open','open','','unity-2d-parallax-background-system','','','2016-03-06 15:06:42','2016-03-06 07:06:42','在 2D 游戏中如何实现具有视差效果的背景呢？这就是今天我要和大家分享的话题，也就是如何制作一个 Parallax Background System。\r\n\r\n视差效果大家肯定都见过，很多跑酷类的游戏都有。就是你后面的背景可能有不同的几个层次，比如，远处的有云彩，然后近一点的有山，再近一点的有树等等，这些不同远近的物体在游戏中的主角移动时，会以不同的速率相应的移动，远一点的移动的会慢一点，近处的移动的快一点。这样不同的移动速率就会给我们的眼睛造成一种视差效果。\r\n\r\n要实现一个 Parallax Background System 其实很容易，我这里针对两种不同的需求，分别提供不同的解决思路。\r\n\r\n第一种需求是，游戏的背景比较简单，可能就是两三个不同的图片来回的循环使用，不会出现不同的背景场景都不一样的情况。\r\n\r\n第二种需求相对比较复杂，是背景场景的每个地方都基本上不一样，不能像第一种需求那样可以使用几张不同的图片就可以循环实现所有的背景场景了。更复杂一点，可能不同位置的背景还要加一些不同的灯光效果等等。\r\n\r\n对于第一种需求，基本思路就是通过设计一个循环利用机制来实现一个无限的背景。\r\n\r\n比如，最远的背景图层可以用2张图片拼接在一起完成，当第一张图片移出视野范围时，这是紧跟着第二张图片慢慢的出现在视野范围中，同时把第一张图片拼接到第二张图片的后面。以此类推，就可以实现无线循环的背景图层了。\r\n\r\n上面我们解决了无限循环的问题，下面我们再来考虑视差的问题。\r\n\r\n其实也很简单，给每个背景层添加一个 Component，在这个 Component 中提供一个 Speed 的参数，让不同的背景层按照你提供的不同的 Speed 进行移动。这样我们就解决了视差的问题。\r\n\r\n一切看上去都很容易啊，但是我们再来仔细想想这个方案有什么问题呢。\r\n\r\n最大的问题就是我们要仔细的去调整不同层移动的那个 Speed，而且还只能在游戏运行的时候去调整。当层次一旦变多时，要达到一个比较好的视差效果需要花费很多精力去优化这个 Speed，这能再运行时去调整 Speed 更是加剧了这种不方便性。\r\n\r\n那么怎样才能解决这个问题呢？首先，我想要在 Editor 模式下就可以去调整这个 Speed，这样就非常的方便。我可以通过移动 Camera 的方式去模拟主角的移动，看看哪一层的 Speed 是不是合适。\r\n\r\n---\r\n\r\n第二种需求不会有无限循环的问题，因为场景的每个地方都不相同。而且由于场景中的元素非常多，所以你就需要保证第5层的一个元素和第2层的一个元素的移动速率非常的匹配，甚至当你新加一个新的背景层时，你需要保证所有的层的 Speed 都要重新调整到一个完美的视差状态上。这时候你就会发现，能够在 Editor 模式下面实时预览和修改视差效果是多么的重要。\r\n\r\n对于第二种需求，可能你还需要考虑到主角旋转时的视差效果。比如，当主角抬头或者低头时，背景图层是不是也要有视差效果呢？\r\n\r\n这篇文章的思路是根据自己的思考，并且参考了下面的文章，对原文作者表示感谢。原文中有一份简单的示意代码，感兴趣的读者可以看一下。\r\n\r\n我会晚些时候抽空给出一份更详细的 Demo 的代码，来具体演示上面所讨论的具体解决方案。\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n> [Creating a parallax system in Unity3D is harder than it seems](http://www.gamasutra.com/blogs/DavidDionPaquet/20140601/218766/Creating_a_parallax_system_in_Unity3D_is_harder_than_it_seems.php) \r\n\r\n',0,'http://codingcoder.com/?p=232',0,'post','',0);
INSERT INTO `wp_posts` VALUES (233,1,'2016-03-06 14:54:28','2016-03-06 06:54:28','在 2D 游戏中如何实现具有视差效果的背景呢？这就是今天我要和大家分享的话题，也就是如何制作一个 Parallax Background System。\n\n视差效果大家肯定都见过，很多跑酷类的游戏都有。就是你后面的背景可能有不同的几个层次，比如，远处的有云彩，然后近一点的有山，再近一点的有树等等，这些不同远近的物体在游戏中的主角移动时，会以不同的速率相应的移动，远一点的移动的会慢一点，近处的移动的快一点。这样不同的移动速率就会给我们的眼睛造成一种视差效果。\n\n要实现一个 Parallax Background System 其实很容易，我这里针对两种不同的需求，分别提供不同的解决思路。\n\n第一种需求是，游戏的背景比较简单，可能就是两三个不同的图片来回的循环使用，不会出现不同的背景场景都不一样的情况。\n\n第二种需求相对比较复杂，是背景场景的每个地方都基本上不一样，不能像第一种需求那样可以使用几张不同的图片就可以循环实现所有的背景场景了。更复杂一点，可能不同位置的背景还要加一些不同的灯光效果等等。\n\n对于第一种需求，基本思路就是通过设计一个循环利用机制来实现一个无限的背景。\n\n比如，最远的背景图层可以用2张图片拼接在一起完成，当第一张图片移出视野范围时，这是紧跟着第二张图片慢慢的出现在视野范围中，同时把第一张图片拼接到第二张图片的后面。以此类推，就可以实现无线循环的背景图层了。\n\n上面我们解决了无限循环的问题，下面我们再来考虑视差的问题。\n\n其实也很简单，给每个背景层添加一个 Component，在这个 Component 中提供一个 Speed 的参数，让不同的背景层按照你提供的不同的 Speed 进行移动。这样我们就解决了视差的问题。\n\n一切看上去都很容易啊，但是我们再来仔细想想这个方案有什么问题呢。\n\n最大的问题就是我们要仔细的去调整不同层移动的那个 Speed，而且还只能在游戏运行的时候去调整。当层次一旦变多时，要达到一个比较好的视差效果需要花费很多精力去优化这个 Speed，这能再运行时去调整 Speed 更是加剧了这种不方便性。\n\n那么怎样才能解决这个问题呢？首先，我想要在 Editor 模式下就可以去调整这个 Speed，这样就非常的方便。我可以通过移动 Camera 的方式去模拟主角的移动，看看哪一层的 Speed 是不是合适。\n\n<hr />\n\n第二种需求不会有无限循环的问题，因为场景的每个地方都不相同。而且由于场景中的元素非常多，所以你就需要保证第5层的一个元素和第2层的一个元素的移动速率非常的匹配，甚至当你新加一个新的背景层时，你需要保证所有的层的 Speed 都要重新调整到一个完美的视差状态上。这时候你就会发现，能够在 Editor 模式下面实时预览和修改视差效果是多么的重要。\n\n对于第二种需求，可能你还需要考虑到主角旋转时的视差效果。比如，当主角抬头或者低头时，背景图层是不是也要有视差效果呢？\n\n这篇文章的思路是根据自己的思考，并且参考了下面的文章，对原文作者表示感谢。原文中有一份简单的示意代码，感兴趣的读者可以看一下。\n\n我会晚些时候抽空给出一份更详细的 Demo 的代码，来具体演示上面所讨论的具体解决方案。\n\n<hr />\n\n参考资料：\n\n<blockquote>\n  <a href=\"http://www.gamasutra.com/blogs/DavidDionPaquet/20140601/218766/Creating_a_parallax_system_in_Unity3D_is_harder_than_it_seems.php\">Creating a parallax system in Unity3D is harder than it seems</a>\n</blockquote>','Unity 2D Parallax Background System','','inherit','closed','closed','','232-revision-v1','','','2016-03-06 14:54:28','2016-03-06 06:54:28','在 2D 游戏中如何实现具有视差效果的背景呢？这就是今天我要和大家分享的话题，也就是如何制作一个 Parallax Background System。\r\n\r\n视差效果大家肯定都见过，很多跑酷类的游戏都有。就是你后面的背景可能有不同的几个层次，比如，远处的有云彩，然后近一点的有山，再近一点的有树等等，这些不同远近的物体在游戏中的主角移动时，会以不同的速率相应的移动，远一点的移动的会慢一点，近处的移动的快一点。这样不同的移动速率就会给我们的眼睛造成一种视差效果。\r\n\r\n要实现一个 Parallax Background System 其实很容易，我这里针对两种不同的需求，分别提供不同的解决思路。\r\n\r\n第一种需求是，游戏的背景比较简单，可能就是两三个不同的图片来回的循环使用，不会出现不同的背景场景都不一样的情况。\r\n\r\n第二种需求相对比较复杂，是背景场景的每个地方都基本上不一样，不能像第一种需求那样可以使用几张不同的图片就可以循环实现所有的背景场景了。更复杂一点，可能不同位置的背景还要加一些不同的灯光效果等等。\r\n\r\n对于第一种需求，基本思路就是通过设计一个循环利用机制来实现一个无限的背景。\r\n\r\n比如，最远的背景图层可以用2张图片拼接在一起完成，当第一张图片移出视野范围时，这是紧跟着第二张图片慢慢的出现在视野范围中，同时把第一张图片拼接到第二张图片的后面。以此类推，就可以实现无线循环的背景图层了。\r\n\r\n上面我们解决了无限循环的问题，下面我们再来考虑视差的问题。\r\n\r\n其实也很简单，给每个背景层添加一个 Component，在这个 Component 中提供一个 Speed 的参数，让不同的背景层按照你提供的不同的 Speed 进行移动。这样我们就解决了视差的问题。\r\n\r\n一切看上去都很容易啊，但是我们再来仔细想想这个方案有什么问题呢。\r\n\r\n最大的问题就是我们要仔细的去调整不同层移动的那个 Speed，而且还只能在游戏运行的时候去调整。当层次一旦变多时，要达到一个比较好的视差效果需要花费很多精力去优化这个 Speed，这能再运行时去调整 Speed 更是加剧了这种不方便性。\r\n\r\n那么怎样才能解决这个问题呢？首先，我想要在 Editor 模式下就可以去调整这个 Speed，这样就非常的方便。我可以通过移动 Camera 的方式去模拟主角的移动，看看哪一层的 Speed 是不是合适。\r\n\r\n---\r\n\r\n第二种需求不会有无限循环的问题，因为场景的每个地方都不相同。而且由于场景中的元素非常多，所以你就需要保证第5层的一个元素和第2层的一个元素的移动速率非常的匹配，甚至当你新加一个新的背景层时，你需要保证所有的层的 Speed 都要重新调整到一个完美的视差状态上。这时候你就会发现，能够在 Editor 模式下面实时预览和修改视差效果是多么的重要。\r\n\r\n对于第二种需求，可能你还需要考虑到主角旋转时的视差效果。比如，当主角抬头或者低头时，背景图层是不是也要有视差效果呢？\r\n\r\n这篇文章的思路是根据自己的思考，并且参考了下面的文章，对原文作者表示感谢。原文中有一份简单的示意代码，感兴趣的读者可以看一下。\r\n\r\n我会晚些时候抽空给出一份更详细的 Demo 的代码，来具体演示上面所讨论的具体解决方案。\r\n\r\n---\r\n\r\n参考资料：\r\n\r\n> [Creating a parallax system in Unity3D is harder than it seems](http://www.gamasutra.com/blogs/DavidDionPaquet/20140601/218766/Creating_a_parallax_system_in_Unity3D_is_harder_than_it_seems.php) \r\n\r\n',232,'http://codingcoder.com/?p=233',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (234,1,'2015-10-31 15:11:44','2015-10-31 07:11:44','感谢网友<a href=\"http://weibo.com/tbxark?from=usercardnew\">TBXark</a>实现的 <a href=\"https://github.com/TBXark/TKRubberIndicator\">Page Control github</a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>','优秀交互动效集锦（二）Page Control','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e4%ba%8c%ef%bc%89page-control','','','2016-03-06 17:34:30','2016-03-06 09:34:30','感谢网友[TBXark](http://weibo.com/tbxark?from=usercardnew)实现的 [Page Control github](https://github.com/TBXark/TKRubberIndicator)\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>\r\n',0,'http://codingcoder.com/?p=234',0,'post','',0);
INSERT INTO `wp_posts` VALUES (236,1,'2016-03-06 15:11:41','2016-03-06 07:11:41','感谢网友<a href=\"http://weibo.com/tbxark?from=usercardnew\">TBXark</a>实现的 <a href=\"https://github.com/TBXark/TKRubberIndicator\">Page Control github</a>\n\n[WPGP gif_id=\"19\" width=\"600\"]\n\n[WPGP gif_id=\"21\" width=\"600\"]','优秀交互动效集锦（二）Page Control','','inherit','closed','closed','','234-revision-v1','','','2016-03-06 15:11:41','2016-03-06 07:11:41','感谢网友[TBXark](http://weibo.com/tbxark?from=usercardnew)实现的 [Page Control github](https://github.com/TBXark/TKRubberIndicator)\r\n\r\n\r\n[WPGP gif_id=\"19\" width=\"600\"]\r\n\r\n\r\n[WPGP gif_id=\"21\" width=\"600\"]\r\n\r\n',234,'http://codingcoder.com/?p=236',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (235,1,'2016-03-06 15:10:33','2016-03-06 07:10:33','感谢网友<a href=\"http://weibo.com/tbxark?from=usercardnew\">TBXark</a>实现的 <a href=\"https://github.com/TBXark/TKRubberIndicator\">Page Control github</a>\n\n<img src=\"/content/images/2015/10/686272bdgw1exgnhdemmyg20m80gok2q-1.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/686272bdgw1exgnhfre88g208e0f6dhm.gif\" alt=\"\" />','优秀交互动效集锦（二）Page Control','','inherit','closed','closed','','234-revision-v1','','','2016-03-06 15:10:33','2016-03-06 07:10:33','感谢网友[TBXark](http://weibo.com/tbxark?from=usercardnew)实现的 [Page Control github](https://github.com/TBXark/TKRubberIndicator)\r\n\r\n![](/content/images/2015/10/686272bdgw1exgnhdemmyg20m80gok2q-1.gif)\r\n![](/content/images/2015/10/686272bdgw1exgnhfre88g208e0f6dhm.gif)\r\n',234,'http://codingcoder.com/?p=235',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (237,1,'2016-03-06 17:34:17','2016-03-06 09:34:17','感谢网友<a href=\"http://weibo.com/tbxark?from=usercardnew\">TBXark</a>实现的 <a href=\"https://github.com/TBXark/TKRubberIndicator\">Page Control github</a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>','优秀交互动效集锦（二）Page Control','','inherit','closed','closed','','234-autosave-v1','','','2016-03-06 17:34:17','2016-03-06 09:34:17','',234,'http://codingcoder.com/?p=237',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (239,1,'2016-03-06 17:34:30','2016-03-06 09:34:30','感谢网友<a href=\"http://weibo.com/tbxark?from=usercardnew\">TBXark</a>实现的 <a href=\"https://github.com/TBXark/TKRubberIndicator\">Page Control github</a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>','优秀交互动效集锦（二）Page Control','','inherit','closed','closed','','234-revision-v1','','','2016-03-06 17:34:30','2016-03-06 09:34:30','感谢网友[TBXark](http://weibo.com/tbxark?from=usercardnew)实现的 [Page Control github](https://github.com/TBXark/TKRubberIndicator)\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>\r\n',234,'http://codingcoder.com/?p=239',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (238,1,'2016-03-06 15:21:58','2016-03-06 07:21:58','感谢网友<a href=\"http://weibo.com/tbxark?from=usercardnew\">TBXark</a>实现的 <a href=\"https://github.com/TBXark/TKRubberIndicator\">Page Control github</a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1.gif\" rel=\"attachment wp-att-19\"><img class=\"alignnone size-medium wp-image-19\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q-1\" width=\"300\" height=\"225\" /></a>','优秀交互动效集锦（二）Page Control','','inherit','closed','closed','','234-revision-v1','','','2016-03-06 15:21:58','2016-03-06 07:21:58','感谢网友[TBXark](http://weibo.com/tbxark?from=usercardnew)实现的 [Page Control github](https://github.com/TBXark/TKRubberIndicator)\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm.gif\" rel=\"attachment wp-att-21\"><img class=\"alignnone size-medium wp-image-21\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhfre88g208e0f6dhm-166x300.gif\" alt=\"686272bdgw1exgnhfre88g208e0f6dhm\" width=\"166\" height=\"300\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q.gif\" rel=\"attachment wp-att-20\"><img class=\"alignnone size-medium wp-image-20\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q\" width=\"300\" height=\"225\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1.gif\" rel=\"attachment wp-att-19\"><img class=\"alignnone size-medium wp-image-19\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/686272bdgw1exgnhdemmyg20m80gok2q-1-300x225.gif\" alt=\"686272bdgw1exgnhdemmyg20m80gok2q-1\" width=\"300\" height=\"225\" /></a>',234,'http://codingcoder.com/?p=238',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (240,1,'2015-10-31 17:35:46','2015-10-31 09:35:46','<blockquote>\n  Loading条如何设计才能吸引住用户，让他们感觉不烦闷？研究显示，用户等待Loading的时间临界值为8秒，除非能在这个页面获得一些信息，否则就会关闭或跳转到其他页面。\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif\" rel=\"attachment wp-att-11\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn-300x244.gif\" alt=\"5657d033jw1exetq9dd5vg20b4091gqn\" width=\"300\" height=\"244\" class=\"alignnone size-medium wp-image-11\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif\" rel=\"attachment wp-att-12\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq-300x264.gif\" alt=\"5657d033jw1exetq9fjgsg20b409stbq\" width=\"300\" height=\"264\" class=\"alignnone size-medium wp-image-12\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x.gif\" rel=\"attachment wp-att-13\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x-300x225.gif\" alt=\"5657d033jw1exetq9if07g20b408cq8x\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-13\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a.gif\" rel=\"attachment wp-att-14\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a-300x169.gif\" alt=\"5657d033jw1exetq9nqspg20b406978a\" width=\"300\" height=\"169\" class=\"alignnone size-medium wp-image-14\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif\" rel=\"attachment wp-att-15\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd-300x225.gif\" alt=\"5657d033jw1exetq9p71vg20b408cdgd\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-15\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g.gif\" rel=\"attachment wp-att-16\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g-300x225.gif\" alt=\"5657d033jw1exetq9sretg20b408c46g\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-16\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif\" rel=\"attachment wp-att-17\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy-300x225.gif\" alt=\"5657d033jw1exetqa8svmg20b408cgwy\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-17\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c.gif\" rel=\"attachment wp-att-18\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c-300x225.gif\" alt=\"5657d033jw1exetqaawlfg20b408c10c\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-18\" /></a>','优秀交互动效集锦（三）Loading动效','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e4%b8%89%ef%bc%89loading%e5%8a%a8%e6%95%88','','','2016-03-06 17:40:50','2016-03-06 09:40:50','> Loading条如何设计才能吸引住用户，让他们感觉不烦闷？研究显示，用户等待Loading的时间临界值为8秒，除非能在这个页面获得一些信息，否则就会关闭或跳转到其他页面。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif\" rel=\"attachment wp-att-11\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn-300x244.gif\" alt=\"5657d033jw1exetq9dd5vg20b4091gqn\" width=\"300\" height=\"244\" class=\"alignnone size-medium wp-image-11\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif\" rel=\"attachment wp-att-12\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq-300x264.gif\" alt=\"5657d033jw1exetq9fjgsg20b409stbq\" width=\"300\" height=\"264\" class=\"alignnone size-medium wp-image-12\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x.gif\" rel=\"attachment wp-att-13\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x-300x225.gif\" alt=\"5657d033jw1exetq9if07g20b408cq8x\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-13\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a.gif\" rel=\"attachment wp-att-14\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a-300x169.gif\" alt=\"5657d033jw1exetq9nqspg20b406978a\" width=\"300\" height=\"169\" class=\"alignnone size-medium wp-image-14\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif\" rel=\"attachment wp-att-15\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd-300x225.gif\" alt=\"5657d033jw1exetq9p71vg20b408cdgd\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-15\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g.gif\" rel=\"attachment wp-att-16\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g-300x225.gif\" alt=\"5657d033jw1exetq9sretg20b408c46g\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-16\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif\" rel=\"attachment wp-att-17\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy-300x225.gif\" alt=\"5657d033jw1exetqa8svmg20b408cgwy\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-17\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c.gif\" rel=\"attachment wp-att-18\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c-300x225.gif\" alt=\"5657d033jw1exetqaawlfg20b408c10c\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-18\" /></a>\r\n\r\n\r\n',0,'http://codingcoder.com/?p=240',0,'post','',0);
INSERT INTO `wp_posts` VALUES (241,1,'2016-03-06 17:35:45','2016-03-06 09:35:45','<blockquote>\n  Loading条如何设计才能吸引住用户，让他们感觉不烦闷？研究显示，用户等待Loading的时间临界值为8秒，除非能在这个页面获得一些信息，否则就会关闭或跳转到其他页面。\n</blockquote>\n\n<img src=\"/content/images/2015/10/5657d033jw1exetq9dd5vg20b4091gqn.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetq9fjgsg20b409stbq.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetq9if07g20b408cq8x.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetq9nqspg20b406978a.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetq9p71vg20b408cdgd.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetq9sretg20b408c46g.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetqa8svmg20b408cgwy.gif\" alt=\"\" />\n<img src=\"/content/images/2015/10/5657d033jw1exetqaawlfg20b408c10c.gif\" alt=\"\" />','优秀交互动效集锦（三）Loading动效','','inherit','closed','closed','','240-revision-v1','','','2016-03-06 17:35:45','2016-03-06 09:35:45','> Loading条如何设计才能吸引住用户，让他们感觉不烦闷？研究显示，用户等待Loading的时间临界值为8秒，除非能在这个页面获得一些信息，否则就会关闭或跳转到其他页面。\r\n\r\n![](/content/images/2015/10/5657d033jw1exetq9dd5vg20b4091gqn.gif)\r\n![](/content/images/2015/10/5657d033jw1exetq9fjgsg20b409stbq.gif)\r\n![](/content/images/2015/10/5657d033jw1exetq9if07g20b408cq8x.gif)\r\n![](/content/images/2015/10/5657d033jw1exetq9nqspg20b406978a.gif)\r\n![](/content/images/2015/10/5657d033jw1exetq9p71vg20b408cdgd.gif)\r\n![](/content/images/2015/10/5657d033jw1exetq9sretg20b408c46g.gif)\r\n![](/content/images/2015/10/5657d033jw1exetqa8svmg20b408cgwy.gif)\r\n![](/content/images/2015/10/5657d033jw1exetqaawlfg20b408c10c.gif)\r\n\r\n',240,'http://codingcoder.com/?p=241',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (242,1,'2016-03-06 17:40:30','2016-03-06 09:40:30','<blockquote>\n  Loading条如何设计才能吸引住用户，让他们感觉不烦闷？研究显示，用户等待Loading的时间临界值为8秒，除非能在这个页面获得一些信息，否则就会关闭或跳转到其他页面。\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif\" rel=\"attachment wp-att-11\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn-300x244.gif\" alt=\"5657d033jw1exetq9dd5vg20b4091gqn\" width=\"300\" height=\"244\" class=\"alignnone size-medium wp-image-11\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif\" rel=\"attachment wp-att-12\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq-300x264.gif\" alt=\"5657d033jw1exetq9fjgsg20b409stbq\" width=\"300\" height=\"264\" class=\"alignnone size-medium wp-image-12\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x.gif\" rel=\"attachment wp-att-13\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x-300x225.gif\" alt=\"5657d033jw1exetq9if07g20b408cq8x\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-13\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a.gif\" rel=\"attachment wp-att-14\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a-300x169.gif\" alt=\"5657d033jw1exetq9nqspg20b406978a\" width=\"300\" height=\"169\" class=\"alignnone size-medium wp-image-14\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif\" rel=\"attachment wp-att-15\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd-300x225.gif\" alt=\"5657d033jw1exetq9p71vg20b408cdgd\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-15\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g.gif\" rel=\"attachment wp-att-16\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g-300x225.gif\" alt=\"5657d033jw1exetq9sretg20b408c46g\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-16\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif\" rel=\"attachment wp-att-17\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy-300x225.gif\" alt=\"5657d033jw1exetqa8svmg20b408cgwy\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-17\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c.gif\" rel=\"attachment wp-att-18\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c-300x225.gif\" alt=\"5657d033jw1exetqaawlfg20b408c10c\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-18\" /></a>','优秀交互动效集锦（三）Loading动效','','inherit','closed','closed','','240-revision-v1','','','2016-03-06 17:40:30','2016-03-06 09:40:30','> Loading条如何设计才能吸引住用户，让他们感觉不烦闷？研究显示，用户等待Loading的时间临界值为8秒，除非能在这个页面获得一些信息，否则就会关闭或跳转到其他页面。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn.gif\" rel=\"attachment wp-att-11\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9dd5vg20b4091gqn-300x244.gif\" alt=\"5657d033jw1exetq9dd5vg20b4091gqn\" width=\"300\" height=\"244\" class=\"alignnone size-medium wp-image-11\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq.gif\" rel=\"attachment wp-att-12\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9fjgsg20b409stbq-300x264.gif\" alt=\"5657d033jw1exetq9fjgsg20b409stbq\" width=\"300\" height=\"264\" class=\"alignnone size-medium wp-image-12\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x.gif\" rel=\"attachment wp-att-13\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9if07g20b408cq8x-300x225.gif\" alt=\"5657d033jw1exetq9if07g20b408cq8x\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-13\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a.gif\" rel=\"attachment wp-att-14\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9nqspg20b406978a-300x169.gif\" alt=\"5657d033jw1exetq9nqspg20b406978a\" width=\"300\" height=\"169\" class=\"alignnone size-medium wp-image-14\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd.gif\" rel=\"attachment wp-att-15\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9p71vg20b408cdgd-300x225.gif\" alt=\"5657d033jw1exetq9p71vg20b408cdgd\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-15\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g.gif\" rel=\"attachment wp-att-16\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetq9sretg20b408c46g-300x225.gif\" alt=\"5657d033jw1exetq9sretg20b408c46g\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-16\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy.gif\" rel=\"attachment wp-att-17\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqa8svmg20b408cgwy-300x225.gif\" alt=\"5657d033jw1exetqa8svmg20b408cgwy\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-17\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c.gif\" rel=\"attachment wp-att-18\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/5657d033jw1exetqaawlfg20b408c10c-300x225.gif\" alt=\"5657d033jw1exetqaawlfg20b408c10c\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-18\" /></a>\r\n\r\n\r\n',240,'http://codingcoder.com/?p=242',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (243,1,'2015-10-31 17:45:37','2015-10-31 09:45:37','<blockquote>\n  如丝般顺滑\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif\" rel=\"attachment wp-att-47\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq-300x225.gif\" alt=\"69b7d63agw1ewzw2h0tqig20c8096kjq\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-47\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif\" rel=\"attachment wp-att-43\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1-300x225.gif\" alt=\"69b7d63agw1ewzw24gw5zg20c80964qp-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-43\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif\" rel=\"attachment wp-att-49\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2kh819g20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-49\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif\" rel=\"attachment wp-att-46\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv-300x225.gif\" alt=\"69b7d63agw1ewzw2555ggg20c8096abv\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-46\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif\" rel=\"attachment wp-att-42\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky-300x225.gif\" alt=\"69b7d63agw1ewzw227mwcg20c80961ky\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-42\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif\" rel=\"attachment wp-att-50\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94-300x225.gif\" alt=\"69b7d63agw1ewzw2lkkw2g20c8096n94\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-50\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif\" rel=\"attachment wp-att-51\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2o0idng20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-51\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif\" rel=\"attachment wp-att-39\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87-300x149.gif\" alt=\"69b7d63agw1ewzvomh0y6g20c8062e87\" width=\"300\" height=\"149\" class=\"alignnone size-medium wp-image-39\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif\" rel=\"attachment wp-att-40\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1-300x225.gif\" alt=\"69b7d63agw1ewzw1xq2v0g20b408ckjm-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-40\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif\" rel=\"attachment wp-att-48\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z-300x225.gif\" alt=\"69b7d63agw1ewzw2i4783g20c8096q6z\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-48\" /></a>','优秀交互动效集锦（四）切换动效','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e5%9b%9b%ef%bc%89%e5%88%87%e6%8d%a2%e5%8a%a8%e6%95%88','','','2016-03-06 17:45:49','2016-03-06 09:45:49','> 如丝般顺滑\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif\" rel=\"attachment wp-att-47\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq-300x225.gif\" alt=\"69b7d63agw1ewzw2h0tqig20c8096kjq\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-47\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif\" rel=\"attachment wp-att-43\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1-300x225.gif\" alt=\"69b7d63agw1ewzw24gw5zg20c80964qp-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-43\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif\" rel=\"attachment wp-att-49\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2kh819g20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-49\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif\" rel=\"attachment wp-att-46\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv-300x225.gif\" alt=\"69b7d63agw1ewzw2555ggg20c8096abv\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-46\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif\" rel=\"attachment wp-att-42\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky-300x225.gif\" alt=\"69b7d63agw1ewzw227mwcg20c80961ky\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-42\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif\" rel=\"attachment wp-att-50\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94-300x225.gif\" alt=\"69b7d63agw1ewzw2lkkw2g20c8096n94\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-50\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif\" rel=\"attachment wp-att-51\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2o0idng20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-51\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif\" rel=\"attachment wp-att-39\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87-300x149.gif\" alt=\"69b7d63agw1ewzvomh0y6g20c8062e87\" width=\"300\" height=\"149\" class=\"alignnone size-medium wp-image-39\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif\" rel=\"attachment wp-att-40\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1-300x225.gif\" alt=\"69b7d63agw1ewzw1xq2v0g20b408ckjm-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-40\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif\" rel=\"attachment wp-att-48\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z-300x225.gif\" alt=\"69b7d63agw1ewzw2i4783g20c8096q6z\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-48\" /></a>\r\n\r\n',0,'http://codingcoder.com/?p=243',0,'post','',0);
INSERT INTO `wp_posts` VALUES (244,1,'2016-03-06 17:45:36','2016-03-06 09:45:36','<blockquote>\n  如丝般顺滑\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif\" rel=\"attachment wp-att-47\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq-300x225.gif\" alt=\"69b7d63agw1ewzw2h0tqig20c8096kjq\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-47\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif\" rel=\"attachment wp-att-43\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1-300x225.gif\" alt=\"69b7d63agw1ewzw24gw5zg20c80964qp-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-43\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif\" rel=\"attachment wp-att-49\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2kh819g20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-49\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif\" rel=\"attachment wp-att-46\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv-300x225.gif\" alt=\"69b7d63agw1ewzw2555ggg20c8096abv\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-46\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif\" rel=\"attachment wp-att-42\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky-300x225.gif\" alt=\"69b7d63agw1ewzw227mwcg20c80961ky\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-42\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif\" rel=\"attachment wp-att-50\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94-300x225.gif\" alt=\"69b7d63agw1ewzw2lkkw2g20c8096n94\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-50\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif\" rel=\"attachment wp-att-51\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2o0idng20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-51\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif\" rel=\"attachment wp-att-39\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87-300x149.gif\" alt=\"69b7d63agw1ewzvomh0y6g20c8062e87\" width=\"300\" height=\"149\" class=\"alignnone size-medium wp-image-39\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif\" rel=\"attachment wp-att-40\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1-300x225.gif\" alt=\"69b7d63agw1ewzw1xq2v0g20b408ckjm-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-40\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif\" rel=\"attachment wp-att-48\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z-300x225.gif\" alt=\"69b7d63agw1ewzw2i4783g20c8096q6z\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-48\" /></a>','优秀交互动效集锦（四）切换动效','','inherit','closed','closed','','243-revision-v1','','','2016-03-06 17:45:36','2016-03-06 09:45:36','> 如丝般顺滑\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq.gif\" rel=\"attachment wp-att-47\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2h0tqig20c8096kjq-300x225.gif\" alt=\"69b7d63agw1ewzw2h0tqig20c8096kjq\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-47\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1.gif\" rel=\"attachment wp-att-43\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw24gw5zg20c80964qp-1-300x225.gif\" alt=\"69b7d63agw1ewzw24gw5zg20c80964qp-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-43\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp.gif\" rel=\"attachment wp-att-49\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2kh819g20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2kh819g20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-49\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv.gif\" rel=\"attachment wp-att-46\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2555ggg20c8096abv-300x225.gif\" alt=\"69b7d63agw1ewzw2555ggg20c8096abv\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-46\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky.gif\" rel=\"attachment wp-att-42\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw227mwcg20c80961ky-300x225.gif\" alt=\"69b7d63agw1ewzw227mwcg20c80961ky\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-42\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94.gif\" rel=\"attachment wp-att-50\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2lkkw2g20c8096n94-300x225.gif\" alt=\"69b7d63agw1ewzw2lkkw2g20c8096n94\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-50\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp.gif\" rel=\"attachment wp-att-51\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2o0idng20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewzw2o0idng20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-51\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87.gif\" rel=\"attachment wp-att-39\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzvomh0y6g20c8062e87-300x149.gif\" alt=\"69b7d63agw1ewzvomh0y6g20c8062e87\" width=\"300\" height=\"149\" class=\"alignnone size-medium wp-image-39\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1.gif\" rel=\"attachment wp-att-40\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw1xq2v0g20b408ckjm-1-300x225.gif\" alt=\"69b7d63agw1ewzw1xq2v0g20b408ckjm-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-40\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z.gif\" rel=\"attachment wp-att-48\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewzw2i4783g20c8096q6z-300x225.gif\" alt=\"69b7d63agw1ewzw2i4783g20c8096q6z\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-48\" /></a>\r\n\r\n',243,'http://codingcoder.com/?p=244',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (245,1,'2015-10-31 17:45:59','2015-10-31 09:45:59','<blockquote>\n  过渡柔和，一气呵成\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif\" rel=\"attachment wp-att-31\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04trl2pvg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-31\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif\" rel=\"attachment wp-att-29\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04tnx11fg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-29\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif\" rel=\"attachment wp-att-30\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx-300x225.gif\" alt=\"69b7d63agw1ev04tokn96g20c8096gwx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-30\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif\" rel=\"attachment wp-att-32\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t-300x225.gif\" alt=\"69b7d63agw1ev04turj9xg20c8096k1t\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-32\" /></a>','优秀交互动效集锦（五）点击动效','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e4%ba%94%ef%bc%89%e7%82%b9%e5%87%bb%e5%8a%a8%e6%95%88','','','2016-03-06 17:53:04','2016-03-06 09:53:04','> 过渡柔和，一气呵成\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif\" rel=\"attachment wp-att-31\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04trl2pvg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-31\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif\" rel=\"attachment wp-att-29\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04tnx11fg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-29\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif\" rel=\"attachment wp-att-30\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx-300x225.gif\" alt=\"69b7d63agw1ev04tokn96g20c8096gwx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-30\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif\" rel=\"attachment wp-att-32\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t-300x225.gif\" alt=\"69b7d63agw1ev04turj9xg20c8096k1t\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-32\" /></a>\r\n',0,'http://codingcoder.com/?p=245',0,'post','',0);
INSERT INTO `wp_posts` VALUES (246,1,'2016-03-06 17:48:23','2016-03-06 09:48:23','<blockquote>\n  过渡柔和，一气呵成\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif\" rel=\"attachment wp-att-31\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04trl2pvg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-31\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif\" rel=\"attachment wp-att-29\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04tnx11fg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-29\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif\" rel=\"attachment wp-att-30\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx-300x225.gif\" alt=\"69b7d63agw1ev04tokn96g20c8096gwx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-30\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif\" rel=\"attachment wp-att-32\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t-300x225.gif\" alt=\"69b7d63agw1ev04turj9xg20c8096k1t\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-32\" /></a>','优秀交互动效集锦（五）点击动效','','inherit','closed','closed','','245-revision-v1','','','2016-03-06 17:48:23','2016-03-06 09:48:23','> 过渡柔和，一气呵成\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx.gif\" rel=\"attachment wp-att-31\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04trl2pvg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04trl2pvg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-31\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx.gif\" rel=\"attachment wp-att-29\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tnx11fg20c80961kx-300x225.gif\" alt=\"69b7d63agw1ev04tnx11fg20c80961kx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-29\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx.gif\" rel=\"attachment wp-att-30\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04tokn96g20c8096gwx-300x225.gif\" alt=\"69b7d63agw1ev04tokn96g20c8096gwx\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-30\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t.gif\" rel=\"attachment wp-att-32\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ev04turj9xg20c8096k1t-300x225.gif\" alt=\"69b7d63agw1ev04turj9xg20c8096k1t\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-32\" /></a>\r\n',245,'http://codingcoder.com/?p=246',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (247,1,'2015-10-31 17:56:59','2015-10-31 09:56:59','<blockquote>\n  散漫与秩序，愉悦的节奏\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif\" rel=\"attachment wp-att-23\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug-300x225.gif\" alt=\"69b7d63agw1eukxt6uabkg20b408c7ug\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-23\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif\" rel=\"attachment wp-att-26\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e-300x225.gif\" alt=\"69b7d63agw1eukxt9p5ycg20b408cq8e\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-26\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif\" rel=\"attachment wp-att-24\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb-300x225.gif\" alt=\"69b7d63agw1eukxt88lsig20b408cdsb\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-24\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif\" rel=\"attachment wp-att-25\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh-300x225.gif\" alt=\"69b7d63agw1eukxt92c01g20b408cakh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-25\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif\" rel=\"attachment wp-att-28\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc-300x225.gif\" alt=\"69b7d63agw1eukxtwlb4ig20b408cduc\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-28\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif\" rel=\"attachment wp-att-27\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip-300x225.gif\" alt=\"69b7d63agw1eukxtae3s8g20b408ctip\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-27\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig.gif\" rel=\"attachment wp-att-22\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig-300x225.gif\" alt=\"69b7d63agw1eukxt53deig20b408ctig\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-22\" /></a>','优秀交互动效集锦（六）节奏感的小球','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e5%85%ad%ef%bc%89%e8%8a%82%e5%a5%8f%e6%84%9f%e7%9a%84%e5%b0%8f%e7%90%83','','','2016-03-06 17:57:20','2016-03-06 09:57:20','> 散漫与秩序，愉悦的节奏\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif\" rel=\"attachment wp-att-23\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug-300x225.gif\" alt=\"69b7d63agw1eukxt6uabkg20b408c7ug\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-23\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif\" rel=\"attachment wp-att-26\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e-300x225.gif\" alt=\"69b7d63agw1eukxt9p5ycg20b408cq8e\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-26\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif\" rel=\"attachment wp-att-24\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb-300x225.gif\" alt=\"69b7d63agw1eukxt88lsig20b408cdsb\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-24\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif\" rel=\"attachment wp-att-25\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh-300x225.gif\" alt=\"69b7d63agw1eukxt92c01g20b408cakh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-25\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif\" rel=\"attachment wp-att-28\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc-300x225.gif\" alt=\"69b7d63agw1eukxtwlb4ig20b408cduc\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-28\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif\" rel=\"attachment wp-att-27\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip-300x225.gif\" alt=\"69b7d63agw1eukxtae3s8g20b408ctip\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-27\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig.gif\" rel=\"attachment wp-att-22\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig-300x225.gif\" alt=\"69b7d63agw1eukxt53deig20b408ctig\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-22\" /></a>\r\n',0,'http://codingcoder.com/?p=247',0,'post','',0);
INSERT INTO `wp_posts` VALUES (248,1,'2016-03-06 17:56:58','2016-03-06 09:56:58','<blockquote>\n  散漫与秩序，愉悦的节奏\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif\" rel=\"attachment wp-att-23\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug-300x225.gif\" alt=\"69b7d63agw1eukxt6uabkg20b408c7ug\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-23\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif\" rel=\"attachment wp-att-26\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e-300x225.gif\" alt=\"69b7d63agw1eukxt9p5ycg20b408cq8e\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-26\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif\" rel=\"attachment wp-att-24\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb-300x225.gif\" alt=\"69b7d63agw1eukxt88lsig20b408cdsb\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-24\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif\" rel=\"attachment wp-att-25\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh-300x225.gif\" alt=\"69b7d63agw1eukxt92c01g20b408cakh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-25\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif\" rel=\"attachment wp-att-28\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc-300x225.gif\" alt=\"69b7d63agw1eukxtwlb4ig20b408cduc\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-28\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif\" rel=\"attachment wp-att-27\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip-300x225.gif\" alt=\"69b7d63agw1eukxtae3s8g20b408ctip\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-27\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig.gif\" rel=\"attachment wp-att-22\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig-300x225.gif\" alt=\"69b7d63agw1eukxt53deig20b408ctig\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-22\" /></a>','优秀交互动效集锦（六）节奏感的小球','','inherit','closed','closed','','247-revision-v1','','','2016-03-06 17:56:58','2016-03-06 09:56:58','> 散漫与秩序，愉悦的节奏\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug.gif\" rel=\"attachment wp-att-23\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt6uabkg20b408c7ug-300x225.gif\" alt=\"69b7d63agw1eukxt6uabkg20b408c7ug\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-23\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e.gif\" rel=\"attachment wp-att-26\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt9p5ycg20b408cq8e-300x225.gif\" alt=\"69b7d63agw1eukxt9p5ycg20b408cq8e\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-26\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb.gif\" rel=\"attachment wp-att-24\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt88lsig20b408cdsb-300x225.gif\" alt=\"69b7d63agw1eukxt88lsig20b408cdsb\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-24\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh.gif\" rel=\"attachment wp-att-25\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt92c01g20b408cakh-300x225.gif\" alt=\"69b7d63agw1eukxt92c01g20b408cakh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-25\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc.gif\" rel=\"attachment wp-att-28\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtwlb4ig20b408cduc-300x225.gif\" alt=\"69b7d63agw1eukxtwlb4ig20b408cduc\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-28\" /></a>\r\n\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip.gif\" rel=\"attachment wp-att-27\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxtae3s8g20b408ctip-300x225.gif\" alt=\"69b7d63agw1eukxtae3s8g20b408ctip\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-27\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig.gif\" rel=\"attachment wp-att-22\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1eukxt53deig20b408ctig-300x225.gif\" alt=\"69b7d63agw1eukxt53deig20b408ctig\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-22\" /></a>\r\n',247,'http://codingcoder.com/?p=248',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (249,1,'2015-10-31 17:57:37','2015-10-31 09:57:37','<blockquote>\n  Logo 可以这么有爱\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif\" rel=\"attachment wp-att-37\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40-300x225.gif\" alt=\"69b7d63agw1ewercsvpg4g20c8096q40\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-37\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif\" rel=\"attachment wp-att-36\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewercpkjvrg20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-36\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif\" rel=\"attachment wp-att-35\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s-300x225.gif\" alt=\"69b7d63agw1evtufcz3h0g20c809610s\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-35\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif\" rel=\"attachment wp-att-34\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a-300x225.gif\" alt=\"69b7d63agw1evh4cirlapg20c8096x4a\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-34\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif\" rel=\"attachment wp-att-33\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf-300x225.gif\" alt=\"69b7d63agw1evh4bvt9sng20c80967bf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-33\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif\" rel=\"attachment wp-att-38\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh-300x225.gif\" alt=\"69b7d63agw1ewerctomvqg20c8096mzh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-38\" /></a>','优秀交互动效集锦（七）Logo 动起来','','publish','open','open','','%e4%bc%98%e7%a7%80%e4%ba%a4%e4%ba%92%e5%8a%a8%e6%95%88%e9%9b%86%e9%94%a6%ef%bc%88%e4%b8%83%ef%bc%89logo-%e5%8a%a8%e8%b5%b7%e6%9d%a5','','','2016-03-06 18:00:20','2016-03-06 10:00:20','> Logo 可以这么有爱\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif\" rel=\"attachment wp-att-37\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40-300x225.gif\" alt=\"69b7d63agw1ewercsvpg4g20c8096q40\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-37\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif\" rel=\"attachment wp-att-36\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewercpkjvrg20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-36\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif\" rel=\"attachment wp-att-35\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s-300x225.gif\" alt=\"69b7d63agw1evtufcz3h0g20c809610s\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-35\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif\" rel=\"attachment wp-att-34\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a-300x225.gif\" alt=\"69b7d63agw1evh4cirlapg20c8096x4a\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-34\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif\" rel=\"attachment wp-att-33\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf-300x225.gif\" alt=\"69b7d63agw1evh4bvt9sng20c80967bf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-33\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif\" rel=\"attachment wp-att-38\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh-300x225.gif\" alt=\"69b7d63agw1ewerctomvqg20c8096mzh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-38\" /></a>\r\n\r\n',0,'http://codingcoder.com/?p=249',0,'post','',0);
INSERT INTO `wp_posts` VALUES (250,1,'2016-03-06 17:59:55','2016-03-06 09:59:55','<blockquote>\n  Logo 可以这么有爱\n</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif\" rel=\"attachment wp-att-37\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40-300x225.gif\" alt=\"69b7d63agw1ewercsvpg4g20c8096q40\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-37\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif\" rel=\"attachment wp-att-36\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewercpkjvrg20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-36\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif\" rel=\"attachment wp-att-35\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s-300x225.gif\" alt=\"69b7d63agw1evtufcz3h0g20c809610s\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-35\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif\" rel=\"attachment wp-att-34\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a-300x225.gif\" alt=\"69b7d63agw1evh4cirlapg20c8096x4a\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-34\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif\" rel=\"attachment wp-att-33\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf-300x225.gif\" alt=\"69b7d63agw1evh4bvt9sng20c80967bf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-33\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif\" rel=\"attachment wp-att-38\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh-300x225.gif\" alt=\"69b7d63agw1ewerctomvqg20c8096mzh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-38\" /></a>','优秀交互动效集锦（七）Logo 动起来','','inherit','closed','closed','','249-revision-v1','','','2016-03-06 17:59:55','2016-03-06 09:59:55','> Logo 可以这么有爱\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40.gif\" rel=\"attachment wp-att-37\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercsvpg4g20c8096q40-300x225.gif\" alt=\"69b7d63agw1ewercsvpg4g20c8096q40\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-37\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp.gif\" rel=\"attachment wp-att-36\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewercpkjvrg20c80964qp-300x225.gif\" alt=\"69b7d63agw1ewercpkjvrg20c80964qp\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-36\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s.gif\" rel=\"attachment wp-att-35\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evtufcz3h0g20c809610s-300x225.gif\" alt=\"69b7d63agw1evtufcz3h0g20c809610s\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-35\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a.gif\" rel=\"attachment wp-att-34\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4cirlapg20c8096x4a-300x225.gif\" alt=\"69b7d63agw1evh4cirlapg20c8096x4a\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-34\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf.gif\" rel=\"attachment wp-att-33\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1evh4bvt9sng20c80967bf-300x225.gif\" alt=\"69b7d63agw1evh4bvt9sng20c80967bf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-33\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh.gif\" rel=\"attachment wp-att-38\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/69b7d63agw1ewerctomvqg20c8096mzh-300x225.gif\" alt=\"69b7d63agw1ewerctomvqg20c8096mzh\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-38\" /></a>\r\n\r\n',249,'http://codingcoder.com/?p=250',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (251,1,'2016-03-06 18:04:18','2016-03-06 10:04:18','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-58\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif\" rel=\"attachment wp-att-59\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6-300x225.gif\" alt=\"b50ea691gw1exixlpon6rg20m80go7v6\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-59\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif\" rel=\"attachment wp-att-60\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf-300x225.gif\" alt=\"b50ea691gw1exixlqf3wug20m80gojyf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-60\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif\" rel=\"attachment wp-att-61\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d-300x225.gif\" alt=\"b50ea691gw1exixlrv9csg20m80gob0d\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-61\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif\" rel=\"attachment wp-att-62\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1-300x225.gif\" alt=\"b50ea691gw1exixltat5ug20m80godo3-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-62\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif\" rel=\"attachment wp-att-64\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt-300x225.gif\" alt=\"b50ea691gw1exixlveoovg20m80gohdt\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-64\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif\" rel=\"attachment wp-att-65\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng-300x225.gif\" alt=\"b50ea691gw1exixlwuq38g20m80go4ng\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-65\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" rel=\"attachment wp-att-66\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5-300x225.gif\" alt=\"b50ea691gw1exixlxpi3cg20m80goaj5\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-66\" /></a>','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-autosave-v1','','','2016-03-06 18:04:18','2016-03-06 10:04:18','',225,'http://codingcoder.com/?p=251',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (252,1,'2016-03-06 18:04:23','2016-03-06 10:04:23','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\n\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-58\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif\" rel=\"attachment wp-att-59\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6-300x225.gif\" alt=\"b50ea691gw1exixlpon6rg20m80go7v6\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-59\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif\" rel=\"attachment wp-att-60\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf-300x225.gif\" alt=\"b50ea691gw1exixlqf3wug20m80gojyf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-60\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif\" rel=\"attachment wp-att-61\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d-300x225.gif\" alt=\"b50ea691gw1exixlrv9csg20m80gob0d\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-61\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif\" rel=\"attachment wp-att-62\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1-300x225.gif\" alt=\"b50ea691gw1exixltat5ug20m80godo3-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-62\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif\" rel=\"attachment wp-att-64\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt-300x225.gif\" alt=\"b50ea691gw1exixlveoovg20m80gohdt\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-64\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif\" rel=\"attachment wp-att-65\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng-300x225.gif\" alt=\"b50ea691gw1exixlwuq38g20m80go4ng\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-65\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" rel=\"attachment wp-att-66\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5-300x225.gif\" alt=\"b50ea691gw1exixlxpi3cg20m80goaj5\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-66\" /></a>','优秀交互动效集锦（一）下拉刷新动效','','inherit','closed','closed','','225-revision-v1','','','2016-03-06 18:04:23','2016-03-06 10:04:23','一个优秀的交互动效让人心旷神怡，最近我也在考察一些优秀的动画作品，现总结一下，方便大家观赏。\r\n<blockquote>要么特别，要么好玩儿，要么特别好玩儿。</blockquote>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn.gif\" rel=\"attachment wp-att-58\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlntaq4g20b408c7wn-300x225.gif\" alt=\"b50ea691gw1exixlntaq4g20b408c7wn\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-58\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6.gif\" rel=\"attachment wp-att-59\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlpon6rg20m80go7v6-300x225.gif\" alt=\"b50ea691gw1exixlpon6rg20m80go7v6\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-59\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf.gif\" rel=\"attachment wp-att-60\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlqf3wug20m80gojyf-300x225.gif\" alt=\"b50ea691gw1exixlqf3wug20m80gojyf\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-60\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d.gif\" rel=\"attachment wp-att-61\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlrv9csg20m80gob0d-300x225.gif\" alt=\"b50ea691gw1exixlrv9csg20m80gob0d\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-61\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1.gif\" rel=\"attachment wp-att-62\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixltat5ug20m80godo3-1-300x225.gif\" alt=\"b50ea691gw1exixltat5ug20m80godo3-1\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-62\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt.gif\" rel=\"attachment wp-att-64\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlveoovg20m80gohdt-300x225.gif\" alt=\"b50ea691gw1exixlveoovg20m80gohdt\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-64\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng.gif\" rel=\"attachment wp-att-65\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlwuq38g20m80go4ng-300x225.gif\" alt=\"b50ea691gw1exixlwuq38g20m80go4ng\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-65\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5.gif\" rel=\"attachment wp-att-66\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/b50ea691gw1exixlxpi3cg20m80goaj5-300x225.gif\" alt=\"b50ea691gw1exixlxpi3cg20m80goaj5\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-66\" /></a>\r\n',225,'http://codingcoder.com/?p=252',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (253,1,'2015-11-01 18:09:13','2015-11-01 10:09:13','<h2>介绍</h2>\n\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\n\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\n\n<hr />\n\n<h2>示例项目</h2>\n\n在开始阅读这篇文章之前，你最好先把这里的<a href=\"https://www.assetstore.unity3d.com/en/#!/content/45836\">示例项目</a>中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\n\n<hr />\n\n<h2>AssetBundle 是什么</h2>\n\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\n\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\n\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\n\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\n\n<ul>\n    <li>AssetBundles 是需要整体下载和缓存的。</li>\n    <li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\n    <li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\n    <li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\n    <li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\n    <li>AssetBundles 应该为每个目标平台单独构建。</li>\n</ul>\n\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\n\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\n\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\n\n一个网格模型及其所使用的材质\n\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\n这个坦克模型的资源依赖链：模型 材质 纹理\n\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\n这两种岩石柱拥有不同的模型，但是共享相同的材质\n\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\n\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\n\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\n\n<hr />\n\n<h2>MANIFESTS 和依赖管理</h2>\n\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\n\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\n\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\n\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\n\n<hr />\n\n<h2>结语</h2>\n\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\n\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\n\n<hr />\n\n本文翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（上）','','publish','open','open','','unity-5-2-assetbundle-%e5%92%8c-assetbundle-manager-%e4%bd%bf%e7%94%a8%e5%ae%9e%e8%b7%b5%ef%bc%88%e4%b8%8a%ef%bc%89','','','2016-03-06 18:25:15','2016-03-06 10:25:15','<h2>介绍</h2>\r\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\r\n\r\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\r\n\r\n---\r\n<h2>示例项目</h2>\r\n在开始阅读这篇文章之前，你最好先把这里的[示例项目](https://www.assetstore.unity3d.com/en/#!/content/45836)中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\r\n\r\n----\r\n<h2>AssetBundle 是什么</h2>\r\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\r\n\r\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\r\n\r\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\r\n\r\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\r\n<ul>\r\n	<li>AssetBundles 是需要整体下载和缓存的。</li>\r\n	<li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\r\n	<li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\r\n	<li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\r\n	<li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\r\n	<li>AssetBundles 应该为每个目标平台单独构建。</li>\r\n</ul>\r\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\r\n\r\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\r\n\r\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\r\n\r\n一个网格模型及其所使用的材质\r\n\r\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\r\n这个坦克模型的资源依赖链：模型 材质 纹理\r\n\r\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\r\n这两种岩石柱拥有不同的模型，但是共享相同的材质\r\n\r\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\r\n\r\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\r\n\r\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\r\n\r\n----\r\n<h2>MANIFESTS 和依赖管理</h2>\r\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\r\n\r\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\r\n\r\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\r\n\r\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\r\n\r\n----\r\n<h2>结语</h2>\r\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\r\n\r\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\r\n\r\n---\r\n\r\n本文翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)',0,'http://codingcoder.com/?p=253',0,'post','',0);
INSERT INTO `wp_posts` VALUES (254,1,'2016-03-06 18:12:56','2016-03-06 10:12:56','#介绍\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\n\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\n\n<hr />\n\n#示例项目\n在开始阅读这篇文章之前，你最好先把这里的<a href=\"https://www.assetstore.unity3d.com/en/#!/content/45836\">示例项目</a>中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\n\n<hr />\n\n#AssetBundle 是什么\n\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\n\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\n\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\n\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\n\n<ul>\n<li>AssetBundles 是需要整体下载和缓存的。</p></li>\n<li><p>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</p></li>\n<li><p>在 AssetBundles 中的资源对其他资源有依赖关系。</p></li>\n<li><p>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</p></li>\n<li><p>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</p></li>\n<li><p>AssetBundles 应该为每个目标平台单独构建。</p></li>\n</ul>\n\n<p>每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\n\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\n\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" class=\"alignnone size-medium wp-image-90\" /></a>\n一个网格模型及其所使用的材质\n\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" class=\"alignnone size-medium wp-image-88\" /></a>\n这个坦克模型的资源依赖链：模型 > 材质 > 纹理\n\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" class=\"alignnone size-medium wp-image-108\" /></a>\n这两种岩石柱拥有不同的模型，但是共享相同的材质\n\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\n\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\n\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\n\n<hr />\n\n#MANIFESTS 和依赖管理\n\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\n\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\n\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\n\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\n\n<hr />\n\n#结语\n\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\n\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\n\n<hr />\n\n<blockquote>\n  本文翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>\n</blockquote>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（上）','','inherit','closed','closed','','253-revision-v1','','','2016-03-06 18:12:56','2016-03-06 10:12:56','#介绍\r\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\r\n\r\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\r\n\r\n---\r\n\r\n#示例项目\r\n在开始阅读这篇文章之前，你最好先把这里的[示例项目](https://www.assetstore.unity3d.com/en/#!/content/45836)中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\r\n\r\n----\r\n\r\n#AssetBundle 是什么\r\n\r\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\r\n\r\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\r\n\r\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\r\n\r\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\r\n\r\n+ AssetBundles 是需要整体下载和缓存的。\r\n\r\n+ AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。\r\n\r\n+ 在 AssetBundles 中的资源对其他资源有依赖关系。\r\n\r\n+ 在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。\r\n\r\n+ 每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。\r\n\r\n+ AssetBundles 应该为每个目标平台单独构建。\r\n\r\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\r\n\r\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\r\n\r\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" class=\"alignnone size-medium wp-image-90\" /></a>\r\n一个网格模型及其所使用的材质\r\n\r\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" class=\"alignnone size-medium wp-image-88\" /></a>\r\n这个坦克模型的资源依赖链：模型 > 材质 > 纹理\r\n\r\n\r\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" class=\"alignnone size-medium wp-image-108\" /></a>\r\n这两种岩石柱拥有不同的模型，但是共享相同的材质\r\n\r\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\r\n\r\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\r\n\r\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\r\n\r\n----\r\n\r\n#MANIFESTS 和依赖管理\r\n\r\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\r\n\r\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\r\n\r\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\r\n\r\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\r\n\r\n----\r\n\r\n#结语\r\n\r\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\r\n\r\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\r\n\r\n---\r\n\r\n> 本文翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)\r\n',253,'http://codingcoder.com/?p=254',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (255,1,'2016-03-06 18:24:28','2016-03-06 10:24:28','<h2>介绍</h2>\n\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\n\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\n\n<hr />\n\n<h2>示例项目</h2>\n\n在开始阅读这篇文章之前，你最好先把这里的<a href=\"https://www.assetstore.unity3d.com/en/#!/content/45836\">示例项目</a>中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\n\n<hr />\n\n<h2>AssetBundle 是什么</h2>\n\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\n\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\n\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\n\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\n\n<ul>\n    <li>AssetBundles 是需要整体下载和缓存的。</li>\n    <li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\n    <li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\n    <li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\n    <li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\n    <li>AssetBundles 应该为每个目标平台单独构建。</li>\n</ul>\n\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\n\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\n\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\n\n<pre><span style=\"line-height: 1.6471;\">一个网格模型及其所使用的材质</span></pre>\n\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\n这个坦克模型的资源依赖链：模型 材质 纹理\n\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\n这两种岩石柱拥有不同的模型，但是共享相同的材质\n\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\n\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\n\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\n\n<hr />\n\n<h2>MANIFESTS 和依赖管理</h2>\n\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\n\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\n\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\n\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\n\n<hr />\n\n<h2>结语</h2>\n\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\n\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\n\n<hr />\n\n本文翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（上）','','inherit','closed','closed','','253-autosave-v1','','','2016-03-06 18:24:28','2016-03-06 10:24:28','',253,'http://codingcoder.com/?p=255',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (257,1,'2016-03-06 18:25:15','2016-03-06 10:25:15','<h2>介绍</h2>\n\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\n\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\n\n<hr />\n\n<h2>示例项目</h2>\n\n在开始阅读这篇文章之前，你最好先把这里的<a href=\"https://www.assetstore.unity3d.com/en/#!/content/45836\">示例项目</a>中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\n\n<hr />\n\n<h2>AssetBundle 是什么</h2>\n\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\n\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\n\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\n\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\n\n<ul>\n    <li>AssetBundles 是需要整体下载和缓存的。</li>\n    <li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\n    <li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\n    <li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\n    <li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\n    <li>AssetBundles 应该为每个目标平台单独构建。</li>\n</ul>\n\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\n\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\n\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\n\n一个网格模型及其所使用的材质\n\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\n这个坦克模型的资源依赖链：模型 材质 纹理\n\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\n这两种岩石柱拥有不同的模型，但是共享相同的材质\n\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\n\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\n\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\n\n<hr />\n\n<h2>MANIFESTS 和依赖管理</h2>\n\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\n\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\n\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\n\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\n\n<hr />\n\n<h2>结语</h2>\n\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\n\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\n\n<hr />\n\n本文翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（上）','','inherit','closed','closed','','253-revision-v1','','','2016-03-06 18:25:15','2016-03-06 10:25:15','<h2>介绍</h2>\r\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\r\n\r\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\r\n\r\n---\r\n<h2>示例项目</h2>\r\n在开始阅读这篇文章之前，你最好先把这里的[示例项目](https://www.assetstore.unity3d.com/en/#!/content/45836)中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\r\n\r\n----\r\n<h2>AssetBundle 是什么</h2>\r\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\r\n\r\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\r\n\r\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\r\n\r\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\r\n<ul>\r\n	<li>AssetBundles 是需要整体下载和缓存的。</li>\r\n	<li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\r\n	<li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\r\n	<li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\r\n	<li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\r\n	<li>AssetBundles 应该为每个目标平台单独构建。</li>\r\n</ul>\r\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\r\n\r\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\r\n\r\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\r\n\r\n一个网格模型及其所使用的材质\r\n\r\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\r\n这个坦克模型的资源依赖链：模型 材质 纹理\r\n\r\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\r\n这两种岩石柱拥有不同的模型，但是共享相同的材质\r\n\r\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\r\n\r\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\r\n\r\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\r\n\r\n----\r\n<h2>MANIFESTS 和依赖管理</h2>\r\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\r\n\r\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\r\n\r\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\r\n\r\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\r\n\r\n----\r\n<h2>结语</h2>\r\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\r\n\r\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\r\n\r\n---\r\n\r\n本文翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)',253,'http://codingcoder.com/?p=257',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (256,1,'2016-03-06 18:21:04','2016-03-06 10:21:04','<h2>介绍</h2>\n\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\n\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\n\n<hr />\n\n<h2>示例项目</h2>\n\n在开始阅读这篇文章之前，你最好先把这里的<a href=\"https://www.assetstore.unity3d.com/en/#!/content/45836\">示例项目</a>中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\n\n<hr />\n\n<h2>AssetBundle 是什么</h2>\n\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\n\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\n\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\n\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\n\n<ul>\n    <li>AssetBundles 是需要整体下载和缓存的。</li>\n    <li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\n    <li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\n    <li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\n    <li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\n    <li>AssetBundles 应该为每个目标平台单独构建。</li>\n</ul>\n\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\n\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\n\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\n\n<span style=\"line-height: 1.6471;\">一个网格模型及其所使用的材质</span>\n\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\n这个坦克模型的资源依赖链：模型 &amp;gt; 材质 &amp;gt; 纹理\n\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\n这两种岩石柱拥有不同的模型，但是共享相同的材质\n\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\n\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\n\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\n\n<hr />\n\n<h2>MANIFESTS 和依赖管理</h2>\n\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\n\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\n\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\n\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\n\n<hr />\n\n<h2>结语</h2>\n\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\n\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\n\n<hr />\n\n本文翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（上）','','inherit','closed','closed','','253-revision-v1','','','2016-03-06 18:21:04','2016-03-06 10:21:04','<h2>介绍</h2>\r\nAssetBundles 允许从本地或者服务器按需指定和加载资源（Assets）。通过 AssetBundles 技术，资源可以存放在远端的服务器上，当游戏中需要使用它们时，再去按照需要去加载这些资源。这种技术增加了项目的灵活性，并且减少了应用程序的初始包的体积大小。\r\n\r\n本文讲介绍 AssetBundles 技术，并且讨论如何去使用它，AssetBundles 工作流的步骤和阶段，如何将资源打包到 AssetBundle 中去，如何使用以及何时应该使用 AssetBundle Variants，如何构建和测试 AssetBundles 和 Variants。所有的这些，我们都可以使用 AssetBundle Manager 来简化AssetBundles 的创建、测试和发布环节。本文的最后一章我们将介绍一个使用 AssetBundles 和 Variants 的实际例子。\r\n\r\n---\r\n<h2>示例项目</h2>\r\n在开始阅读这篇文章之前，你最好先把这里的[示例项目](https://www.assetstore.unity3d.com/en/#!/content/45836)中的 AssetBundle Manager 下载下来，我们会在后面的章节中用到它。\r\n\r\n----\r\n<h2>AssetBundle 是什么</h2>\r\nAssetBundles 是有 Unity 编辑器在编辑环境中(enit-time)创建的一些列的文件，这些文件可以被用在项目的运行环境中(run-time)。 AssetBundles 可以包括的资源文件有模型文件（models）、材质（materials）、纹理（textures）和场景（scenes）。AssetBundles 不能包含脚本文件。\r\n\r\n具体来说，一个 AssetBundle 就是把一系列的资源文件或者场景文件以某种方式紧密保存的一个文件。这个 AssetBundle 文件可以被单独加载到可执行的应用程序中。AssetBundles 可以由被 Unity 构建的游戏或者应用按需加载使用。这允许对像模型、纹理、音频、甚至是整个的游戏场景这样的资源进行流式加载和异步加载。AssetBundles 可以预缓存（pre-cached）和存储在本地，这样在运行时就可以立即加载它们。但是 AssetBundles 技术的主要的目的是在需要的时候能够从远端的服务器上按需请求特定的资源，并加载到游戏中。AssetBundles 可以包含 Unity 可以识别的任何类型的资源，包括自定义的二进制数据。唯一的例外是，脚本资源是不被允许的。\r\n\r\n有很多 AssetBundles 的使用案例。新的内容可以被动态的从应用程序中加载或者卸载。Post-release DLC 可以被更容易的实现。一个应用程序的磁盘占用或大小可以再第一次发布时被减小，在程序被安装后，在按照需要加载必要的资源。平台和设备相关的资源可以被正确的加载，而不需下载和存储当前设备不需要的平台或者分辨率所对应的资源文件。国际化也变得很容易，只需要根据用户的地理位置、语言和偏好设置来下载需要的资源就可以了。应用程序可以不需要提交新的版本就可以做到用新的资源内容来修复、改变和更新。\r\n\r\n应该怎样把一个项目的资源具体组成成 AssetBundles，这将严重依赖于具体项目的需求。但是下面这些基本的原则可以帮助我们更好的理解 AssetBundles。\r\n<ul>\r\n	<li>AssetBundles 是需要整体下载和缓存的。</li>\r\n	<li>AssetBundles 不需要整体的加载到应用程序中，可以只加载其中的某些资源。</li>\r\n	<li>在 AssetBundles 中的资源对其他资源有依赖关系。</li>\r\n	<li>在 AssetBundles 中的资源可以同其他资源具有相同的依赖关系。</li>\r\n	<li>每个 AssetBundle 都有一些技术开销，即在文件的大小上，也在管理这些文件上。</li>\r\n	<li>AssetBundles 应该为每个目标平台单独构建。</li>\r\n</ul>\r\n每一个 AssetBundle 都是被整体下载的。如果一个 AssetBundle 包含了一些不是被立即使用的资源，甚至它们都不会被加载到当前这个场景中，它们也会耗费下载时的带宽和存储时的磁盘空间。\r\n\r\nAssetBundles 的内容不需要被全部加载到应用程序中。只要 AssetBundle 被下载下来了，不同的资源就可以按照需要选择性的被加载。\r\n\r\n一些资源可能会对其他资源有依赖关系。比如，一个模型资源可以有几个依赖。一个游戏中的模型不只是有网格数据（mesh data），实际上它是一个拥有它所有 Components 的 GameObject，以及每个 Component 自己做依赖的依赖关系。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial.png\" rel=\"attachment wp-att-90\"><img class=\"alignnone size-medium wp-image-90\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/meshmodelwmaterial-285x300.png\" alt=\"meshmodelwmaterial\" width=\"285\" height=\"300\" /></a>\r\n\r\n<span style=\"line-height: 1.6471;\">一个网格模型及其所使用的材质</span>\r\n\r\n这个模型在 Mesh Renderer 中依赖于一个材质资源，而一个材质资源的 Albedo Texture 属性又依赖于一个纹理资源。所以，实际上这个坦克的模型依赖于三个资源，而不只是一个。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2.png\" rel=\"attachment wp-att-88\"><img class=\"alignnone size-medium wp-image-88\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/dependencies2-300x234.png\" alt=\"dependencies2\" width=\"300\" height=\"234\" /></a>\r\n这个坦克模型的资源依赖链：模型 &amp;gt; 材质 &amp;gt; 纹理\r\n\r\n资源可以其他资源共享依赖关系。比如，两个不同的模型可以共享一个相同的材质资源，而这又有可能依赖于同一个纹理资源。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns.png\" rel=\"attachment wp-att-108\"><img class=\"alignnone size-medium wp-image-108\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/two_rock_columns-300x181.png\" alt=\"two_rock_columns\" width=\"300\" height=\"181\" /></a>\r\n这两种岩石柱拥有不同的模型，但是共享相同的材质\r\n\r\n每一个 AssetBundle 都有一些技术开销。AssetBundles 是一些封装资源的文件。这种封装会增大了 AssetBundle 的整体大小，尽管这种大小的增加不会太明显，而且是可测量的。AssetBundles 也需要一定的管理开销来组织、创建、上传和维护。 在项目中使用越多的 AssetBundles 也会越多的增加这种开销，即包括技术开销也包括管理开销。\r\n\r\n当组织 AssetBundles 时，是更多的小的 AssetBundles 还是更少的大的 AssetBundles 呢？这是需要我们根据自己的项目的实际情况来好好权衡的。更多的小的 AssetBundles 会面临更多的跟踪和创建相关的开销，太少的 AssetBundles 会使单个AssetBundle 本身的大小变大，也会导致它们可能包含一些冗余的数据。\r\n\r\n由于 AssetBundle 的内容是按照当前的目标平台和它的 Import Setting 来构建和优化的，所以 AssetBundles 需要在每一个平台上单独构建。\r\n\r\n----\r\n<h2>MANIFESTS 和依赖管理</h2>\r\n关于依赖关系和依赖管理，有几个要点是需要重点理解的。\r\n\r\n资源的依赖关系是永远不会丢失的。如果当前选择的资源所依赖的其他资源没有被包含在任何一个 AssetBundle 中时，这些被依赖的资源就会被自动添加到当前的这个 AssetBundle 中。这是非常便利的，也防止依赖资源的丢失。但是，这也会导致资源的重复。比如，上面介绍的两个岩石柱的例子中，如果两个岩石柱在不同的 AssetBundle 中，并且它们共享的材质都没有被显示的指定到一个 AssetBundle 中去，那么这个材质就会被两个岩石柱的 AssetBundles 都重复包含进去了。值得注意的是，当这种情况发生时，所有重复的资源会保存在它们单独的 AssetBundles 中，并且现在它们的依赖关系就被打破了。每一个岩石模型资源现在都依赖于它们 AssetBundle 中的材质资源，这样就不再享有共享材质资源所带来的好处。为了防止这样的事情发生，材质就需要显示的指定到一个 AssetBundle 中去。这个 AssetBundle 可以是独立的，也可以和其他资源共享一个 AssetBundle。不管是哪一种方式，这个岩石柱的 AssetBundle 就要依赖于包含这个岩石柱材质的 AssetBundle。\r\n\r\n一个工程的 AssetBundles 的依赖信息和其他信息被存储在一个 Manifest 文件中。这个 manifest 文件很像一个项目的 AssetBundles 内容的清单列表。当构建 AssetBundles 时，Unity 会产生很多数据。这些数据的详细情况被存储在 Manifest 中。每一个平台都会创建一个 Manifest。这个 Manifest 列出了这个工程根据当前的编译平台创建出来的所有的 AssetBundles，并且存储和跟踪他们的依赖关系。通过这个 Manifest，就能够查询所有的 AssetBundles 和他们的依赖关系。\r\n\r\n对于 AssetBundles 还有一个特殊的操作，我们称之为 AssetBundle Variants。AssetBundle Variants 是为了满足一种特殊的用户需求而设计的：重新映射不同的资源到项目中的独立的物体上。当我们需要根据分辨率、语言、地理位置或者是用户的偏好设置来选择不同的资源时，这种技术就会非常有用。AssetBundle Variants 可以包含所有需要支持的资源，并能根据用户的具体选择来映射特定的资源到需要的对象上去。\r\n\r\n----\r\n<h2>结语</h2>\r\nAssetBundles 是一些包含模型、材质、纹理和场景等资源的文件。AssetBundle 是由 Unity 编辑器在编辑期间串接创建出来的，可以被应用程序在运行期间使用的。AssetBundles 是设计用来按需从本地或者服务器加载资源的。AssetBundles 可以用 Variants 来根据用户的偏好设置来映射不同的资源。\r\n\r\n对于如何在项目中使用 AssetBundles 和 AssetBundle Manager，请阅读下一篇文章。\r\n\r\n---\r\n\r\n本文翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)',253,'http://codingcoder.com/?p=256',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (258,1,'2015-11-01 18:27:24','2015-11-01 10:27:24','<h2>介绍</h2>\n\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\n\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\n\n<h2>如何使用 AssetBundles</h2>\n\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\n\n<ol>\n    <li> 在编辑器中组合和配置 AssetBundles。</li>\n    <li> 构建 AssetBundles。</li>\n    <li> 把构建好的 AssetBundles 上传到外部存储器上。</li>\n    <li> 在运行期间下载 AssetBundles。</li>\n    <li> 从 AssetBundles 中加载对象使用。</li>\n</ol>\n\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\n\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\n\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene.png\" rel=\"attachment wp-att-106\"><img class=\"alignnone size-medium wp-image-106\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene-300x186.png\" alt=\"simple_scene\" width=\"300\" height=\"186\" /></a>一个简单的场景\n\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename.png\" rel=\"attachment wp-att-86\"><img class=\"alignnone size-medium wp-image-86\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename-285x300.png\" alt=\"assetbundlename\" width=\"285\" height=\"300\" /></a>\n\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2.png\" rel=\"attachment wp-att-84\"><img class=\"alignnone size-medium wp-image-84\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2-284x300.png\" alt=\"ab-menu2\" width=\"284\" height=\"300\" /></a>\n\n为一个资源指定一个 AssetBundle\n\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\n\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\n\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name.png\" rel=\"attachment wp-att-87\"><img class=\"alignnone size-medium wp-image-87\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name-282x300.png\" alt=\"creating_a_new_ab_name\" width=\"282\" height=\"300\" /></a>\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\n\n<em>创建一个新的 AssetBundle 的名字（注意，这里的大写的字母 T 是非法的）</em>\n\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab.png\" rel=\"attachment wp-att-107\"><img class=\"alignnone size-medium wp-image-107\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab-279x300.png\" alt=\"tank_assigned_to_ab\" width=\"279\" height=\"300\" /></a>\n\n<em>Tank 被替换成了小写的 tank</em>\n\n&nbsp;\n\n<h2>使用 ASSETBUNDLE VARIANTS</h2>\n\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\n\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\n\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\n\n下面这个例子可以在 AssetBundle Sample 中找到。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" rel=\"attachment wp-att-89\"><img class=\"alignnone size-full wp-image-89\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" alt=\"matching_variant_structure\" width=\"156\" height=\"144\" /></a>\n\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd.png\" rel=\"attachment wp-att-109\"><img class=\"alignnone size-medium wp-image-109\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd-300x72.png\" alt=\"variant_name_hd\" width=\"300\" height=\"72\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd.png\" rel=\"attachment wp-att-110\"><img class=\"alignnone size-medium wp-image-110\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd-300x73.png\" alt=\"variant_name_sd\" width=\"300\" height=\"73\" /></a>\n\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2.png\" rel=\"attachment wp-att-85\"><img class=\"alignnone size-medium wp-image-85\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2-300x206.png\" alt=\"ab-variant-menu2\" width=\"300\" height=\"206\" /></a>\n\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\n\n<h2>使用 ASSETBUNDLE MANAGER</h2>\n\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\n\nAssetBundle Manager 包含如下 API:\n\n<ul>\n<li>Initialize() 初始化 AssetBundle 的 manifest 对象。</p></li>\n<li><p>LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.</p></li>\n<li><p>BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。</p></li>\n<li><p>SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。</p></li>\n<li><p>Variants 设置活跃的 Variant。</p></li>\n<li><p>RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。</p></li>\n</ul>\n\n<p>在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\n\n<ul>\n<li>『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。</p></li>\n<li><p>『SceneLoader』演示了如何从 AssetBundle 中加载一个场景</p></li>\n<li><p>『VariantLoader』演示了如何加载 AssetBundle Variants。</p></li>\n<li>『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。</li>\n</ul>\n\n<p>上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\n\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\n\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\n\n在第一种使用场景中，不需要使用 AssetBundle Manager，\n\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\n\n<hr />\n\n<blockquote>\n  翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>\n</blockquote>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（下）','','publish','open','open','','unity-5-2-assetbundle-%e5%92%8c-assetbundle-manager-%e4%bd%bf%e7%94%a8%e5%ae%9e%e8%b7%b5%ef%bc%88%e4%b8%8b%ef%bc%89','','','2016-03-06 18:34:58','2016-03-06 10:34:58','<h2>介绍</h2>\r\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\r\n\r\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\r\n<h2>如何使用 AssetBundles</h2>\r\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\r\n<ol>\r\n	<li> 在编辑器中组合和配置 AssetBundles。</li>\r\n	<li> 构建 AssetBundles。</li>\r\n	<li> 把构建好的 AssetBundles 上传到外部存储器上。</li>\r\n	<li> 在运行期间下载 AssetBundles。</li>\r\n	<li> 从 AssetBundles 中加载对象使用。</li>\r\n</ol>\r\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\r\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\r\n\r\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\r\n\r\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene.png\" rel=\"attachment wp-att-106\"><img class=\"alignnone size-medium wp-image-106\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene-300x186.png\" alt=\"simple_scene\" width=\"300\" height=\"186\" /></a>一个简单的场景\r\n\r\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename.png\" rel=\"attachment wp-att-86\"><img class=\"alignnone size-medium wp-image-86\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename-285x300.png\" alt=\"assetbundlename\" width=\"285\" height=\"300\" /></a>\r\n\r\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2.png\" rel=\"attachment wp-att-84\"><img class=\"alignnone size-medium wp-image-84\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2-284x300.png\" alt=\"ab-menu2\" width=\"284\" height=\"300\" /></a>\r\n\r\n为一个资源指定一个 AssetBundle\r\n\r\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\r\n\r\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\r\n\r\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name.png\" rel=\"attachment wp-att-87\"><img class=\"alignnone size-medium wp-image-87\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name-282x300.png\" alt=\"creating_a_new_ab_name\" width=\"282\" height=\"300\" /></a>\r\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\r\n\r\n*创建一个新的 AssetBundle 的名字（注意，这里的大写的字母 T 是非法的）*\r\n\r\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab.png\" rel=\"attachment wp-att-107\"><img class=\"alignnone size-medium wp-image-107\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab-279x300.png\" alt=\"tank_assigned_to_ab\" width=\"279\" height=\"300\" /></a>\r\n\r\n*Tank 被替换成了小写的 tank*\r\n\r\n&nbsp;\r\n<h2>使用 ASSETBUNDLE VARIANTS</h2>\r\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\r\n\r\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\r\n\r\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\r\n\r\n下面这个例子可以在 AssetBundle Sample 中找到。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" rel=\"attachment wp-att-89\"><img class=\"alignnone size-full wp-image-89\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" alt=\"matching_variant_structure\" width=\"156\" height=\"144\" /></a>\r\n\r\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd.png\" rel=\"attachment wp-att-109\"><img class=\"alignnone size-medium wp-image-109\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd-300x72.png\" alt=\"variant_name_hd\" width=\"300\" height=\"72\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd.png\" rel=\"attachment wp-att-110\"><img class=\"alignnone size-medium wp-image-110\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd-300x73.png\" alt=\"variant_name_sd\" width=\"300\" height=\"73\" /></a>\r\n\r\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2.png\" rel=\"attachment wp-att-85\"><img class=\"alignnone size-medium wp-image-85\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2-300x206.png\" alt=\"ab-variant-menu2\" width=\"300\" height=\"206\" /></a>\r\n\r\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\r\n<h2>使用 ASSETBUNDLE MANAGER</h2>\r\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\r\n\r\nAssetBundle Manager 包含如下 API:\r\n\r\n+ Initialize() 初始化 AssetBundle 的 manifest 对象。\r\n\r\n+ LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。\r\n\r\n+ LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。\r\n\r\n+ LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.\r\n\r\n+ BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。\r\n\r\n+ SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。\r\n\r\n+ Variants 设置活跃的 Variant。\r\n\r\n+ RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。\r\n\r\n在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\r\n\r\n+ 『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。\r\n\r\n+ 『SceneLoader』演示了如何从 AssetBundle 中加载一个场景\r\n\r\n+ 『VariantLoader』演示了如何加载 AssetBundle Variants。\r\n+ 『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。\r\n\r\n上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\r\n\r\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\r\n\r\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\r\n\r\n在第一种使用场景中，不需要使用 AssetBundle Manager，\r\n\r\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\r\n\r\n---\r\n\r\n&gt; 翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)',0,'http://codingcoder.com/?p=258',0,'post','',0);
INSERT INTO `wp_posts` VALUES (259,1,'2016-03-06 18:29:23','2016-03-06 10:29:23','#介绍\n\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\n\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\n\n#如何使用 AssetBundles\n\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\n\n<ol>\n<li>在编辑器中组合和配置 AssetBundles。</li>\n<li>构建 AssetBundles。</li>\n<li>把构建好的 AssetBundles 上传到外部存储器上。</li>\n<li>在运行期间下载 AssetBundles。</li>\n<li>从 AssetBundles 中加载对象使用。</li>\n</ol>\n\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\n\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\n\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\n\n<img src=\"/content/images/2015/11/simple_scene.png\" alt=\"\" />\n一个简单的场景\n\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\n\n<img src=\"/content/images/2015/11/assetbundlename.png\" alt=\"\" />\n\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\n\n<img src=\"/content/images/2015/11/ab-menu2.png\" alt=\"\" />\n为一个资源指定一个 AssetBundle\n\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\n\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\n\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\n\n<img src=\"/content/images/2015/11/creating_a_new_ab_name.png\" alt=\"\" />\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\n\n<em>创建一个新的 AssetBundle 的名字（注意，这里的大写的字母  T 是非法的）</em>\n\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\n\n<img src=\"/content/images/2015/11/tank_assigned_to_ab.png\" alt=\"\" />\n<em>Tank 被替换成了小写的 tank</em>\n\n#使用 ASSETBUNDLE VARIANTS\n\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\n\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\n\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\n\n下面这个例子可以在 AssetBundle Sample 中找到。\n\n<img src=\"/content/images/2015/11/matching_variant_structure.png\" alt=\"\" />\n\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\n\n<img src=\"/content/images/2015/11/variant_name_hd.png\" alt=\"\" />\n\n<img src=\"/content/images/2015/11/variant_name_sd.png\" alt=\"\" />\n\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\n\n<img src=\"/content/images/2015/11/ab-variant-menu2.png\" alt=\"\" />\n\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\n\n#使用 ASSETBUNDLE MANAGER\n\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\n\nAssetBundle Manager 包含如下 API:\n\n<ul>\n<li>Initialize() 初始化 AssetBundle 的 manifest 对象。</p></li>\n<li><p>LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.</p></li>\n<li><p>BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。</p></li>\n<li><p>SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。</p></li>\n<li><p>Variants 设置活跃的 Variant。</p></li>\n<li><p>RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。</p></li>\n</ul>\n\n<p>在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\n\n<ul>\n<li>『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。</p></li>\n<li><p>『SceneLoader』演示了如何从 AssetBundle 中加载一个场景</p></li>\n<li><p>『VariantLoader』演示了如何加载 AssetBundle Variants。</p></li>\n<li>『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。</li>\n</ul>\n\n<p>上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\n\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\n\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\n\n在第一种使用场景中，不需要使用 AssetBundle Manager，\n\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\n\n<hr />\n\n<blockquote>\n  翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>\n</blockquote>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（下）','','inherit','closed','closed','','258-revision-v1','','','2016-03-06 18:29:23','2016-03-06 10:29:23','#介绍\r\n\r\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\r\n\r\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\r\n\r\n#如何使用 AssetBundles\r\n\r\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\r\n\r\n1. 在编辑器中组合和配置 AssetBundles。\r\n2. 构建 AssetBundles。\r\n3. 把构建好的 AssetBundles 上传到外部存储器上。\r\n4. 在运行期间下载 AssetBundles。\r\n5. 从 AssetBundles 中加载对象使用。\r\n\r\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\r\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\r\n\r\n\r\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\r\n\r\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\r\n\r\n![](/content/images/2015/11/simple_scene.png)\r\n一个简单的场景\r\n\r\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\r\n\r\n![](/content/images/2015/11/assetbundlename.png)\r\n\r\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\r\n\r\n![](/content/images/2015/11/ab-menu2.png)\r\n为一个资源指定一个 AssetBundle\r\n\r\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\r\n\r\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\r\n\r\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\r\n\r\n![](/content/images/2015/11/creating_a_new_ab_name.png)\r\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\r\n\r\n*创建一个新的 AssetBundle 的名字（注意，这里的大写的字母  T 是非法的）*\r\n\r\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\r\n\r\n![](/content/images/2015/11/tank_assigned_to_ab.png)\r\n*Tank 被替换成了小写的 tank*\r\n\r\n\r\n#使用 ASSETBUNDLE VARIANTS\r\n\r\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\r\n\r\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\r\n\r\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\r\n\r\n下面这个例子可以在 AssetBundle Sample 中找到。\r\n\r\n![](/content/images/2015/11/matching_variant_structure.png)\r\n\r\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\r\n\r\n![](/content/images/2015/11/variant_name_hd.png)\r\n\r\n![](/content/images/2015/11/variant_name_sd.png)\r\n\r\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\r\n\r\n![](/content/images/2015/11/ab-variant-menu2.png)\r\n\r\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\r\n\r\n#使用 ASSETBUNDLE MANAGER\r\n\r\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\r\n\r\nAssetBundle Manager 包含如下 API:\r\n\r\n+ Initialize() 初始化 AssetBundle 的 manifest 对象。\r\n\r\n+ LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。\r\n\r\n+ LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。\r\n\r\n+ LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.\r\n\r\n+ BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。\r\n\r\n+ SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。\r\n\r\n+ Variants 设置活跃的 Variant。\r\n\r\n+ RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。\r\n\r\n在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\r\n\r\n+ 『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。\r\n\r\n+ 『SceneLoader』演示了如何从 AssetBundle 中加载一个场景\r\n\r\n+ 『VariantLoader』演示了如何加载 AssetBundle Variants。\r\n+ 『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。\r\n\r\n上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\r\n\r\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\r\n\r\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\r\n\r\n在第一种使用场景中，不需要使用 AssetBundle Manager，\r\n\r\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\r\n\r\n---\r\n\r\n> 翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)',258,'http://codingcoder.com/?p=259',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (260,1,'2016-03-06 18:34:46','2016-03-06 10:34:46','<h2>介绍</h2>\n\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\n\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\n\n<h2>如何使用 AssetBundles</h2>\n\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\n\n<ol>\n    <li> 在编辑器中组合和配置 AssetBundles。</li>\n    <li> 构建 AssetBundles。</li>\n    <li> 把构建好的 AssetBundles 上传到外部存储器上。</li>\n    <li> 在运行期间下载 AssetBundles。</li>\n    <li> 从 AssetBundles 中加载对象使用。</li>\n</ol>\n\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\n\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\n\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene.png\" rel=\"attachment wp-att-106\"><img class=\"alignnone size-medium wp-image-106\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene-300x186.png\" alt=\"simple_scene\" width=\"300\" height=\"186\" /></a>一个简单的场景\n\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename.png\" rel=\"attachment wp-att-86\"><img class=\"alignnone size-medium wp-image-86\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename-285x300.png\" alt=\"assetbundlename\" width=\"285\" height=\"300\" /></a>\n\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2.png\" rel=\"attachment wp-att-84\"><img class=\"alignnone size-medium wp-image-84\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2-284x300.png\" alt=\"ab-menu2\" width=\"284\" height=\"300\" /></a>\n\n为一个资源指定一个 AssetBundle\n\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\n\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\n\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name.png\" rel=\"attachment wp-att-87\"><img class=\"alignnone size-medium wp-image-87\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name-282x300.png\" alt=\"creating_a_new_ab_name\" width=\"282\" height=\"300\" /></a>\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\n\n<em>创建一个新的 AssetBundle 的名字（注意，这里的大写的字母 T 是非法的）</em>\n\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab.png\" rel=\"attachment wp-att-107\"><img class=\"alignnone size-medium wp-image-107\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab-279x300.png\" alt=\"tank_assigned_to_ab\" width=\"279\" height=\"300\" /></a>\n\n<em>Tank 被替换成了小写的 tank</em>\n\n&nbsp;\n\n<h2>使用 ASSETBUNDLE VARIANTS</h2>\n\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\n\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\n\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\n\n下面这个例子可以在 AssetBundle Sample 中找到。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" rel=\"attachment wp-att-89\"><img class=\"alignnone size-full wp-image-89\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" alt=\"matching_variant_structure\" width=\"156\" height=\"144\" /></a>\n\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd.png\" rel=\"attachment wp-att-109\"><img class=\"alignnone size-medium wp-image-109\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd-300x72.png\" alt=\"variant_name_hd\" width=\"300\" height=\"72\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd.png\" rel=\"attachment wp-att-110\"><img class=\"alignnone size-medium wp-image-110\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd-300x73.png\" alt=\"variant_name_sd\" width=\"300\" height=\"73\" /></a>\n\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2.png\" rel=\"attachment wp-att-85\"><img class=\"alignnone size-medium wp-image-85\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2-300x206.png\" alt=\"ab-variant-menu2\" width=\"300\" height=\"206\" /></a>\n\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\n\n<h2>使用 ASSETBUNDLE MANAGER</h2>\n\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\n\nAssetBundle Manager 包含如下 API:\n\n<ul>\n<li>Initialize() 初始化 AssetBundle 的 manifest 对象。</p></li>\n<li><p>LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.</p></li>\n<li><p>BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。</p></li>\n<li><p>SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。</p></li>\n<li><p>Variants 设置活跃的 Variant。</p></li>\n<li><p>RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。</p></li>\n</ul>\n\n<p>在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\n\n<ul>\n<li>『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。</p></li>\n<li><p>『SceneLoader』演示了如何从 AssetBundle 中加载一个场景</p></li>\n<li><p>『VariantLoader』演示了如何加载 AssetBundle Variants。</p></li>\n<li>『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。</li>\n</ul>\n\n<p>上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\n\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\n\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\n\n在第一种使用场景中，不需要使用 AssetBundle Manager，\n\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\n\n<hr />\n\n<blockquote>\n  翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>\n</blockquote>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（下）','','inherit','closed','closed','','258-autosave-v1','','','2016-03-06 18:34:46','2016-03-06 10:34:46','',258,'http://codingcoder.com/?p=260',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (261,1,'2016-03-06 18:34:58','2016-03-06 10:34:58','<h2>介绍</h2>\n\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\n\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\n\n<h2>如何使用 AssetBundles</h2>\n\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\n\n<ol>\n    <li> 在编辑器中组合和配置 AssetBundles。</li>\n    <li> 构建 AssetBundles。</li>\n    <li> 把构建好的 AssetBundles 上传到外部存储器上。</li>\n    <li> 在运行期间下载 AssetBundles。</li>\n    <li> 从 AssetBundles 中加载对象使用。</li>\n</ol>\n\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\n\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\n\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene.png\" rel=\"attachment wp-att-106\"><img class=\"alignnone size-medium wp-image-106\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene-300x186.png\" alt=\"simple_scene\" width=\"300\" height=\"186\" /></a>一个简单的场景\n\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename.png\" rel=\"attachment wp-att-86\"><img class=\"alignnone size-medium wp-image-86\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename-285x300.png\" alt=\"assetbundlename\" width=\"285\" height=\"300\" /></a>\n\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2.png\" rel=\"attachment wp-att-84\"><img class=\"alignnone size-medium wp-image-84\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2-284x300.png\" alt=\"ab-menu2\" width=\"284\" height=\"300\" /></a>\n\n为一个资源指定一个 AssetBundle\n\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\n\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\n\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name.png\" rel=\"attachment wp-att-87\"><img class=\"alignnone size-medium wp-image-87\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name-282x300.png\" alt=\"creating_a_new_ab_name\" width=\"282\" height=\"300\" /></a>\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\n\n<em>创建一个新的 AssetBundle 的名字（注意，这里的大写的字母 T 是非法的）</em>\n\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab.png\" rel=\"attachment wp-att-107\"><img class=\"alignnone size-medium wp-image-107\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab-279x300.png\" alt=\"tank_assigned_to_ab\" width=\"279\" height=\"300\" /></a>\n\n<em>Tank 被替换成了小写的 tank</em>\n\n&nbsp;\n\n<h2>使用 ASSETBUNDLE VARIANTS</h2>\n\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\n\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\n\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\n\n下面这个例子可以在 AssetBundle Sample 中找到。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" rel=\"attachment wp-att-89\"><img class=\"alignnone size-full wp-image-89\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" alt=\"matching_variant_structure\" width=\"156\" height=\"144\" /></a>\n\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd.png\" rel=\"attachment wp-att-109\"><img class=\"alignnone size-medium wp-image-109\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd-300x72.png\" alt=\"variant_name_hd\" width=\"300\" height=\"72\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd.png\" rel=\"attachment wp-att-110\"><img class=\"alignnone size-medium wp-image-110\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd-300x73.png\" alt=\"variant_name_sd\" width=\"300\" height=\"73\" /></a>\n\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2.png\" rel=\"attachment wp-att-85\"><img class=\"alignnone size-medium wp-image-85\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2-300x206.png\" alt=\"ab-variant-menu2\" width=\"300\" height=\"206\" /></a>\n\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\n\n<h2>使用 ASSETBUNDLE MANAGER</h2>\n\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\n\nAssetBundle Manager 包含如下 API:\n\n<ul>\n<li>Initialize() 初始化 AssetBundle 的 manifest 对象。</p></li>\n<li><p>LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。</p></li>\n<li><p>LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.</p></li>\n<li><p>BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。</p></li>\n<li><p>SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。</p></li>\n<li><p>Variants 设置活跃的 Variant。</p></li>\n<li><p>RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。</p></li>\n</ul>\n\n<p>在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\n\n<ul>\n<li>『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。</p></li>\n<li><p>『SceneLoader』演示了如何从 AssetBundle 中加载一个场景</p></li>\n<li><p>『VariantLoader』演示了如何加载 AssetBundle Variants。</p></li>\n<li>『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。</li>\n</ul>\n\n<p>上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\n\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\n\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\n\n在第一种使用场景中，不需要使用 AssetBundle Manager，\n\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\n\n<hr />\n\n<blockquote>\n  翻译自<a href=\"http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117\">Unity Tutorial</a>\n</blockquote>','Unity 5.2 AssetBundle 和 AssetBundle Manager 使用实践（下）','','inherit','closed','closed','','258-revision-v1','','','2016-03-06 18:34:58','2016-03-06 10:34:58','<h2>介绍</h2>\r\n在使用 AssetBundle 时，一个关键的部分就是构建和测试AssetBundles。通常在开发阶段，资源本身就会经常的发生变化。正常情况下，这就需要我们经常的构建 AssetBundles，上传到服务器并且通过网络请求下载到我们的工程中进行测试。\r\n\r\n在这一章中，我们重点讨论如何通过 AssetBundle Manager 来使用 AssetBundle。AssetBundle Manager 中提供了一个高层次的 API，与用低层次的 API 直接操作AssetBundle 相比，大规模的改进了工作流。\r\n<h2>如何使用 AssetBundles</h2>\r\n在编辑器中使用 AssetBundles 大致可分为以下步骤：\r\n<ol>\r\n	<li> 在编辑器中组合和配置 AssetBundles。</li>\r\n	<li> 构建 AssetBundles。</li>\r\n	<li> 把构建好的 AssetBundles 上传到外部存储器上。</li>\r\n	<li> 在运行期间下载 AssetBundles。</li>\r\n	<li> 从 AssetBundles 中加载对象使用。</li>\r\n</ol>\r\n需要注意的是，一些 AssetBundles 可以存储在本地，这样它就可以作为默认配置而能够被立即加载，而不需要从服务器上下载。\r\n当应用程序无法连接到服务器来下载指定的 AssetBundles 时，这将会非常有用。比如，当应用程序无法获取需要下载的资源时，可以使用一个存储在本地的 AssetBundle 作为默认的语言和国际化数据。\r\n\r\n还有一点需要注意，一个 AssetBundle 包含的是平台特定的资源。每个 AssetBundle 中的内容都是根据当前的目标平台的 Import Settings 和 Build Settings 中的 Target Platform 进行编译和优化的。所以，AssetBundles 需要对每个目标平台都要单独构建。\r\n\r\n在下面这个简单的场景中，一种具有通用性的比较合理的把场景组织到 AssetBundles 的方式是先组织一个基本的场景，这个基本场景里面有地面、沙丘、岩石柱、树木和仙人掌。这个基本场景也可以包含所依赖的材质资源，因为这些都是相对非常简单的，不大可能会随着不同的分辨率或者设备而发生变化。那个坦克的模型就应该在它自己的 AssetBundle 中，因为它需要根据玩家的资源来更新或者变化。还要使用两个额外的 AssetBundles 才能完成这个坦克所对应的 GameObject。一个是所依赖的材质资源，另一个是所依赖的纹理资源。这么做将使我们能够最简单的达到可以改变和更新纹理和材质的目的。这种特殊的组织方式也允许替代版本（alternative versions）或者变体（variants），可以根据平台、地理位置或者分辨率等参数来按照需要加载不同的资源。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene.png\" rel=\"attachment wp-att-106\"><img class=\"alignnone size-medium wp-image-106\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/simple_scene-300x186.png\" alt=\"simple_scene\" width=\"300\" height=\"186\" /></a>一个简单的场景\r\n\r\n通过在编辑器中为资源指定一个 AssetBundle 的名字就可以将它们组织在不同的 AssetBundles 中了。当查看一个资源时，你可以在如下所示的地方找到 AssetBundle Name 和 AssetBundle Variant。你必须打开预览窗口才能看到它们。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename.png\" rel=\"attachment wp-att-86\"><img class=\"alignnone size-medium wp-image-86\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/assetbundlename-285x300.png\" alt=\"assetbundlename\" width=\"285\" height=\"300\" /></a>\r\n\r\n你可以使用 AssetBundle Name 的下拉菜单来给一个资源指定 AssetBundle。你可以创建一个新的 AssetBundle Name 或者选择一个已经存在的 AssetBundle Name。和 AssetBundle Variants 相关的部分将在下面介绍。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2.png\" rel=\"attachment wp-att-84\"><img class=\"alignnone size-medium wp-image-84\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-menu2-284x300.png\" alt=\"ab-menu2\" width=\"284\" height=\"300\" /></a>\r\n\r\n为一个资源指定一个 AssetBundle\r\n\r\n要创建一个新的 AssetBundle，选择 New ，并且在激活的文本框中输入 AssetBundle 的名字即可。\r\n\r\n把一个资源从一个 AssetBundle 中移除，只需要选择 None即可。\r\n\r\n要从这个列表中移除一个 AssetBundle 的名字，需要把所有指定在这个 AssetBundle 上的资源都从这个名字上移除掉，然后再选在『Remove Unused Names』菜单。这样就可以把所有没有使用的 AssetBundle 名字移除掉。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name.png\" rel=\"attachment wp-att-87\"><img class=\"alignnone size-medium wp-image-87\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/creating_a_new_ab_name-282x300.png\" alt=\"creating_a_new_ab_name\" width=\"282\" height=\"300\" /></a>\r\nCreating a new AssetBundle Name (Note Illegal Capital “T” in the AssetBundle Name)\r\n\r\n*创建一个新的 AssetBundle 的名字（注意，这里的大写的字母 T 是非法的）*\r\n\r\nAssetBundle 的名字必须是严格的小写字母。如果你使用了大写字母，Unity 会自动给你替换成对应的小写字母。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab.png\" rel=\"attachment wp-att-107\"><img class=\"alignnone size-medium wp-image-107\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/tank_assigned_to_ab-279x300.png\" alt=\"tank_assigned_to_ab\" width=\"279\" height=\"300\" /></a>\r\n\r\n*Tank 被替换成了小写的 tank*\r\n\r\n&nbsp;\r\n<h2>使用 ASSETBUNDLE VARIANTS</h2>\r\n从 AssetBundle 中按需加载资源，使得许多涉及到加载、存储和更新资源相关的难题拥有了创造性的解决方案。AssetBundle 可以根据设备、区域或者用户偏好加载不同的资源，这种特殊的情况是用 AssetBundle Variants 来实现的。\r\n\r\nAssetBundle Variants 给场景中的一个对象递送相同资源的不同版本。AssetBundle Variants 重新映射不同的资源到一个相同的对象上。同一时刻，只有一个 AssetBundle 的 Variant 会被加载。AssetBundle Variants 可以在很多情况下被使用。比如，对于同一个资源的不同的分辨率支持：标准分辨率和高分辨率的图像资源，或者同一个模型有不同的多边形的个数。Asset Variants 可以为一个对象的不同内容创建：文字，图片，纹理和字体，这些内容可能随着语言、区域或主题的不同而不同。这些资源保存在一系列相同构造AssetBundles中，并通过它们的 Variant 名称区分。\r\n\r\n对于这项工作，所有匹配 的AssetBundle Variants 必须具有相同的构造和命名方式。AssetBundle Variants 之间的唯一差别是包含在 AssetBundle 中的独立的资源和 AssetBundle Variants 的名称。为了保证 AssetBundle Variants 彼此兼容，每个 AssetBundle 的文件夹结构和内容必须一致。每个 AssetBundle 必须能够提供所需的资源，并且必须有相同的名称和相同的层次顺序。\r\n\r\n下面这个例子可以在 AssetBundle Sample 中找到。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" rel=\"attachment wp-att-89\"><img class=\"alignnone size-full wp-image-89\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/matching_variant_structure.png\" alt=\"matching_variant_structure\" width=\"156\" height=\"144\" /></a>\r\n\r\n在上面这个例子中，两个文件夹『MyAssets-HD』和『MyAssets-SD』都被指定给 AssetBundle 『myassets』。然后它们每一个都被分别指定了不同的 AssetBundle Variant 名字，这里是『hd』和『sd』。我们需要注意两套资源是如何拥有相同的名字和共享相同的层次结构的。由于父目录被指定给了一个 AssetBundle并且所有的子资源都没有指定 AssetBundle， 所以在构建 AssetBundle 时，这个父目录下的所有的资源都会被加到父目录所在的 AssetBundle 上。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd.png\" rel=\"attachment wp-att-109\"><img class=\"alignnone size-medium wp-image-109\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_hd-300x72.png\" alt=\"variant_name_hd\" width=\"300\" height=\"72\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd.png\" rel=\"attachment wp-att-110\"><img class=\"alignnone size-medium wp-image-110\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/variant_name_sd-300x73.png\" alt=\"variant_name_sd\" width=\"300\" height=\"73\" /></a>\r\n\r\n值得注意的是，AssetBundle 的名字可以使用一个层级菜单结构。注意上面图片中的 AssetBundle 的名字是一个路径『variant/myassets』。这将为 AssetBundle『myassets』创建一个父菜单项『variants』。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2.png\" rel=\"attachment wp-att-85\"><img class=\"alignnone size-medium wp-image-85\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/ab-variant-menu2-300x206.png\" alt=\"ab-variant-menu2\" width=\"300\" height=\"206\" /></a>\r\n\r\n只要资源被指定给 AssetBundle，AssetBundle 就需要构建和测试。\r\n<h2>使用 ASSETBUNDLE MANAGER</h2>\r\nUnity 有一个底层的 API 可以直接操作 AssetBundles。这篇文章我们不讨论这个底层 API，如果你想了解更多这个底层 AssetBundles 的 API，请参阅下面链接的信息。\r\n\r\nAssetBundle Manager 包含如下 API:\r\n\r\n+ Initialize() 初始化 AssetBundle 的 manifest 对象。\r\n\r\n+ LoadAssetAsync() 从指定的 AssetBundle 中加载指定的资源，并且处理相关的所有依赖关系。\r\n\r\n+ LoadLevelAsync() 从指定的 AssetBundle 中加载指定的场景，并且处理相关的所有依赖关系。\r\n\r\n+ LoadDependencies() 加载指定的 AssetBundle 所依赖的所有的 AssetBundles.\r\n\r\n+ BaseDownloadingURL 设置下载链接的根部分，在自动下载依赖时会用到。\r\n\r\n+ SimulateAssetBundleInEditor 设置在编辑器中使用模拟模式。\r\n\r\n+ Variants 设置活跃的 Variant。\r\n\r\n+ RemapVariantName() 根据指定的 variant 映射正确的 AssetBundle。\r\n\r\n在『AssetBundle Sample』文件夹中有 AssetBundle Manager 的示例。在『AssetBundleSample/Scenes』中有三个基本的示例场景和一个高级的示例场景：\r\n\r\n+ 『AssetLoader』 演示了如何从 AssetBundle 中加载一个普通的资源。\r\n\r\n+ 『SceneLoader』演示了如何从 AssetBundle 中加载一个场景\r\n\r\n+ 『VariantLoader』演示了如何加载 AssetBundle Variants。\r\n+ 『LoadTanks』这是一个稍微复杂点的示例，它将演示如何加载场景、资源和 AssetBundle Variants。\r\n\r\n上面这些每个场景都被一些基本的脚本驱动，分别是：LoadAssets.cs, LoadScenes.cs, LoadVariants.cs and LoadTanks.cs。\r\n\r\n在这点上，我们需要重点重申一下 AssetBundle Manager 所提供的工作流。\r\n\r\n为了成功测试如何使用 AssetBundle，有三种可能的使用场景。\r\n\r\n在第一种使用场景中，不需要使用 AssetBundle Manager，\r\n\r\nIn the first scenario, without using the AssetBundle Manager, AssetBundles will need to be built and deployed and all testing is done with the complete and final system in place. In this scenario, with every change to the Assets in a Project, new AssetBundles need to be built and deployed.\r\n\r\n---\r\n\r\n&gt; 翻译自[Unity Tutorial](http://unity3d.com/cn/learn/tutorials/topics/scripting/assetbundles-and-assetbundle-manager?playlist=17117)',258,'http://codingcoder.com/?p=261',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (262,1,'2015-11-08 18:35:55','2015-11-08 10:35:55','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\n<a href=\"https://cloud.google.com/translate/docs\">Google Translate API</a>是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用<a href=\"https://translate.google.com/\">Google Translate 官网</a>的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\n\n<pre><code><br />https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\n\n</code></pre>\n\n上面的 <code>sl=en&amp;amp;tl=zh-CN</code>应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数<code>q=hello%20world</code>应该就是我们要翻译的 hello world。\n\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\n下面我们继续来看看 Response 部分吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\n\n<pre><code><br />[[[\"你好，世界\",\"hello world\",,,1],[,,\"Nǐ hǎo, shìjiè\"]],,\"en\",,,[[\"hello world\",32000,[[\"你好，世界\",0,true,false]],[[0,11]],\"hello world\",0,0]],0.64180082,,[[\"en\"],,[0.64180082]],,,,,,[[\"World\"]]]\n\n</code></pre>\n\n格式有点乱，我们看一下排版后的格式：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\n\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\n\n<pre><code><br />curl \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\n\n我们得到如下结果：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\n\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\n\n<pre><code><br />curl --user-agent \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36\" \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n我们增加了 <code>--user-agent</code>字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\n\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\n\n你会发现，当翻译的文本比较短时，<code>q</code>参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，<code>q</code>参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数<code>q</code>要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章<a href=\"http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html\">HTTP中的URL长度限制</a>。所以当翻译的文本太长时，就没办法把<code>q</code>参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\n\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！','Google Translate API 抓包分析','','publish','open','open','','google-translate-api-%e6%8a%93%e5%8c%85%e5%88%86%e6%9e%90','','','2016-03-06 18:43:07','2016-03-06 10:43:07','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\r\n[Google Translate API](https://cloud.google.com/translate/docs)是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用[Google Translate 官网](https://translate.google.com/)的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\r\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\r\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\r\n```\r\n\r\nhttps://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\r\n\r\n```\r\n上面的 `sl=en&amp;tl=zh-CN`应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数`q=hello%20world`应该就是我们要翻译的 hello world。\r\n\r\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\r\n下面我们继续来看看 Response 部分吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\r\n\r\n```\r\n\r\n[[[&quot;你好，世界&quot;,&quot;hello world&quot;,,,1],[,,&quot;Nǐ hǎo, shìjiè&quot;]],,&quot;en&quot;,,,[[&quot;hello world&quot;,32000,[[&quot;你好，世界&quot;,0,true,false]],[[0,11]],&quot;hello world&quot;,0,0]],0.64180082,,[[&quot;en&quot;],,[0.64180082]],,,,,,[[&quot;World&quot;]]]\r\n\r\n```\r\n格式有点乱，我们看一下排版后的格式：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\r\n\r\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\r\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\r\n```\r\n\r\ncurl &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;\r\n\r\n```\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\r\n\r\n我们得到如下结果：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\r\n\r\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\r\n\r\n```\r\n\r\ncurl --user-agent &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36&quot; &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;\r\n\r\n```\r\n\r\n我们增加了 `--user-agent`字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\r\n\r\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\r\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\r\n\r\n你会发现，当翻译的文本比较短时，`q`参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，`q`参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数`q`要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章[HTTP中的URL长度限制](http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html)。所以当翻译的文本太长时，就没办法把`q`参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\r\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\r\n\r\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\r\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！',0,'http://codingcoder.com/?p=262',0,'post','',0);
INSERT INTO `wp_posts` VALUES (263,1,'2016-03-06 18:41:00','2016-03-06 10:41:00','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\n<a href=\"https://cloud.google.com/translate/docs\">Google Translate API</a>是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用<a href=\"https://translate.google.com/\">Google Translate 官网</a>的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\n\n<pre><code><br />https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\n\n</code></pre>\n\n上面的 <code>sl=en&amp;amp;tl=zh-CN</code>应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数<code>q=hello%20world</code>应该就是我们要翻译的 hello world。\n\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\n下面我们继续来看看 Response 部分吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\n\n<pre><code><br />[[[\"你好，世界\",\"hello world\",,,1],[,,\"Nǐ hǎo, shìjiè\"]],,\"en\",,,[[\"hello world\",32000,[[\"你好，世界\",0,true,false]],[[0,11]],\"hello world\",0,0]],0.64180082,,[[\"en\"],,[0.64180082]],,,,,,[[\"World\"]]]\n\n</code></pre>\n\n格式有点乱，我们看一下排版后的格式：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\n\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\n\n<pre><code><br />curl \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\n\n我们得到如下结果：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\n\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\n\n<pre><code><br />curl --user-agent \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36\" \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n我们增加了 <code>--user-agent</code>字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\n\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\n\n你会发现，当翻译的文本比较短时，<code>q</code>参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，<code>q</code>参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数<code>q</code>要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章[HTTP中的URL长度限制\n\n](http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html)。所以当翻译的文本太长时，就没办法把<code>q</code>参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\n\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！','Google Translate API 抓包分析','','inherit','closed','closed','','262-revision-v1','','','2016-03-06 18:41:00','2016-03-06 10:41:00','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\r\n[Google Translate API](https://cloud.google.com/translate/docs)是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用[Google Translate 官网](https://translate.google.com/)的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\r\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\r\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\r\n```\r\n\r\nhttps://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\r\n\r\n```\r\n上面的 `sl=en&amp;tl=zh-CN`应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数`q=hello%20world`应该就是我们要翻译的 hello world。\r\n\r\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\r\n下面我们继续来看看 Response 部分吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\r\n\r\n```\r\n\r\n[[[&quot;你好，世界&quot;,&quot;hello world&quot;,,,1],[,,&quot;Nǐ hǎo, shìjiè&quot;]],,&quot;en&quot;,,,[[&quot;hello world&quot;,32000,[[&quot;你好，世界&quot;,0,true,false]],[[0,11]],&quot;hello world&quot;,0,0]],0.64180082,,[[&quot;en&quot;],,[0.64180082]],,,,,,[[&quot;World&quot;]]]\r\n\r\n```\r\n格式有点乱，我们看一下排版后的格式：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\r\n\r\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\r\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\r\n```\r\n\r\ncurl &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;\r\n\r\n```\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\r\n\r\n我们得到如下结果：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\r\n\r\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\r\n\r\n```\r\n\r\ncurl --user-agent &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36&quot; &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;\r\n\r\n```\r\n\r\n我们增加了 `--user-agent`字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\r\n\r\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\r\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\r\n\r\n你会发现，当翻译的文本比较短时，`q`参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，`q`参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数`q`要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章[HTTP中的URL长度限制\r\n\r\n](http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html)。所以当翻译的文本太长时，就没办法把`q`参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\r\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\r\n\r\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\r\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！',262,'http://codingcoder.com/?p=263',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (264,1,'2016-03-06 18:42:08','2016-03-06 10:42:08','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\n<a href=\"https://cloud.google.com/translate/docs\">Google Translate API</a>是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用<a href=\"https://translate.google.com/\">Google Translate 官网</a>的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\n\n<pre><code><br />https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\n\n</code></pre>\n\n上面的 <code>sl=en&amp;amp;tl=zh-CN</code>应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数<code>q=hello%20world</code>应该就是我们要翻译的 hello world。\n\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\n下面我们继续来看看 Response 部分吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\n\n<pre><code><br />[[[\"你好，世界\",\"hello world\",,,1],[,,\"Nǐ hǎo, shìjiè\"]],,\"en\",,,[[\"hello world\",32000,[[\"你好，世界\",0,true,false]],[[0,11]],\"hello world\",0,0]],0.64180082,,[[\"en\"],,[0.64180082]],,,,,,[[\"World\"]]]\n\n</code></pre>\n\n格式有点乱，我们看一下排版后的格式：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\n\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\n\n<pre><code><br />curl \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\n\n我们得到如下结果：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\n\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\n\n<pre><code><br />curl --user-agent \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36\" \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n我们增加了 <code>--user-agent</code>字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\n\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\n\n你会发现，当翻译的文本比较短时，<code>q</code>参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，<code>q</code>参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数<code>q</code>要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章<a href=\"http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html\">HTTP中的URL长度限制</a>。所以当翻译的文本太长时，就没办法把<code>q</code>参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\n\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！','Google Translate API 抓包分析','','inherit','closed','closed','','262-autosave-v1','','','2016-03-06 18:42:08','2016-03-06 10:42:08','',262,'http://codingcoder.com/?p=264',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (265,1,'2016-03-06 18:43:07','2016-03-06 10:43:07','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\n<a href=\"https://cloud.google.com/translate/docs\">Google Translate API</a>是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用<a href=\"https://translate.google.com/\">Google Translate 官网</a>的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\n\n<pre><code><br />https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\n\n</code></pre>\n\n上面的 <code>sl=en&amp;amp;tl=zh-CN</code>应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数<code>q=hello%20world</code>应该就是我们要翻译的 hello world。\n\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\n下面我们继续来看看 Response 部分吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\n\n<pre><code><br />[[[\"你好，世界\",\"hello world\",,,1],[,,\"Nǐ hǎo, shìjiè\"]],,\"en\",,,[[\"hello world\",32000,[[\"你好，世界\",0,true,false]],[[0,11]],\"hello world\",0,0]],0.64180082,,[[\"en\"],,[0.64180082]],,,,,,[[\"World\"]]]\n\n</code></pre>\n\n格式有点乱，我们看一下排版后的格式：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\n\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\n\n<pre><code><br />curl \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\n\n我们得到如下结果：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\n\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\n\n<pre><code><br />curl --user-agent \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36\" \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\"\n\n</code></pre>\n\n我们增加了 <code>--user-agent</code>字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\n\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\n\n你会发现，当翻译的文本比较短时，<code>q</code>参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，<code>q</code>参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数<code>q</code>要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章<a href=\"http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html\">HTTP中的URL长度限制</a>。所以当翻译的文本太长时，就没办法把<code>q</code>参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\n\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！','Google Translate API 抓包分析','','inherit','closed','closed','','262-revision-v1','','','2016-03-06 18:43:07','2016-03-06 10:43:07','最近在做游戏时，需要做国际化的翻译工作，然后就想到，如果可以先用 Google Translate 翻译出来，然后再在这个机器翻译的基础上去修改，应该会方便一些。更特别一些的，比如对于中文简体翻译到中文繁体，就可以完全直接使用机器翻译的结果。\r\n[Google Translate API](https://cloud.google.com/translate/docs)是收费的 API 了，但是以我的需求来讲，只是偶尔才使用一下，如果付费去用，还是有点心疼的。所以，我就想如何通过使用[Google Translate 官网](https://translate.google.com/)的翻译功能来达到我自动批量翻译的目的呢？毕竟这个是免费的。\r\n基本的思路就是通过对 Google Translate 官网的请求进行抓包分析，然后根据分析结果，模拟发送请求，然后从返回的请求结果中解析出机器翻译的结果。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM.png\" rel=\"attachment wp-att-91\"><img class=\"alignnone size-medium wp-image-91\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-34-05-PM-300x163.png\" alt=\"Screen-Shot-2015-11-08-at-4-34-05-PM\" width=\"300\" height=\"163\" /></a>\r\n在网页发出的众多请求中，我们找到了上面这个可疑请求，让我们来仔细看一下它。\r\n```\r\n\r\nhttps://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\r\n\r\n```\r\n上面的 `sl=en&amp;tl=zh-CN`应该就是指 source language 是因为英文，target language 是中文简体。最后一个参数`q=hello%20world`应该就是我们要翻译的 hello world。\r\n\r\n其他的参数猜不出什么意思，没关系，至少我们把最关键的部分猜出来了。\r\n下面我们继续来看看 Response 部分吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM.png\" rel=\"attachment wp-att-92\"><img class=\"alignnone size-medium wp-image-92\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-4-52-50-PM-300x35.png\" alt=\"Screen-Shot-2015-11-08-at-4-52-50-PM\" width=\"300\" height=\"35\" /></a>\r\n\r\n```\r\n\r\n[[[&quot;你好，世界&quot;,&quot;hello world&quot;,,,1],[,,&quot;Nǐ hǎo, shìjiè&quot;]],,&quot;en&quot;,,,[[&quot;hello world&quot;,32000,[[&quot;你好，世界&quot;,0,true,false]],[[0,11]],&quot;hello world&quot;,0,0]],0.64180082,,[[&quot;en&quot;],,[0.64180082]],,,,,,[[&quot;World&quot;]]]\r\n\r\n```\r\n格式有点乱，我们看一下排版后的格式：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM.png\" rel=\"attachment wp-att-93\"><img class=\"alignnone size-medium wp-image-93\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-07-17-PM-300x96.png\" alt=\"Screen-Shot-2015-11-08-at-5-07-17-PM\" width=\"300\" height=\"96\" /></a>\r\n\r\n我们可以看到里面有翻译的结果，还有汉语拼音和源文本等信息。其他的信息看不懂了，不过也没有关系，最关键的翻译结果部分我们已经知道了。\r\n好了，我们在命令行终端中用 curl 命令模拟发送一个请求试试看。\r\n```\r\n\r\ncurl &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;\r\n\r\n```\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM.png\" rel=\"attachment wp-att-94\"><img class=\"alignnone size-medium wp-image-94\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-38-27-PM-300x16.png\" alt=\"Screen-Shot-2015-11-08-at-5-38-27-PM\" width=\"300\" height=\"16\" /></a>\r\n\r\n我们得到如下结果：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM.png\" rel=\"attachment wp-att-95\"><img class=\"alignnone size-medium wp-image-95\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-5-41-16-PM-300x162.png\" alt=\"Screen-Shot-2015-11-08-at-5-41-16-PM\" width=\"300\" height=\"162\" /></a>\r\n\r\n这是为什么呢？估计是被 Google 屏蔽了，所以我们要伪装成普通的浏览器去模拟请求。\r\n\r\n```\r\n\r\ncurl --user-agent &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.49 Safari/537.36&quot; &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;\r\n\r\n```\r\n\r\n我们增加了 `--user-agent`字段来伪装成浏览器，现在我们就可以得到我们想要的结果了，如下：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM.png\" rel=\"attachment wp-att-96\"><img class=\"alignnone size-medium wp-image-96\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-08-at-6-15-02-PM-300x38.png\" alt=\"Screen-Shot-2015-11-08-at-6-15-02-PM\" width=\"300\" height=\"38\" /></a>\r\n\r\n我们再来看一下当翻译的文本很长时，会发生什么有趣的事情呢？\r\n下面是我用 Chrome 开发者工具截图的结果，先来看一下：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM.png\" rel=\"attachment wp-att-97\"><img class=\"alignnone size-medium wp-image-97\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-12-15-AM-300x84.png\" alt=\"Screen-Shot-2015-11-09-at-11-12-15-AM\" width=\"300\" height=\"84\" /></a>\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM.png\" rel=\"attachment wp-att-98\"><img class=\"alignnone size-medium wp-image-98\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-13-14-AM-300x83.png\" alt=\"Screen-Shot-2015-11-09-at-11-13-14-AM\" width=\"300\" height=\"83\" /></a>\r\n\r\n你会发现，当翻译的文本比较短时，`q`参数是放在了 Query String Parameters 中的，也就是使用了 GET 方法提供参数。而当翻译的文本特别的长时，`q`参数则被放在了 Form Data 里面，也就是使用了 POST 方法提供参数。为什么会这样呢？这是因为在使用 GET 方法时，参数`q`要被编码到 URL 中，而 URL 的总长度是有最大长度的限制的，具体可以看这篇文章[HTTP中的URL长度限制](http://www.cnblogs.com/lengyuhong/archive/2012/02/04/2330130.html)。所以当翻译的文本太长时，就没办法把`q`参数放在 URL 中一起编码，故采用了 Form Data 的方式提供参数。\r\n我们用 curl 命令做个试验，测试一下 POST 方式是不是也能正常访问。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM.png\" rel=\"attachment wp-att-99\"><img class=\"alignnone size-medium wp-image-99\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-09-at-11-28-42-AM-300x35.png\" alt=\"Screen-Shot-2015-11-09-at-11-28-42-AM\" width=\"300\" height=\"35\" /></a>\r\n\r\n我们同样很轻松的拿到了想要的翻译结果。这也能证明，当我们遇到大量文本翻译是，我们应该采用 POST 的方式来使用 Google Translate API 服务。\r\n好了，抓包分析的工作算是完成了，我将在下一篇文章中介绍如何写一个工具来帮我们完成批量翻译的工作。下篇再见吧！',262,'http://codingcoder.com/?p=265',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (266,1,'2015-11-08 18:43:20','2015-11-08 10:43:20','在<a href=\"http://www.codingcoder.com/google-translate-api-fen-xi/\">Google Translate API 抓包分析</a>一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\n1. 如何发送请求\n\n<ol>\n<li>如何解析请求得到的 Response 结果\n下面是核心代码，很简单。我们用 <code>WWW</code> 组件发送请求，并对 Response 使用<a href=\"http://wiki.unity3d.com/index.php/SimpleJSON\"><code>SimpleJSON</code></a>进行解析，然后得到对应的<code>targetText</code>，这样就获取到了翻译后的结果。</li>\n</ol>\n\n<pre><code><br />IEnumerator LoadGoogleTranslate ()\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\nstring url = \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\";\n\nWWW www = new WWW (url, null, headers);\n\nyield return www;\nvar json = SimpleJSON.JSONNode.Parse (www.text);\n\nvar targetText = json [0] [0] [0];\n\n}\n\n</code></pre>\n\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\n要做到使用简单，必然要做到暴露的接口简洁明了。\n\n<pre><code><br />public class GoogleTranslate : MonoSingleton\n\n{\n\npublic string TargetText;\npublic override void Init ()\n\n{\n\n}\n\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nthis.TargetText = null;\n\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\n\n}\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\n\nstring baseUrl = \"https://translate.google.com/translate_a/single\";\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"client\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"bd\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ex\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ld\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"md\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"qca\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rw\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rm\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ss\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"at\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ie\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"oe\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"source\", \"bh\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ssel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tsel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"kc\", \"1\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tk\", \"320640|181903\"));\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"sl\", sourceLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tl\", targetLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"hl\", targetLanguage));\nstring url = string.Format (\"{0}{1}\", baseUrl, GoogleTranslate.ToQueryString (parameters));\nWWWForm form = new WWWForm ();\n\nform.AddField (\"q\", sourceText);\nWWW www = new WWW (url, form.data, headers);\n\nyield return www;\n\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\n\nif (GoogleTranslate.IsValidJSONFormat (json)) {\n\nDebug.Log (json);\nvar aTargetText = json [0] [0] [0];\n\nif (aTargetText != null) {\n\nthis.TargetText = aTargetText;\n\n}\n\nDebug.Log (this.TargetText);\n\nyield return this.TargetText;\n\n} else {\n\nyield return null;\n\n}\n\n}\n\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\n\n{\n\nif (json == null)\n\nreturn false;\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\n\nif (json.Count &gt; 0) {\n\nvar subArray1 = json [0];\n\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\n\nvar subsubArray1 = subArray1 [0];\n\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\n\nreturn true;\n\n}\n\n}\n\n}\n\n}\nreturn false;\n\n}\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\n\n{\n\nList strings = new List ();\n\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\n\nstring aParameterString = string.Format (\"{0}={1}\", WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\n\nstrings.Add (aParameterString);\n\n}\nreturn \"?\" + string.Join (\"&amp;\", strings.ToArray ());\n\n}\n\n}\n\n</code></pre>','在 Unity 中使用 Google Translate','','publish','open','open','','%e5%9c%a8-unity-%e4%b8%ad%e4%bd%bf%e7%94%a8-google-translate','','','2016-03-06 18:45:39','2016-03-06 10:45:39','在[Google Translate API 抓包分析](http://www.codingcoder.com/google-translate-api-fen-xi/)一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\r\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\r\n1. 如何发送请求\r\n\r\n2. 如何解析请求得到的 Response 结果\r\n下面是核心代码，很简单。我们用 `WWW` 组件发送请求，并对 Response 使用[`SimpleJSON`](http://wiki.unity3d.com/index.php/SimpleJSON)进行解析，然后得到对应的`targetText`，这样就获取到了翻译后的结果。\r\n\r\n```\r\n\r\nIEnumerator LoadGoogleTranslate ()\r\n\r\n{\r\n\r\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\r\n\r\nheaders.Add (&quot;User-Agent&quot;,\r\n\r\n&quot;Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)&quot;);\r\nstring url = &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;;\r\n\r\nWWW www = new WWW (url, null, headers);\r\n\r\nyield return www;\r\nvar json = SimpleJSON.JSONNode.Parse (www.text);\r\n\r\nvar targetText = json [0] [0] [0];\r\n\r\n}\r\n\r\n```\r\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\r\n要做到使用简单，必然要做到暴露的接口简洁明了。\r\n```\r\n\r\npublic class GoogleTranslate : MonoSingleton\r\n\r\n{\r\n\r\npublic string TargetText;\r\npublic override void Init ()\r\n\r\n{\r\n\r\n}\r\n\r\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\r\n\r\n{\r\n\r\nthis.TargetText = null;\r\n\r\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\r\n\r\n}\r\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\r\n\r\n{\r\n\r\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\r\n\r\nheaders.Add (&quot;User-Agent&quot;,\r\n\r\n&quot;Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)&quot;);\r\n\r\nstring baseUrl = &quot;https://translate.google.com/translate_a/single&quot;;\r\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;client&quot;, &quot;t&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;bd&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ex&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ld&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;md&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;qca&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;rw&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;rm&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ss&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;t&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;at&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;ie&quot;, &quot;UTF-8&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;oe&quot;, &quot;UTF-8&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;source&quot;, &quot;bh&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;ssel&quot;, &quot;0&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tsel&quot;, &quot;0&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;kc&quot;, &quot;1&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tk&quot;, &quot;320640|181903&quot;));\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;sl&quot;, sourceLanguage));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tl&quot;, targetLanguage));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;hl&quot;, targetLanguage));\r\nstring url = string.Format (&quot;{0}{1}&quot;, baseUrl, GoogleTranslate.ToQueryString (parameters));\r\nWWWForm form = new WWWForm ();\r\n\r\nform.AddField (&quot;q&quot;, sourceText);\r\nWWW www = new WWW (url, form.data, headers);\r\n\r\nyield return www;\r\n\r\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\r\n\r\nif (GoogleTranslate.IsValidJSONFormat (json)) {\r\n\r\nDebug.Log (json);\r\nvar aTargetText = json [0] [0] [0];\r\n\r\nif (aTargetText != null) {\r\n\r\nthis.TargetText = aTargetText;\r\n\r\n}\r\n\r\nDebug.Log (this.TargetText);\r\n\r\nyield return this.TargetText;\r\n\r\n} else {\r\n\r\nyield return null;\r\n\r\n}\r\n\r\n}\r\n\r\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\r\n\r\n{\r\n\r\nif (json == null)\r\n\r\nreturn false;\r\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\r\n\r\nif (json.Count &gt; 0) {\r\n\r\nvar subArray1 = json [0];\r\n\r\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\r\n\r\nvar subsubArray1 = subArray1 [0];\r\n\r\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\r\n\r\nreturn true;\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\nreturn false;\r\n\r\n}\r\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\r\n\r\n{\r\n\r\nList strings = new List ();\r\n\r\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\r\n\r\nstring aParameterString = string.Format (&quot;{0}={1}&quot;, WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\r\n\r\nstrings.Add (aParameterString);\r\n\r\n}\r\nreturn &quot;?&quot; + string.Join (&quot;&amp;&quot;, strings.ToArray ());\r\n\r\n}\r\n\r\n}\r\n\r\n```',0,'http://codingcoder.com/?p=266',0,'post','',0);
INSERT INTO `wp_posts` VALUES (268,1,'2016-03-06 18:45:39','2016-03-06 10:45:39','在<a href=\"http://www.codingcoder.com/google-translate-api-fen-xi/\">Google Translate API 抓包分析</a>一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\n1. 如何发送请求\n\n<ol>\n<li>如何解析请求得到的 Response 结果\n下面是核心代码，很简单。我们用 <code>WWW</code> 组件发送请求，并对 Response 使用<a href=\"http://wiki.unity3d.com/index.php/SimpleJSON\"><code>SimpleJSON</code></a>进行解析，然后得到对应的<code>targetText</code>，这样就获取到了翻译后的结果。</li>\n</ol>\n\n<pre><code><br />IEnumerator LoadGoogleTranslate ()\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\nstring url = \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\";\n\nWWW www = new WWW (url, null, headers);\n\nyield return www;\nvar json = SimpleJSON.JSONNode.Parse (www.text);\n\nvar targetText = json [0] [0] [0];\n\n}\n\n</code></pre>\n\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\n要做到使用简单，必然要做到暴露的接口简洁明了。\n\n<pre><code><br />public class GoogleTranslate : MonoSingleton\n\n{\n\npublic string TargetText;\npublic override void Init ()\n\n{\n\n}\n\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nthis.TargetText = null;\n\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\n\n}\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\n\nstring baseUrl = \"https://translate.google.com/translate_a/single\";\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"client\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"bd\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ex\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ld\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"md\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"qca\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rw\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rm\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ss\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"at\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ie\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"oe\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"source\", \"bh\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ssel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tsel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"kc\", \"1\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tk\", \"320640|181903\"));\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"sl\", sourceLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tl\", targetLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"hl\", targetLanguage));\nstring url = string.Format (\"{0}{1}\", baseUrl, GoogleTranslate.ToQueryString (parameters));\nWWWForm form = new WWWForm ();\n\nform.AddField (\"q\", sourceText);\nWWW www = new WWW (url, form.data, headers);\n\nyield return www;\n\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\n\nif (GoogleTranslate.IsValidJSONFormat (json)) {\n\nDebug.Log (json);\nvar aTargetText = json [0] [0] [0];\n\nif (aTargetText != null) {\n\nthis.TargetText = aTargetText;\n\n}\n\nDebug.Log (this.TargetText);\n\nyield return this.TargetText;\n\n} else {\n\nyield return null;\n\n}\n\n}\n\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\n\n{\n\nif (json == null)\n\nreturn false;\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\n\nif (json.Count &gt; 0) {\n\nvar subArray1 = json [0];\n\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\n\nvar subsubArray1 = subArray1 [0];\n\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\n\nreturn true;\n\n}\n\n}\n\n}\n\n}\nreturn false;\n\n}\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\n\n{\n\nList strings = new List ();\n\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\n\nstring aParameterString = string.Format (\"{0}={1}\", WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\n\nstrings.Add (aParameterString);\n\n}\nreturn \"?\" + string.Join (\"&amp;\", strings.ToArray ());\n\n}\n\n}\n\n</code></pre>','在 Unity 中使用 Google Translate','','inherit','closed','closed','','266-revision-v1','','','2016-03-06 18:45:39','2016-03-06 10:45:39','在[Google Translate API 抓包分析](http://www.codingcoder.com/google-translate-api-fen-xi/)一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\r\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\r\n1. 如何发送请求\r\n\r\n2. 如何解析请求得到的 Response 结果\r\n下面是核心代码，很简单。我们用 `WWW` 组件发送请求，并对 Response 使用[`SimpleJSON`](http://wiki.unity3d.com/index.php/SimpleJSON)进行解析，然后得到对应的`targetText`，这样就获取到了翻译后的结果。\r\n\r\n```\r\n\r\nIEnumerator LoadGoogleTranslate ()\r\n\r\n{\r\n\r\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\r\n\r\nheaders.Add (&quot;User-Agent&quot;,\r\n\r\n&quot;Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)&quot;);\r\nstring url = &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;;\r\n\r\nWWW www = new WWW (url, null, headers);\r\n\r\nyield return www;\r\nvar json = SimpleJSON.JSONNode.Parse (www.text);\r\n\r\nvar targetText = json [0] [0] [0];\r\n\r\n}\r\n\r\n```\r\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\r\n要做到使用简单，必然要做到暴露的接口简洁明了。\r\n```\r\n\r\npublic class GoogleTranslate : MonoSingleton\r\n\r\n{\r\n\r\npublic string TargetText;\r\npublic override void Init ()\r\n\r\n{\r\n\r\n}\r\n\r\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\r\n\r\n{\r\n\r\nthis.TargetText = null;\r\n\r\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\r\n\r\n}\r\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\r\n\r\n{\r\n\r\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\r\n\r\nheaders.Add (&quot;User-Agent&quot;,\r\n\r\n&quot;Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)&quot;);\r\n\r\nstring baseUrl = &quot;https://translate.google.com/translate_a/single&quot;;\r\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;client&quot;, &quot;t&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;bd&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ex&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ld&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;md&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;qca&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;rw&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;rm&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ss&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;t&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;at&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;ie&quot;, &quot;UTF-8&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;oe&quot;, &quot;UTF-8&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;source&quot;, &quot;bh&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;ssel&quot;, &quot;0&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tsel&quot;, &quot;0&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;kc&quot;, &quot;1&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tk&quot;, &quot;320640|181903&quot;));\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;sl&quot;, sourceLanguage));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tl&quot;, targetLanguage));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;hl&quot;, targetLanguage));\r\nstring url = string.Format (&quot;{0}{1}&quot;, baseUrl, GoogleTranslate.ToQueryString (parameters));\r\nWWWForm form = new WWWForm ();\r\n\r\nform.AddField (&quot;q&quot;, sourceText);\r\nWWW www = new WWW (url, form.data, headers);\r\n\r\nyield return www;\r\n\r\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\r\n\r\nif (GoogleTranslate.IsValidJSONFormat (json)) {\r\n\r\nDebug.Log (json);\r\nvar aTargetText = json [0] [0] [0];\r\n\r\nif (aTargetText != null) {\r\n\r\nthis.TargetText = aTargetText;\r\n\r\n}\r\n\r\nDebug.Log (this.TargetText);\r\n\r\nyield return this.TargetText;\r\n\r\n} else {\r\n\r\nyield return null;\r\n\r\n}\r\n\r\n}\r\n\r\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\r\n\r\n{\r\n\r\nif (json == null)\r\n\r\nreturn false;\r\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\r\n\r\nif (json.Count &gt; 0) {\r\n\r\nvar subArray1 = json [0];\r\n\r\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\r\n\r\nvar subsubArray1 = subArray1 [0];\r\n\r\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\r\n\r\nreturn true;\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\nreturn false;\r\n\r\n}\r\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\r\n\r\n{\r\n\r\nList strings = new List ();\r\n\r\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\r\n\r\nstring aParameterString = string.Format (&quot;{0}={1}&quot;, WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\r\n\r\nstrings.Add (aParameterString);\r\n\r\n}\r\nreturn &quot;?&quot; + string.Join (&quot;&amp;&quot;, strings.ToArray ());\r\n\r\n}\r\n\r\n}\r\n\r\n```',266,'http://codingcoder.com/?p=268',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (267,1,'2016-03-06 18:45:13','2016-03-06 10:45:13','在<a href=\"http://www.codingcoder.com/google-translate-api-fen-xi/\">Google Translate API 抓包分析</a>一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\n1. 如何发送请求\n\n<ol>\n<li>如何解析请求得到的 Response 结果\n下面是核心代码，很简单。我们用 <code>WWW</code> 组件发送请求，并对 Response 使用<a href=\"http://wiki.unity3d.com/index.php/SimpleJSON\"><code>SimpleJSON</code></a>进行解析，然后得到对应的<code>targetText</code>，这样就获取到了翻译后的结果。</li>\n</ol>\n\n<pre><code><br />IEnumerator LoadGoogleTranslate ()\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\nstring url = \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\";\n\nWWW www = new WWW (url, null, headers);\n\nyield return www;\nvar json = SimpleJSON.JSONNode.Parse (www.text);\n\nvar targetText = json [0] [0] [0];\n\n}\n\n</code></pre>\n\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\n要做到使用简单，必然要做到暴露的接口简洁明了。\n\n<pre><code><br />public class GoogleTranslate : MonoSingleton&lt;GoogleTranslate&gt;\n\n{\n\npublic string TargetText;\npublic override void Init ()\n\n{\n\n}\n\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nthis.TargetText = null;\n\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\n\n}\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\n\n \n\nstring baseUrl = \"https://translate.google.com/translate_a/single\";\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"client\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"bd\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ex\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ld\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"md\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"qca\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rw\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rm\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ss\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"at\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ie\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"oe\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"source\", \"bh\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ssel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tsel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"kc\", \"1\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tk\", \"320640|181903\"));\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"sl\", sourceLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tl\", targetLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"hl\", targetLanguage));\nstring url = string.Format (\"{0}{1}\", baseUrl, GoogleTranslate.ToQueryString (parameters));\nWWWForm form = new WWWForm ();\n\nform.AddField (\"q\", sourceText);\nWWW www = new WWW (url, form.data, headers);\n\nyield return www;\n\n \n\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\n\nif (GoogleTranslate.IsValidJSONFormat (json)) {\n\nDebug.Log (json);\nvar aTargetText = json [0] [0] [0];\n\nif (aTargetText != null) {\n\nthis.TargetText = aTargetText;\n\n}\n\nDebug.Log (this.TargetText);\n\nyield return this.TargetText;\n\n} else {\n\nyield return null;\n\n}\n\n}\n\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\n\n{\n\nif (json == null)\n\nreturn false;\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\n\nif (json.Count &gt; 0) {\n\nvar subArray1 = json [0];\n\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\n\nvar subsubArray1 = subArray1 [0];\n\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\n\nreturn true;\n\n}\n\n}\n\n}\n\n}\nreturn false;\n\n}\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\n\n{\n\nList&lt;string&gt; strings = new List&lt;string&gt; ();\n\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\n\nstring aParameterString = string.Format (\"{0}={1}\", WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\n\nstrings.Add (aParameterString);\n\n}\nreturn \"?\" + string.Join (\"&amp;\", strings.ToArray ());\n\n}\n\n}\n\n</code></pre>','在 Unity 中使用 Google Translate','','inherit','closed','closed','','266-revision-v1','','','2016-03-06 18:45:13','2016-03-06 10:45:13','在[Google Translate API 抓包分析](http://www.codingcoder.com/google-translate-api-fen-xi/)一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\r\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\r\n1. 如何发送请求\r\n\r\n2. 如何解析请求得到的 Response 结果\r\n下面是核心代码，很简单。我们用 `WWW` 组件发送请求，并对 Response 使用[`SimpleJSON`](http://wiki.unity3d.com/index.php/SimpleJSON)进行解析，然后得到对应的`targetText`，这样就获取到了翻译后的结果。\r\n\r\n```\r\n\r\nIEnumerator LoadGoogleTranslate ()\r\n\r\n{\r\n\r\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\r\n\r\nheaders.Add (&quot;User-Agent&quot;,\r\n\r\n&quot;Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)&quot;);\r\nstring url = &quot;https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world&quot;;\r\n\r\nWWW www = new WWW (url, null, headers);\r\n\r\nyield return www;\r\nvar json = SimpleJSON.JSONNode.Parse (www.text);\r\n\r\nvar targetText = json [0] [0] [0];\r\n\r\n}\r\n\r\n```\r\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\r\n要做到使用简单，必然要做到暴露的接口简洁明了。\r\n```\r\n\r\npublic class GoogleTranslate : MonoSingleton&lt;GoogleTranslate&gt;\r\n\r\n{\r\n\r\npublic string TargetText;\r\npublic override void Init ()\r\n\r\n{\r\n\r\n}\r\n\r\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\r\n\r\n{\r\n\r\nthis.TargetText = null;\r\n\r\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\r\n\r\n}\r\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\r\n\r\n{\r\n\r\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\r\n\r\nheaders.Add (&quot;User-Agent&quot;,\r\n\r\n&quot;Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)&quot;);\r\n\r\n&nbsp;\r\n\r\nstring baseUrl = &quot;https://translate.google.com/translate_a/single&quot;;\r\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;client&quot;, &quot;t&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;bd&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ex&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ld&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;md&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;qca&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;rw&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;rm&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;ss&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;t&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;dt&quot;, &quot;at&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;ie&quot;, &quot;UTF-8&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;oe&quot;, &quot;UTF-8&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;source&quot;, &quot;bh&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;ssel&quot;, &quot;0&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tsel&quot;, &quot;0&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;kc&quot;, &quot;1&quot;));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tk&quot;, &quot;320640|181903&quot;));\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;sl&quot;, sourceLanguage));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;tl&quot;, targetLanguage));\r\n\r\nparameters.Add (new KeyValuePair&lt;string, string&gt; (&quot;hl&quot;, targetLanguage));\r\nstring url = string.Format (&quot;{0}{1}&quot;, baseUrl, GoogleTranslate.ToQueryString (parameters));\r\nWWWForm form = new WWWForm ();\r\n\r\nform.AddField (&quot;q&quot;, sourceText);\r\nWWW www = new WWW (url, form.data, headers);\r\n\r\nyield return www;\r\n\r\n&nbsp;\r\n\r\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\r\n\r\nif (GoogleTranslate.IsValidJSONFormat (json)) {\r\n\r\nDebug.Log (json);\r\nvar aTargetText = json [0] [0] [0];\r\n\r\nif (aTargetText != null) {\r\n\r\nthis.TargetText = aTargetText;\r\n\r\n}\r\n\r\nDebug.Log (this.TargetText);\r\n\r\nyield return this.TargetText;\r\n\r\n} else {\r\n\r\nyield return null;\r\n\r\n}\r\n\r\n}\r\n\r\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\r\n\r\n{\r\n\r\nif (json == null)\r\n\r\nreturn false;\r\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\r\n\r\nif (json.Count &gt; 0) {\r\n\r\nvar subArray1 = json [0];\r\n\r\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\r\n\r\nvar subsubArray1 = subArray1 [0];\r\n\r\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\r\n\r\nreturn true;\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\nreturn false;\r\n\r\n}\r\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\r\n\r\n{\r\n\r\nList&lt;string&gt; strings = new List&lt;string&gt; ();\r\n\r\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\r\n\r\nstring aParameterString = string.Format (&quot;{0}={1}&quot;, WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\r\n\r\nstrings.Add (aParameterString);\r\n\r\n}\r\nreturn &quot;?&quot; + string.Join (&quot;&amp;&quot;, strings.ToArray ());\r\n\r\n}\r\n\r\n}\r\n\r\n```',266,'http://codingcoder.com/?p=267',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (269,1,'2016-03-06 18:46:25','2016-03-06 10:46:25','在<a href=\"http://www.codingcoder.com/google-translate-api-fen-xi/\">Google Translate API 抓包分析</a>一文中，我们已经知道了 Google Translate 使用的 API，这篇文章我们就来实现一个可以在 Unity 中的使用的小工具，来帮我们自动的完成批量翻译的工作。\n首先我们准备使用 C# 作为实现语言，简单说来我们需要考虑下面两点：\n1. 如何发送请求\n\n<ol>\n<li>如何解析请求得到的 Response 结果\n下面是核心代码，很简单。我们用 <code>WWW</code> 组件发送请求，并对 Response 使用<a href=\"http://wiki.unity3d.com/index.php/SimpleJSON\"><code>SimpleJSON</code></a>进行解析，然后得到对应的<code>targetText</code>，这样就获取到了翻译后的结果。</li>\n</ol>\n\n<pre><code><br />IEnumerator LoadGoogleTranslate ()\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\nstring url = \"https://translate.google.com/translate_a/single?client=t&amp;sl=en&amp;tl=zh-CN&amp;hl=zh-CN&amp;dt=bd&amp;dt=ex&amp;dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;dt=at&amp;ie=UTF-8&amp;oe=UTF-8&amp;source=bh&amp;ssel=0&amp;tsel=0&amp;kc=1&amp;tk=320640|181903&amp;q=hello%20world\";\n\nWWW www = new WWW (url, null, headers);\n\nyield return www;\nvar json = SimpleJSON.JSONNode.Parse (www.text);\n\nvar targetText = json [0] [0] [0];\n\n}\n\n</code></pre>\n\n上面的代码只是功能测试代码，当我们测试成功后，也就意味着方案的可行性已经测试通过。接下来，我们就需要考虑下如何使这个自动批量翻译的工具做到使用简单又好用了。\n要做到使用简单，必然要做到暴露的接口简洁明了。\n\n<pre><code><br />public class GoogleTranslate : MonoSingleton\n\n{\n\npublic string TargetText;\npublic override void Init ()\n\n{\n\n}\n\npublic void Translate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nthis.TargetText = null;\n\nStartCoroutine (DoTranslate (sourceText, sourceLanguage, targetLanguage));\n\n}\nIEnumerator DoTranslate (string sourceText, string sourceLanguage, string targetLanguage)\n\n{\n\nDictionary&lt;string, string&gt; headers = new Dictionary&lt;string, string&gt; ();\n\nheaders.Add (\"User-Agent\",\n\n\"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)\");\n\nstring baseUrl = \"https://translate.google.com/translate_a/single\";\nList&lt;KeyValuePair&lt;string, string&gt;&gt; parameters = new List&lt;KeyValuePair&lt;string, string&gt;&gt; ();\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"client\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"bd\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ex\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ld\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"md\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"qca\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rw\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"rm\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"ss\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"t\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"dt\", \"at\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ie\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"oe\", \"UTF-8\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"source\", \"bh\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"ssel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tsel\", \"0\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"kc\", \"1\"));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tk\", \"320640|181903\"));\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"sl\", sourceLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"tl\", targetLanguage));\n\nparameters.Add (new KeyValuePair&lt;string, string&gt; (\"hl\", targetLanguage));\nstring url = string.Format (\"{0}{1}\", baseUrl, GoogleTranslate.ToQueryString (parameters));\nWWWForm form = new WWWForm ();\n\nform.AddField (\"q\", sourceText);\nWWW www = new WWW (url, form.data, headers);\n\nyield return www;\n\nSimpleJSON.JSONArray json = SimpleJSON.JSONNode.Parse (www.text) as SimpleJSON.JSONArray;\n\nif (GoogleTranslate.IsValidJSONFormat (json)) {\n\nDebug.Log (json);\nvar aTargetText = json [0] [0] [0];\n\nif (aTargetText != null) {\n\nthis.TargetText = aTargetText;\n\n}\n\nDebug.Log (this.TargetText);\n\nyield return this.TargetText;\n\n} else {\n\nyield return null;\n\n}\n\n}\n\nstatic bool IsValidJSONFormat (SimpleJSON.JSONArray json)\n\n{\n\nif (json == null)\n\nreturn false;\nif (json.GetType () == typeof(SimpleJSON.JSONArray)) {\n\nif (json.Count &gt; 0) {\n\nvar subArray1 = json [0];\n\nif (subArray1 != null &amp;&amp; subArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subArray1.Count &gt; 0) {\n\nvar subsubArray1 = subArray1 [0];\n\nif (subsubArray1 != null &amp;&amp; subsubArray1.GetType () == typeof(SimpleJSON.JSONArray) &amp;&amp; subsubArray1.Count &gt; 0) {\n\nreturn true;\n\n}\n\n}\n\n}\n\n}\nreturn false;\n\n}\nstatic string ToQueryString (List&lt;KeyValuePair&lt;string, string&gt;&gt; parameters)\n\n{\n\nList strings = new List ();\n\nforeach (KeyValuePair&lt;string, string&gt; aPair in parameters) {\n\nstring aParameterString = string.Format (\"{0}={1}\", WWW.EscapeURL (aPair.Key), WWW.EscapeURL (aPair.Value));\n\nstrings.Add (aParameterString);\n\n}\nreturn \"?\" + string.Join (\"&amp;\", strings.ToArray ());\n\n}\n\n}\n\n</code></pre>','在 Unity 中使用 Google Translate','','inherit','closed','closed','','266-autosave-v1','','','2016-03-06 18:46:25','2016-03-06 10:46:25','',266,'http://codingcoder.com/?p=269',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (270,1,'2015-11-15 18:47:38','2015-11-15 10:47:38','<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Minimal_Shader\">GLSL_Programming/Unity/Minimal_Shader</a>','Unity 中最简单的 GLSL Shader','','publish','open','open','','unity-%e4%b8%ad%e6%9c%80%e7%ae%80%e5%8d%95%e7%9a%84-glsl-shader','','','2016-03-06 18:50:15','2016-03-06 10:50:15','[GLSL_Programming/Unity/Minimal_Shader](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Minimal_Shader)',0,'http://codingcoder.com/?p=270',0,'post','',0);
INSERT INTO `wp_posts` VALUES (271,1,'2016-03-06 18:49:14','2016-03-06 10:49:14','<a href=\"https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Minimal_Shader\">GLSL_Programming/Unity/Minimal_Shader</a>','Unity 中最简单的 GLSL Shader','','inherit','closed','closed','','270-revision-v1','','','2016-03-06 18:49:14','2016-03-06 10:49:14','[GLSL_Programming/Unity/Minimal_Shader](https://en.wikibooks.org/wiki/GLSL_Programming/Unity/Minimal_Shader)',270,'http://codingcoder.com/?p=271',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (272,1,'2015-11-19 18:50:20','2015-11-19 10:50:20','UGUI 中默认的渲染顺序默认是按照 GameObject 添加的顺序，比如：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png\" rel=\"attachment wp-att-100\"><img class=\"alignnone size-medium wp-image-100\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM-300x144.png\" alt=\"Screen-Shot-2015-11-19-at-8-09-23-PM\" width=\"300\" height=\"144\" /></a>\n\nPanelGreen 会显示在 PanelRed 的前面。那么如果我想让 PanelRed 显示在 PanelGreen 的前面怎么办呢？\n\n我们只需要改变 Hierarchy 的先后顺序即可改变 GameObject 的渲染顺序，如下图：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png\" rel=\"attachment wp-att-101\"><img class=\"alignnone size-medium wp-image-101\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM-300x156.png\" alt=\"Screen-Shot-2015-11-19-at-8-12-04-PM\" width=\"300\" height=\"156\" /></a>\n\n但是，有写时候，我们即不想破坏 Hierarchy 的顺序，又想改变 GameObject 的渲染顺序，那该怎么办呢？\n\n其实很简单，我们可以使用 Canvas 的 Override Sorting 来改变渲染顺序。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png\" rel=\"attachment wp-att-104\"><img class=\"alignnone size-medium wp-image-104\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM-300x100.png\" alt=\"Screen-Shot-2015-11-19-at-8-19-46-PM\" width=\"300\" height=\"100\" /></a>\n\n我们给 PanelRed 上添加了一个 Canvas 组件，并设置了 Override Sorting 属性，这样就很轻松的改变了渲染顺序。\n\n我们再来看看 Canvas 这个 GameObject 的组件：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png\" rel=\"attachment wp-att-105\"><img class=\"alignnone size-medium wp-image-105\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM-300x105.png\" alt=\"Screen-Shot-2015-11-19-at-8-23-07-PM\" width=\"300\" height=\"105\" /></a>\n\n所以，在对 Canvas 的子 GameObject 使用 Canvas Override Sorting 改变显示顺序时，需要根据它所属的父 Canvas 的 Sorting Layer 的值来设定。\n\n特别注意：我在使用 Canvas 的 Sorting Layer 时，出现了 touch 事件的传递无法捕获或者无法拦截传递到下层的问题，这种情况，你需要添加一个 Graphic Raycaster 组件就可以了。这应该是 Unity 的 bug，导致 touch 事件的分发出现了问题。','在 UGUI 中使用 Canvas Override Sorting 改变渲染顺序','','publish','open','open','','%e5%9c%a8-ugui-%e4%b8%ad%e4%bd%bf%e7%94%a8-canvas-override-sorting-%e6%94%b9%e5%8f%98%e6%b8%b2%e6%9f%93%e9%a1%ba%e5%ba%8f','','','2016-03-06 21:13:28','2016-03-06 13:13:28','UGUI 中默认的渲染顺序默认是按照 GameObject 添加的顺序，比如：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png\" rel=\"attachment wp-att-100\"><img class=\"alignnone size-medium wp-image-100\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM-300x144.png\" alt=\"Screen-Shot-2015-11-19-at-8-09-23-PM\" width=\"300\" height=\"144\" /></a>\r\n\r\nPanelGreen 会显示在 PanelRed 的前面。那么如果我想让 PanelRed 显示在 PanelGreen 的前面怎么办呢？\r\n\r\n我们只需要改变 Hierarchy 的先后顺序即可改变 GameObject 的渲染顺序，如下图：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png\" rel=\"attachment wp-att-101\"><img class=\"alignnone size-medium wp-image-101\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM-300x156.png\" alt=\"Screen-Shot-2015-11-19-at-8-12-04-PM\" width=\"300\" height=\"156\" /></a>\r\n\r\n但是，有写时候，我们即不想破坏 Hierarchy 的顺序，又想改变 GameObject 的渲染顺序，那该怎么办呢？\r\n\r\n其实很简单，我们可以使用 Canvas 的 Override Sorting 来改变渲染顺序。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png\" rel=\"attachment wp-att-104\"><img class=\"alignnone size-medium wp-image-104\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM-300x100.png\" alt=\"Screen-Shot-2015-11-19-at-8-19-46-PM\" width=\"300\" height=\"100\" /></a>\r\n\r\n我们给 PanelRed 上添加了一个 Canvas 组件，并设置了 Override Sorting 属性，这样就很轻松的改变了渲染顺序。\r\n\r\n我们再来看看 Canvas 这个 GameObject 的组件：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png\" rel=\"attachment wp-att-105\"><img class=\"alignnone size-medium wp-image-105\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM-300x105.png\" alt=\"Screen-Shot-2015-11-19-at-8-23-07-PM\" width=\"300\" height=\"105\" /></a>\r\n\r\n所以，在对 Canvas 的子 GameObject 使用 Canvas Override Sorting 改变显示顺序时，需要根据它所属的父 Canvas 的 Sorting Layer 的值来设定。\r\n\r\n特别注意：我在使用 Canvas 的 Sorting Layer 时，出现了 touch 事件的传递无法捕获或者无法拦截传递到下层的问题，这种情况，你需要添加一个 Graphic Raycaster 组件就可以了。这应该是 Unity 的 bug，导致 touch 事件的分发出现了问题。',0,'http://codingcoder.com/?p=272',0,'post','',0);
INSERT INTO `wp_posts` VALUES (273,1,'2016-03-06 18:53:35','2016-03-06 10:53:35','UGUI 中默认的渲染顺序默认是按照 GameObject 添加的顺序，比如：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png\" rel=\"attachment wp-att-100\"><img class=\"alignnone size-medium wp-image-100\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM-300x144.png\" alt=\"Screen-Shot-2015-11-19-at-8-09-23-PM\" width=\"300\" height=\"144\" /></a>\n\nPanelGreen 会显示在 PanelRed 的前面。那么如果我想让 PanelRed 显示在 PanelGreen 的前面怎么办呢？\n\n我们只需要改变 Hierarchy 的先后顺序即可改变 GameObject 的渲染顺序，如下图：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png\" rel=\"attachment wp-att-101\"><img class=\"alignnone size-medium wp-image-101\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM-300x156.png\" alt=\"Screen-Shot-2015-11-19-at-8-12-04-PM\" width=\"300\" height=\"156\" /></a>\n\n但是，有写时候，我们即不想破坏 Hierarchy 的顺序，又想改变 GameObject 的渲染顺序，那该怎么办呢？\n\n其实很简单，我们可以使用 Canvas 的 Override Sorting 来改变渲染顺序。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png\" rel=\"attachment wp-att-104\"><img class=\"alignnone size-medium wp-image-104\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM-300x100.png\" alt=\"Screen-Shot-2015-11-19-at-8-19-46-PM\" width=\"300\" height=\"100\" /></a>\n\n我们给 PanelRed 上添加了一个 Canvas 组件，并设置了 Override Sorting 属性，这样就很轻松的改变了渲染顺序。\n\n我们再来看看 Canvas 这个 GameObject 的组件：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png\" rel=\"attachment wp-att-105\"><img class=\"alignnone size-medium wp-image-105\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM-300x105.png\" alt=\"Screen-Shot-2015-11-19-at-8-23-07-PM\" width=\"300\" height=\"105\" /></a>\n\n所以，在对 Canvas 的子 GameObject 使用 Canvas Override Sorting 改变显示顺序时，需要根据它所属的父 Canvas 的 Sorting Layer 的值来设定。\n\n特别注意：我在使用 Canvas 的 Sorting Layer 时，出现了 touch 事件的传递无法捕获或者无法拦截传递到下层的问题，这种情况，你需要添加一个 Graphic Raycaster 组件就可以了。这应该是 Unity 的 bug，导致 touch 事件的分发出现了问题。','在 UGUI 中使用 Canvas Override Sorting 改变渲染顺序','','inherit','closed','closed','','272-revision-v1','','','2016-03-06 18:53:35','2016-03-06 10:53:35','UGUI 中默认的渲染顺序默认是按照 GameObject 添加的顺序，比如：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM.png\" rel=\"attachment wp-att-100\"><img class=\"alignnone size-medium wp-image-100\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-09-23-PM-300x144.png\" alt=\"Screen-Shot-2015-11-19-at-8-09-23-PM\" width=\"300\" height=\"144\" /></a>\r\n\r\nPanelGreen 会显示在 PanelRed 的前面。那么如果我想让 PanelRed 显示在 PanelGreen 的前面怎么办呢？\r\n\r\n我们只需要改变 Hierarchy 的先后顺序即可改变 GameObject 的渲染顺序，如下图：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM.png\" rel=\"attachment wp-att-101\"><img class=\"alignnone size-medium wp-image-101\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-12-04-PM-300x156.png\" alt=\"Screen-Shot-2015-11-19-at-8-12-04-PM\" width=\"300\" height=\"156\" /></a>\r\n\r\n但是，有写时候，我们即不想破坏 Hierarchy 的顺序，又想改变 GameObject 的渲染顺序，那该怎么办呢？\r\n\r\n其实很简单，我们可以使用 Canvas 的 Override Sorting 来改变渲染顺序。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM.png\" rel=\"attachment wp-att-104\"><img class=\"alignnone size-medium wp-image-104\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-19-46-PM-300x100.png\" alt=\"Screen-Shot-2015-11-19-at-8-19-46-PM\" width=\"300\" height=\"100\" /></a>\r\n\r\n我们给 PanelRed 上添加了一个 Canvas 组件，并设置了 Override Sorting 属性，这样就很轻松的改变了渲染顺序。\r\n\r\n我们再来看看 Canvas 这个 GameObject 的组件：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM.png\" rel=\"attachment wp-att-105\"><img class=\"alignnone size-medium wp-image-105\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2015-11-19-at-8-23-07-PM-300x105.png\" alt=\"Screen-Shot-2015-11-19-at-8-23-07-PM\" width=\"300\" height=\"105\" /></a>\r\n\r\n所以，在对 Canvas 的子 GameObject 使用 Canvas Override Sorting 改变显示顺序时，需要根据它所属的父 Canvas 的 Sorting Layer 的值来设定。\r\n\r\n特别注意：我在使用 Canvas 的 Sorting Layer 时，出现了 touch 事件的传递无法捕获或者无法拦截传递到下层的问题，这种情况，你需要添加一个 Graphic Raycaster 组件就可以了。这应该是 Unity 的 bug，导致 touch 事件的分发出现了问题。',272,'http://codingcoder.com/?p=273',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (274,1,'2016-03-06 21:28:14','0000-00-00 00:00:00','#命名规范\n\n<ol>\n<li>变量命名</li>\n</ol>\n\n成员变量\n\n<ol>\n<li>函数命名</li>\n</ol>\n\n变量名，属性名，小写字母开始\n\npublic函数名，大写字母开始\n\nbool 类型的以 is, has, 等开头\n\n只要跨行，必须用{}包起来，不要写跨行的 return；除非能在一行内；\n\n每个函数尽量只做一件事情，不要做2件事情，从名字里看出功能\n\n如果你不能保证注释得到更新，那就别写注释\n\n尽量做到代码自注释，想象一下，一个月后你还能不能读懂自己写的代码，如果不能，那就是烂代码。\n\n对特别麻烦的业务逻辑，尽量写清楚注释，或者贴上产品文档的链接。\n\nvirtual public void OnDestroy ()\n\nvirtual is before\n\n如果是获取函数，一定要加 GetXXXFromXXX\n\n如果你不能很清楚的指导 foreach时的内存分配策略，就不要使用 foreach ，用 for 就可以了。\n\n#结构组织 MVC\n\n#性能注意\n\npixelPerfect\n\nmesh triangle count\n\neventSystem.update\n\nGraphicRaycaster\n\nmulti canvas\n\n#资源管理\n\n#真机测试\n\n#重构原则','Unity 开发代码规范','','draft','open','open','','','','','2016-03-06 21:28:14','2016-03-06 13:28:14','#命名规范\r\n\r\n1. 变量命名\r\n\r\n成员变量\r\n\r\n2. 函数命名\r\n\r\n变量名，属性名，小写字母开始\r\n\r\npublic函数名，大写字母开始\r\n\r\nbool 类型的以 is, has, 等开头\r\n\r\n只要跨行，必须用{}包起来，不要写跨行的 return；除非能在一行内；\r\n\r\n每个函数尽量只做一件事情，不要做2件事情，从名字里看出功能\r\n\r\n如果你不能保证注释得到更新，那就别写注释\r\n\r\n尽量做到代码自注释，想象一下，一个月后你还能不能读懂自己写的代码，如果不能，那就是烂代码。\r\n\r\n对特别麻烦的业务逻辑，尽量写清楚注释，或者贴上产品文档的链接。\r\n\r\nvirtual public void OnDestroy ()\r\n\r\nvirtual is before\r\n\r\n如果是获取函数，一定要加 GetXXXFromXXX\r\n\r\n如果你不能很清楚的指导 foreach时的内存分配策略，就不要使用 foreach ，用 for 就可以了。\r\n\r\n#结构组织 MVC\r\n\r\n#性能注意\r\n\r\npixelPerfect\r\n\r\nmesh triangle count\r\n\r\neventSystem.update\r\n\r\nGraphicRaycaster\r\n\r\nmulti canvas\r\n\r\n#资源管理\r\n\r\n#真机测试\r\n\r\n#重构原则',0,'http://codingcoder.com/?p=274',0,'post','',0);
INSERT INTO `wp_posts` VALUES (275,1,'2016-03-06 21:28:14','2016-03-06 13:28:14','#命名规范\n\n<ol>\n<li>变量命名</li>\n</ol>\n\n成员变量\n\n<ol>\n<li>函数命名</li>\n</ol>\n\n变量名，属性名，小写字母开始\n\npublic函数名，大写字母开始\n\nbool 类型的以 is, has, 等开头\n\n只要跨行，必须用{}包起来，不要写跨行的 return；除非能在一行内；\n\n每个函数尽量只做一件事情，不要做2件事情，从名字里看出功能\n\n如果你不能保证注释得到更新，那就别写注释\n\n尽量做到代码自注释，想象一下，一个月后你还能不能读懂自己写的代码，如果不能，那就是烂代码。\n\n对特别麻烦的业务逻辑，尽量写清楚注释，或者贴上产品文档的链接。\n\nvirtual public void OnDestroy ()\n\nvirtual is before\n\n如果是获取函数，一定要加 GetXXXFromXXX\n\n如果你不能很清楚的指导 foreach时的内存分配策略，就不要使用 foreach ，用 for 就可以了。\n\n#结构组织 MVC\n\n#性能注意\n\npixelPerfect\n\nmesh triangle count\n\neventSystem.update\n\nGraphicRaycaster\n\nmulti canvas\n\n#资源管理\n\n#真机测试\n\n#重构原则','Unity 开发代码规范','','inherit','closed','closed','','274-revision-v1','','','2016-03-06 21:28:14','2016-03-06 13:28:14','#命名规范\r\n\r\n1. 变量命名\r\n\r\n成员变量\r\n\r\n2. 函数命名\r\n\r\n变量名，属性名，小写字母开始\r\n\r\npublic函数名，大写字母开始\r\n\r\nbool 类型的以 is, has, 等开头\r\n\r\n只要跨行，必须用{}包起来，不要写跨行的 return；除非能在一行内；\r\n\r\n每个函数尽量只做一件事情，不要做2件事情，从名字里看出功能\r\n\r\n如果你不能保证注释得到更新，那就别写注释\r\n\r\n尽量做到代码自注释，想象一下，一个月后你还能不能读懂自己写的代码，如果不能，那就是烂代码。\r\n\r\n对特别麻烦的业务逻辑，尽量写清楚注释，或者贴上产品文档的链接。\r\n\r\nvirtual public void OnDestroy ()\r\n\r\nvirtual is before\r\n\r\n如果是获取函数，一定要加 GetXXXFromXXX\r\n\r\n如果你不能很清楚的指导 foreach时的内存分配策略，就不要使用 foreach ，用 for 就可以了。\r\n\r\n#结构组织 MVC\r\n\r\n#性能注意\r\n\r\npixelPerfect\r\n\r\nmesh triangle count\r\n\r\neventSystem.update\r\n\r\nGraphicRaycaster\r\n\r\nmulti canvas\r\n\r\n#资源管理\r\n\r\n#真机测试\r\n\r\n#重构原则',274,'http://codingcoder.com/?p=275',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (276,1,'2015-12-25 21:31:16','2015-12-25 13:31:16','在 UGUI 中在 GameObject 上面挂载 <code>Content Size Fitter</code> 时，会导致 <code>RectTransform</code> 的更新延迟一帧才能更新。\n\n当我们使用<code>RectTransform.rect.height</code>\n\n类似的属性时，就需要特别注意这一点，否则获取的是没有更新过的数值。\n\n我猜测，这应该是由于<code>Content Size Fitter</code>组件在每一帧的最后才去计算真正的高度等数值。\n\n我尝试了两种方案去解决这个问题，第一种方案是使用一个Coroutine 来延迟一帧后在获取<code>RectTransform</code>的相关属性。\n\n<pre><code><br />IEnumerator UpdateContentHeight ()\n\n{\n\nyield return null;\n\nfloat height = this.transform.GetComponent().rect.height;\n\n}\n\n</code></pre>\n\n另外一种方案是使用在获取<code>RectTransform</code>的相关属性之前强制调用<code>Canvas.ForceUpdateCanvases();</code>这会强制更新所有的 Canvas，所以性能消耗应该要比方案一高很多。所以，如果没有特殊的需求，我推荐使用方案一。','Unity GUI Content Size Fitter会导致RectTransform更新不及时','','publish','open','open','','unity-gui-content-size-fitter%e4%bc%9a%e5%af%bc%e8%87%b4recttransform%e6%9b%b4%e6%96%b0%e4%b8%8d%e5%8f%8a%e6%97%b6','','','2016-03-06 21:33:03','2016-03-06 13:33:03','在 UGUI 中在 GameObject 上面挂载 `Content Size Fitter` 时，会导致 `RectTransform` 的更新延迟一帧才能更新。\r\n\r\n当我们使用`RectTransform.rect.height`\r\n\r\n类似的属性时，就需要特别注意这一点，否则获取的是没有更新过的数值。\r\n\r\n我猜测，这应该是由于`Content Size Fitter`组件在每一帧的最后才去计算真正的高度等数值。\r\n\r\n我尝试了两种方案去解决这个问题，第一种方案是使用一个Coroutine 来延迟一帧后在获取`RectTransform`的相关属性。\r\n\r\n```\r\n\r\nIEnumerator UpdateContentHeight ()\r\n\r\n{\r\n\r\nyield return null;\r\n\r\nfloat height = this.transform.GetComponent().rect.height;\r\n\r\n}\r\n\r\n```\r\n\r\n另外一种方案是使用在获取`RectTransform`的相关属性之前强制调用`Canvas.ForceUpdateCanvases();`这会强制更新所有的 Canvas，所以性能消耗应该要比方案一高很多。所以，如果没有特殊的需求，我推荐使用方案一。',0,'http://codingcoder.com/?p=276',0,'post','',0);
INSERT INTO `wp_posts` VALUES (277,1,'2016-03-06 21:32:49','2016-03-06 13:32:49','在 UGUI 中在 GameObject 上面挂载 <code>Content Size Fitter</code> 时，会导致 <code>RectTransform</code> 的更新延迟一帧才能更新。\n\n当我们使用<code>RectTransform.rect.height</code>\n\n类似的属性时，就需要特别注意这一点，否则获取的是没有更新过的数值。\n\n我猜测，这应该是由于<code>Content Size Fitter</code>组件在每一帧的最后才去计算真正的高度等数值。\n\n我尝试了两种方案去解决这个问题，第一种方案是使用一个Coroutine 来延迟一帧后在获取<code>RectTransform</code>的相关属性。\n\n<pre><code><br />IEnumerator UpdateContentHeight ()\n\n{\n\nyield return null;\n\nfloat height = this.transform.GetComponent&lt;RectTransform&gt;().rect.height;\n\n}\n\n</code></pre>\n\n另外一种方案是使用在获取<code>RectTransform</code>的相关属性之前强制调用<code>Canvas.ForceUpdateCanvases();</code>这会强制更新所有的 Canvas，所以性能消耗应该要比方案一高很多。所以，如果没有特殊的需求，我推荐使用方案一。','Unity GUI Content Size Fitter会导致RectTransform更新不及时','','inherit','closed','closed','','276-revision-v1','','','2016-03-06 21:32:49','2016-03-06 13:32:49','在 UGUI 中在 GameObject 上面挂载 `Content Size Fitter` 时，会导致 `RectTransform` 的更新延迟一帧才能更新。\r\n\r\n当我们使用`RectTransform.rect.height`\r\n\r\n类似的属性时，就需要特别注意这一点，否则获取的是没有更新过的数值。\r\n\r\n我猜测，这应该是由于`Content Size Fitter`组件在每一帧的最后才去计算真正的高度等数值。\r\n\r\n我尝试了两种方案去解决这个问题，第一种方案是使用一个Coroutine 来延迟一帧后在获取`RectTransform`的相关属性。\r\n\r\n```\r\n\r\nIEnumerator UpdateContentHeight ()\r\n\r\n{\r\n\r\nyield return null;\r\n\r\nfloat height = this.transform.GetComponent&lt;RectTransform&gt;().rect.height;\r\n\r\n}\r\n\r\n```\r\n\r\n另外一种方案是使用在获取`RectTransform`的相关属性之前强制调用`Canvas.ForceUpdateCanvases();`这会强制更新所有的 Canvas，所以性能消耗应该要比方案一高很多。所以，如果没有特殊的需求，我推荐使用方案一。',276,'http://codingcoder.com/?p=277',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (278,1,'2016-03-06 21:33:03','2016-03-06 13:33:03','在 UGUI 中在 GameObject 上面挂载 <code>Content Size Fitter</code> 时，会导致 <code>RectTransform</code> 的更新延迟一帧才能更新。\n\n当我们使用<code>RectTransform.rect.height</code>\n\n类似的属性时，就需要特别注意这一点，否则获取的是没有更新过的数值。\n\n我猜测，这应该是由于<code>Content Size Fitter</code>组件在每一帧的最后才去计算真正的高度等数值。\n\n我尝试了两种方案去解决这个问题，第一种方案是使用一个Coroutine 来延迟一帧后在获取<code>RectTransform</code>的相关属性。\n\n<pre><code><br />IEnumerator UpdateContentHeight ()\n\n{\n\nyield return null;\n\nfloat height = this.transform.GetComponent().rect.height;\n\n}\n\n</code></pre>\n\n另外一种方案是使用在获取<code>RectTransform</code>的相关属性之前强制调用<code>Canvas.ForceUpdateCanvases();</code>这会强制更新所有的 Canvas，所以性能消耗应该要比方案一高很多。所以，如果没有特殊的需求，我推荐使用方案一。','Unity GUI Content Size Fitter会导致RectTransform更新不及时','','inherit','closed','closed','','276-revision-v1','','','2016-03-06 21:33:03','2016-03-06 13:33:03','在 UGUI 中在 GameObject 上面挂载 `Content Size Fitter` 时，会导致 `RectTransform` 的更新延迟一帧才能更新。\r\n\r\n当我们使用`RectTransform.rect.height`\r\n\r\n类似的属性时，就需要特别注意这一点，否则获取的是没有更新过的数值。\r\n\r\n我猜测，这应该是由于`Content Size Fitter`组件在每一帧的最后才去计算真正的高度等数值。\r\n\r\n我尝试了两种方案去解决这个问题，第一种方案是使用一个Coroutine 来延迟一帧后在获取`RectTransform`的相关属性。\r\n\r\n```\r\n\r\nIEnumerator UpdateContentHeight ()\r\n\r\n{\r\n\r\nyield return null;\r\n\r\nfloat height = this.transform.GetComponent().rect.height;\r\n\r\n}\r\n\r\n```\r\n\r\n另外一种方案是使用在获取`RectTransform`的相关属性之前强制调用`Canvas.ForceUpdateCanvases();`这会强制更新所有的 Canvas，所以性能消耗应该要比方案一高很多。所以，如果没有特殊的需求，我推荐使用方案一。',276,'http://codingcoder.com/?p=278',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (279,1,'2016-01-01 21:33:27','2016-01-01 13:33:27','从2015年的八月份开始，因为公司技术方向的原因，我从 iOS 开发转向 Unity，前前后后学习 Unity 开发也差不多快五个多月了，由于公司内没有熟悉 Unity 的同事，所以基本上都靠自己一点一点的摸索，一路磕磕绊绊的走过来，自己也有一些心得。\n\n除了基本的开发知识的学习，我特别关心如何搭建一个清晰而又灵活的 Unity 项目的架构。一个好的项目架构在前期的开发和后期的维护方面，都会带来极大的好处，直接关系到后面多人协作开发时的效率，所以我也在架构方面做了很多的尝试和思考。\n\n当然，首先我要声明的一点是<strong>脱离了产品需求而空谈架构就是在耍流氓</strong>。我下面的架构是基于我当前在做的产品需求定的，所以不一定完全适合你。\n\n首先我们先来看一下项目的目录结构。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png\" rel=\"attachment wp-att-114\"><img class=\"alignnone size-medium wp-image-114\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM-300x293.png\" alt=\"Screen-Shot-2016-01-01-at-10-45-18-PM\" width=\"300\" height=\"293\" /></a>\n\n上图中的文件夹就是项目的主要结构，我把所有的在 Assets/ 目录下的自己创建的文件夹都约定使用下划线开始的名字命名。\n\n<ol>\n<li>_3rd/ 文件夹下存放的是所有的第三方的插件或者类库。</p></li>\n<li><p>_Framework/ 主要存放独立的基础组件，这部分的代码和具体的业务需求无关，可以在多个不同的项目之间进行复用。当然，也可以打包成 unitypackage 方便使用。</p></li>\n<li><p>_resources/ 下面存放所有的资源文件，在 _resources/目录下面还会有更详细的分类，下面详细介绍。</p></li>\n<li><p>_Scenes/ 存放所有的场景文件，为了避免多人协作编辑同一个场景导致的冲突，所以最好将可以将页面按照需求独立成不同的场景，不同的人编辑不同的场景。</p></li>\n<li><p>_Scripts/ 存放的是所有的和项目需求相关的代码脚本，下面详细介绍。</p></li>\n<li><p>其他的两个目录没有用下划线作为名字的开始，所以它们是Unity 工程的特殊目录，这块我不详细介绍，大家可以自行学习相关的知识。</p></li>\n</ol>\n\n<p>上面这种项目目录的组织方式可以让我能够快速清晰的定位不同的资源。下面我们再来近距离的看看项目的目录组织结构。\n\n在 _3rd/ 目录下面是这样的：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png\" rel=\"attachment wp-att-115\"><img class=\"alignnone size-medium wp-image-115\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM-252x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-09-05-PM\" width=\"252\" height=\"300\" /></a>\n\n在 _Framework/ 下面是这样的：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png\" rel=\"attachment wp-att-116\"><img class=\"alignnone size-medium wp-image-116\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM-272x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-10-50-PM\" width=\"272\" height=\"300\" /></a>\n\n这部分都是一些通用性质的组件，包括一些例如 BaseBehaviour 之类的基类和一些 Manager 性质的组件如负责事件传递的 MessageCenter 、管理页面打开和关闭的UIManager 等。\n\n在 _Resources/ 目录下面是按照资源的种类进行分组的，在每一个类别下面再根据不同的页面或者需求点进行细分。如下所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png\" rel=\"attachment wp-att-117\"><img class=\"alignnone size-medium wp-image-117\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM-142x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-15-20-PM\" width=\"142\" height=\"300\" /></a>\n\n在 _Scripts/ 目录下面存放的是项目需求相关的代码。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png\" rel=\"attachment wp-att-118\"><img class=\"alignnone size-medium wp-image-118\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM-300x255.png\" alt=\"Screen-Shot-2016-01-01-at-11-21-04-PM\" width=\"300\" height=\"255\" /></a>\n\n如上所示，Editor/ 目录下面是一些编辑器扩展，主要是一些打包 AssetBundle 之类的辅助工具。\n\nGame/ 目录又按照 MVC + Component 架构模式分拆。MVC 架构这个是很流行的架构，方便进行代码的责任分拆。因为 Unity 下面组件开发非常方便，所以我又特地的在 MVC 模式的基础上添加了 Component 模式，进一步的增加灵活性和独立性。\n\nLua/ 目录存放的是所有的 .lua 文件。因为热更新的需求，所以我使用了 ulua 插件。这个 Lua/ 目录下是具体的和项目相关的并且是使用 lua 脚本实现的代码。\n\n我们再来看一下项目目录组织的完整的图吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png\" rel=\"attachment wp-att-119\"><img class=\"alignnone size-medium wp-image-119\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM-108x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-35-10-PM\" width=\"108\" height=\"300\" /></a>\n\nOK，关于目录结构的组织这块暂时讲到这里，欢迎大家挑错指导。\n\n另外，之前对于 iOS 项目的目录组织我也曾写过一篇文章<a href=\"https://github.com/happyjiahan/NET/blob/gh-pages/_posts/2014-07-31-ios-project-directory-structure.md\">如何组织一个iOS工程的的目录结构</a>，感兴趣的也可以看一下。','Unity项目如何架构（一）目录组织','','publish','open','open','','unity%e9%a1%b9%e7%9b%ae%e5%a6%82%e4%bd%95%e6%9e%b6%e6%9e%84%ef%bc%88%e4%b8%80%ef%bc%89%e7%9b%ae%e5%bd%95%e7%bb%84%e7%bb%87','','','2016-03-06 21:37:54','2016-03-06 13:37:54','从2015年的八月份开始，因为公司技术方向的原因，我从 iOS 开发转向 Unity，前前后后学习 Unity 开发也差不多快五个多月了，由于公司内没有熟悉 Unity 的同事，所以基本上都靠自己一点一点的摸索，一路磕磕绊绊的走过来，自己也有一些心得。\r\n\r\n除了基本的开发知识的学习，我特别关心如何搭建一个清晰而又灵活的 Unity 项目的架构。一个好的项目架构在前期的开发和后期的维护方面，都会带来极大的好处，直接关系到后面多人协作开发时的效率，所以我也在架构方面做了很多的尝试和思考。\r\n\r\n当然，首先我要声明的一点是**脱离了产品需求而空谈架构就是在耍流氓**。我下面的架构是基于我当前在做的产品需求定的，所以不一定完全适合你。\r\n\r\n首先我们先来看一下项目的目录结构。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png\" rel=\"attachment wp-att-114\"><img class=\"alignnone size-medium wp-image-114\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM-300x293.png\" alt=\"Screen-Shot-2016-01-01-at-10-45-18-PM\" width=\"300\" height=\"293\" /></a>\r\n\r\n上图中的文件夹就是项目的主要结构，我把所有的在 Assets/ 目录下的自己创建的文件夹都约定使用下划线开始的名字命名。\r\n\r\n1. _3rd/ 文件夹下存放的是所有的第三方的插件或者类库。\r\n\r\n2. _Framework/ 主要存放独立的基础组件，这部分的代码和具体的业务需求无关，可以在多个不同的项目之间进行复用。当然，也可以打包成 unitypackage 方便使用。\r\n\r\n3. _resources/ 下面存放所有的资源文件，在 _resources/目录下面还会有更详细的分类，下面详细介绍。\r\n\r\n4. _Scenes/ 存放所有的场景文件，为了避免多人协作编辑同一个场景导致的冲突，所以最好将可以将页面按照需求独立成不同的场景，不同的人编辑不同的场景。\r\n\r\n5. _Scripts/ 存放的是所有的和项目需求相关的代码脚本，下面详细介绍。\r\n\r\n6. 其他的两个目录没有用下划线作为名字的开始，所以它们是Unity 工程的特殊目录，这块我不详细介绍，大家可以自行学习相关的知识。\r\n\r\n上面这种项目目录的组织方式可以让我能够快速清晰的定位不同的资源。下面我们再来近距离的看看项目的目录组织结构。\r\n\r\n在 _3rd/ 目录下面是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png\" rel=\"attachment wp-att-115\"><img class=\"alignnone size-medium wp-image-115\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM-252x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-09-05-PM\" width=\"252\" height=\"300\" /></a>\r\n\r\n在 _Framework/ 下面是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png\" rel=\"attachment wp-att-116\"><img class=\"alignnone size-medium wp-image-116\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM-272x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-10-50-PM\" width=\"272\" height=\"300\" /></a>\r\n\r\n这部分都是一些通用性质的组件，包括一些例如 BaseBehaviour 之类的基类和一些 Manager 性质的组件如负责事件传递的 MessageCenter 、管理页面打开和关闭的UIManager 等。\r\n\r\n在 _Resources/ 目录下面是按照资源的种类进行分组的，在每一个类别下面再根据不同的页面或者需求点进行细分。如下所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png\" rel=\"attachment wp-att-117\"><img class=\"alignnone size-medium wp-image-117\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM-142x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-15-20-PM\" width=\"142\" height=\"300\" /></a>\r\n\r\n在 _Scripts/ 目录下面存放的是项目需求相关的代码。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png\" rel=\"attachment wp-att-118\"><img class=\"alignnone size-medium wp-image-118\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM-300x255.png\" alt=\"Screen-Shot-2016-01-01-at-11-21-04-PM\" width=\"300\" height=\"255\" /></a>\r\n\r\n如上所示，Editor/ 目录下面是一些编辑器扩展，主要是一些打包 AssetBundle 之类的辅助工具。\r\n\r\nGame/ 目录又按照 MVC + Component 架构模式分拆。MVC 架构这个是很流行的架构，方便进行代码的责任分拆。因为 Unity 下面组件开发非常方便，所以我又特地的在 MVC 模式的基础上添加了 Component 模式，进一步的增加灵活性和独立性。\r\n\r\nLua/ 目录存放的是所有的 .lua 文件。因为热更新的需求，所以我使用了 ulua 插件。这个 Lua/ 目录下是具体的和项目相关的并且是使用 lua 脚本实现的代码。\r\n\r\n我们再来看一下项目目录组织的完整的图吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png\" rel=\"attachment wp-att-119\"><img class=\"alignnone size-medium wp-image-119\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM-108x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-35-10-PM\" width=\"108\" height=\"300\" /></a>\r\n\r\nOK，关于目录结构的组织这块暂时讲到这里，欢迎大家挑错指导。\r\n\r\n另外，之前对于 iOS 项目的目录组织我也曾写过一篇文章[如何组织一个iOS工程的的目录结构](https://github.com/happyjiahan/NET/blob/gh-pages/_posts/2014-07-31-ios-project-directory-structure.md)，感兴趣的也可以看一下。',0,'http://codingcoder.com/?p=279',0,'post','',0);
INSERT INTO `wp_posts` VALUES (280,1,'2016-03-06 21:34:46','2016-03-06 13:34:46','从2015年的八月份开始，因为公司技术方向的原因，我从 iOS 开发转向 Unity，前前后后学习 Unity 开发也差不多快五个多月了，由于公司内没有熟悉 Unity 的同事，所以基本上都靠自己一点一点的摸索，一路磕磕绊绊的走过来，自己也有一些心得。\n\n除了基本的开发知识的学习，我特别关心如何搭建一个清晰而又灵活的 Unity 项目的架构。一个好的项目架构在前期的开发和后期的维护方面，都会带来极大的好处，直接关系到后面多人协作开发时的效率，所以我也在架构方面做了很多的尝试和思考。\n\n当然，首先我要声明的一点是<strong>脱离了产品需求而空谈架构就是在耍流氓</strong>。我下面的架构是基于我当前在做的产品需求定的，所以不一定完全适合你。\n\n首先我们先来看一下项目的目录结构。\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-01-at-10-45-18-PM.png\" alt=\"\" />\n\n上图中的文件夹就是项目的主要结构，我把所有的在 Assets/ 目录下的自己创建的文件夹都约定使用下划线开始的名字命名。\n\n<ol>\n<li>_3rd/ 文件夹下存放的是所有的第三方的插件或者类库。</p></li>\n<li><p>_Framework/ 主要存放独立的基础组件，这部分的代码和具体的业务需求无关，可以在多个不同的项目之间进行复用。当然，也可以打包成 unitypackage 方便使用。</p></li>\n<li><p>_resources/ 下面存放所有的资源文件，在 _resources/目录下面还会有更详细的分类，下面详细介绍。</p></li>\n<li><p>_Scenes/ 存放所有的场景文件，为了避免多人协作编辑同一个场景导致的冲突，所以最好将可以将页面按照需求独立成不同的场景，不同的人编辑不同的场景。</p></li>\n<li><p>_Scripts/ 存放的是所有的和项目需求相关的代码脚本，下面详细介绍。</p></li>\n<li><p>其他的两个目录没有用下划线作为名字的开始，所以它们是Unity 工程的特殊目录，这块我不详细介绍，大家可以自行学习相关的知识。</p></li>\n</ol>\n\n<p>上面这种项目目录的组织方式可以让我能够快速清晰的定位不同的资源。下面我们再来近距离的看看项目的目录组织结构。\n\n在 _3rd/ 目录下面是这样的：\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-01-at-11-09-05-PM.png\" alt=\"\" />\n\n在 _Framework/ 下面是这样的：\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-01-at-11-10-50-PM.png\" alt=\"\" />\n\n这部分都是一些通用性质的组件，包括一些例如 BaseBehaviour 之类的基类和一些 Manager 性质的组件如负责事件传递的 MessageCenter 、管理页面打开和关闭的UIManager 等。\n\n在 _Resources/ 目录下面是按照资源的种类进行分组的，在每一个类别下面再根据不同的页面或者需求点进行细分。如下所示：\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-01-at-11-15-20-PM.png\" alt=\"\" />\n\n在 _Scripts/ 目录下面存放的是项目需求相关的代码。\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-01-at-11-21-04-PM.png\" alt=\"\" />\n\n如上所示，Editor/ 目录下面是一些编辑器扩展，主要是一些打包 AssetBundle 之类的辅助工具。\n\nGame/ 目录又按照 MVC + Component 架构模式分拆。MVC 架构这个是很流行的架构，方便进行代码的责任分拆。因为 Unity 下面组件开发非常方便，所以我又特地的在 MVC 模式的基础上添加了 Component 模式，进一步的增加灵活性和独立性。\n\nLua/ 目录存放的是所有的 .lua 文件。因为热更新的需求，所以我使用了 ulua 插件。这个 Lua/ 目录下是具体的和项目相关的并且是使用 lua 脚本实现的代码。\n\n我们再来看一下项目目录组织的完整的图吧。\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-01-at-11-35-10-PM.png\" alt=\"\" />\n\nOK，关于目录结构的组织这块暂时讲到这里，欢迎大家挑错指导。\n\n另外，之前对于 iOS 项目的目录组织我也曾写过一篇文章<a href=\"https://github.com/happyjiahan/NET/blob/gh-pages/_posts/2014-07-31-ios-project-directory-structure.md\">如何组织一个iOS工程的的目录结构</a>，感兴趣的也可以看一下。','Unity项目如何架构（一）目录组织','','inherit','closed','closed','','279-revision-v1','','','2016-03-06 21:34:46','2016-03-06 13:34:46','从2015年的八月份开始，因为公司技术方向的原因，我从 iOS 开发转向 Unity，前前后后学习 Unity 开发也差不多快五个多月了，由于公司内没有熟悉 Unity 的同事，所以基本上都靠自己一点一点的摸索，一路磕磕绊绊的走过来，自己也有一些心得。\r\n\r\n除了基本的开发知识的学习，我特别关心如何搭建一个清晰而又灵活的 Unity 项目的架构。一个好的项目架构在前期的开发和后期的维护方面，都会带来极大的好处，直接关系到后面多人协作开发时的效率，所以我也在架构方面做了很多的尝试和思考。\r\n\r\n当然，首先我要声明的一点是**脱离了产品需求而空谈架构就是在耍流氓**。我下面的架构是基于我当前在做的产品需求定的，所以不一定完全适合你。\r\n\r\n首先我们先来看一下项目的目录结构。\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-01-at-10-45-18-PM.png)\r\n\r\n上图中的文件夹就是项目的主要结构，我把所有的在 Assets/ 目录下的自己创建的文件夹都约定使用下划线开始的名字命名。\r\n\r\n1. _3rd/ 文件夹下存放的是所有的第三方的插件或者类库。\r\n\r\n2. _Framework/ 主要存放独立的基础组件，这部分的代码和具体的业务需求无关，可以在多个不同的项目之间进行复用。当然，也可以打包成 unitypackage 方便使用。\r\n\r\n3. _resources/ 下面存放所有的资源文件，在 _resources/目录下面还会有更详细的分类，下面详细介绍。\r\n\r\n4. _Scenes/ 存放所有的场景文件，为了避免多人协作编辑同一个场景导致的冲突，所以最好将可以将页面按照需求独立成不同的场景，不同的人编辑不同的场景。\r\n\r\n5. _Scripts/ 存放的是所有的和项目需求相关的代码脚本，下面详细介绍。\r\n\r\n6. 其他的两个目录没有用下划线作为名字的开始，所以它们是Unity 工程的特殊目录，这块我不详细介绍，大家可以自行学习相关的知识。\r\n\r\n上面这种项目目录的组织方式可以让我能够快速清晰的定位不同的资源。下面我们再来近距离的看看项目的目录组织结构。\r\n\r\n在 _3rd/ 目录下面是这样的：\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-01-at-11-09-05-PM.png)\r\n\r\n在 _Framework/ 下面是这样的：\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-01-at-11-10-50-PM.png)\r\n\r\n这部分都是一些通用性质的组件，包括一些例如 BaseBehaviour 之类的基类和一些 Manager 性质的组件如负责事件传递的 MessageCenter 、管理页面打开和关闭的UIManager 等。\r\n\r\n在 _Resources/ 目录下面是按照资源的种类进行分组的，在每一个类别下面再根据不同的页面或者需求点进行细分。如下所示：\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-01-at-11-15-20-PM.png)\r\n\r\n在 _Scripts/ 目录下面存放的是项目需求相关的代码。\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-01-at-11-21-04-PM.png)\r\n\r\n如上所示，Editor/ 目录下面是一些编辑器扩展，主要是一些打包 AssetBundle 之类的辅助工具。\r\n\r\nGame/ 目录又按照 MVC + Component 架构模式分拆。MVC 架构这个是很流行的架构，方便进行代码的责任分拆。因为 Unity 下面组件开发非常方便，所以我又特地的在 MVC 模式的基础上添加了 Component 模式，进一步的增加灵活性和独立性。\r\n\r\nLua/ 目录存放的是所有的 .lua 文件。因为热更新的需求，所以我使用了 ulua 插件。这个 Lua/ 目录下是具体的和项目相关的并且是使用 lua 脚本实现的代码。\r\n\r\n我们再来看一下项目目录组织的完整的图吧。\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-01-at-11-35-10-PM.png)\r\n\r\nOK，关于目录结构的组织这块暂时讲到这里，欢迎大家挑错指导。\r\n\r\n另外，之前对于 iOS 项目的目录组织我也曾写过一篇文章[如何组织一个iOS工程的的目录结构](https://github.com/happyjiahan/NET/blob/gh-pages/_posts/2014-07-31-ios-project-directory-structure.md)，感兴趣的也可以看一下。',279,'http://codingcoder.com/?p=280',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (281,1,'2016-03-06 21:37:49','2016-03-06 13:37:49','从2015年的八月份开始，因为公司技术方向的原因，我从 iOS 开发转向 Unity，前前后后学习 Unity 开发也差不多快五个多月了，由于公司内没有熟悉 Unity 的同事，所以基本上都靠自己一点一点的摸索，一路磕磕绊绊的走过来，自己也有一些心得。\n\n除了基本的开发知识的学习，我特别关心如何搭建一个清晰而又灵活的 Unity 项目的架构。一个好的项目架构在前期的开发和后期的维护方面，都会带来极大的好处，直接关系到后面多人协作开发时的效率，所以我也在架构方面做了很多的尝试和思考。\n\n当然，首先我要声明的一点是<strong>脱离了产品需求而空谈架构就是在耍流氓</strong>。我下面的架构是基于我当前在做的产品需求定的，所以不一定完全适合你。\n\n首先我们先来看一下项目的目录结构。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png\" rel=\"attachment wp-att-114\"><img class=\"alignnone size-medium wp-image-114\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM-300x293.png\" alt=\"Screen-Shot-2016-01-01-at-10-45-18-PM\" width=\"300\" height=\"293\" /></a>\n\n上图中的文件夹就是项目的主要结构，我把所有的在 Assets/ 目录下的自己创建的文件夹都约定使用下划线开始的名字命名。\n\n<ol>\n<li>_3rd/ 文件夹下存放的是所有的第三方的插件或者类库。</p></li>\n<li><p>_Framework/ 主要存放独立的基础组件，这部分的代码和具体的业务需求无关，可以在多个不同的项目之间进行复用。当然，也可以打包成 unitypackage 方便使用。</p></li>\n<li><p>_resources/ 下面存放所有的资源文件，在 _resources/目录下面还会有更详细的分类，下面详细介绍。</p></li>\n<li><p>_Scenes/ 存放所有的场景文件，为了避免多人协作编辑同一个场景导致的冲突，所以最好将可以将页面按照需求独立成不同的场景，不同的人编辑不同的场景。</p></li>\n<li><p>_Scripts/ 存放的是所有的和项目需求相关的代码脚本，下面详细介绍。</p></li>\n<li><p>其他的两个目录没有用下划线作为名字的开始，所以它们是Unity 工程的特殊目录，这块我不详细介绍，大家可以自行学习相关的知识。</p></li>\n</ol>\n\n<p>上面这种项目目录的组织方式可以让我能够快速清晰的定位不同的资源。下面我们再来近距离的看看项目的目录组织结构。\n\n在 _3rd/ 目录下面是这样的：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png\" rel=\"attachment wp-att-115\"><img class=\"alignnone size-medium wp-image-115\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM-252x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-09-05-PM\" width=\"252\" height=\"300\" /></a>\n\n在 _Framework/ 下面是这样的：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png\" rel=\"attachment wp-att-116\"><img class=\"alignnone size-medium wp-image-116\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM-272x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-10-50-PM\" width=\"272\" height=\"300\" /></a>\n\n这部分都是一些通用性质的组件，包括一些例如 BaseBehaviour 之类的基类和一些 Manager 性质的组件如负责事件传递的 MessageCenter 、管理页面打开和关闭的UIManager 等。\n\n在 _Resources/ 目录下面是按照资源的种类进行分组的，在每一个类别下面再根据不同的页面或者需求点进行细分。如下所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png\" rel=\"attachment wp-att-117\"><img class=\"alignnone size-medium wp-image-117\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM-142x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-15-20-PM\" width=\"142\" height=\"300\" /></a>\n\n在 _Scripts/ 目录下面存放的是项目需求相关的代码。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png\" rel=\"attachment wp-att-118\"><img class=\"alignnone size-medium wp-image-118\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM-300x255.png\" alt=\"Screen-Shot-2016-01-01-at-11-21-04-PM\" width=\"300\" height=\"255\" /></a>\n\n如上所示，Editor/ 目录下面是一些编辑器扩展，主要是一些打包 AssetBundle 之类的辅助工具。\n\nGame/ 目录又按照 MVC + Component 架构模式分拆。MVC 架构这个是很流行的架构，方便进行代码的责任分拆。因为 Unity 下面组件开发非常方便，所以我又特地的在 MVC 模式的基础上添加了 Component 模式，进一步的增加灵活性和独立性。\n\nLua/ 目录存放的是所有的 .lua 文件。因为热更新的需求，所以我使用了 ulua 插件。这个 Lua/ 目录下是具体的和项目相关的并且是使用 lua 脚本实现的代码。\n\n我们再来看一下项目目录组织的完整的图吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png\" rel=\"attachment wp-att-119\"><img class=\"alignnone size-medium wp-image-119\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM-108x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-35-10-PM\" width=\"108\" height=\"300\" /></a>\n\nOK，关于目录结构的组织这块暂时讲到这里，欢迎大家挑错指导。\n\n另外，之前对于 iOS 项目的目录组织我也曾写过一篇文章<a href=\"https://github.com/happyjiahan/NET/blob/gh-pages/_posts/2014-07-31-ios-project-directory-structure.md\">如何组织一个iOS工程的的目录结构</a>，感兴趣的也可以看一下。','Unity项目如何架构（一）目录组织','','inherit','closed','closed','','279-revision-v1','','','2016-03-06 21:37:49','2016-03-06 13:37:49','从2015年的八月份开始，因为公司技术方向的原因，我从 iOS 开发转向 Unity，前前后后学习 Unity 开发也差不多快五个多月了，由于公司内没有熟悉 Unity 的同事，所以基本上都靠自己一点一点的摸索，一路磕磕绊绊的走过来，自己也有一些心得。\r\n\r\n除了基本的开发知识的学习，我特别关心如何搭建一个清晰而又灵活的 Unity 项目的架构。一个好的项目架构在前期的开发和后期的维护方面，都会带来极大的好处，直接关系到后面多人协作开发时的效率，所以我也在架构方面做了很多的尝试和思考。\r\n\r\n当然，首先我要声明的一点是**脱离了产品需求而空谈架构就是在耍流氓**。我下面的架构是基于我当前在做的产品需求定的，所以不一定完全适合你。\r\n\r\n首先我们先来看一下项目的目录结构。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM.png\" rel=\"attachment wp-att-114\"><img class=\"alignnone size-medium wp-image-114\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-10-45-18-PM-300x293.png\" alt=\"Screen-Shot-2016-01-01-at-10-45-18-PM\" width=\"300\" height=\"293\" /></a>\r\n\r\n上图中的文件夹就是项目的主要结构，我把所有的在 Assets/ 目录下的自己创建的文件夹都约定使用下划线开始的名字命名。\r\n\r\n1. _3rd/ 文件夹下存放的是所有的第三方的插件或者类库。\r\n\r\n2. _Framework/ 主要存放独立的基础组件，这部分的代码和具体的业务需求无关，可以在多个不同的项目之间进行复用。当然，也可以打包成 unitypackage 方便使用。\r\n\r\n3. _resources/ 下面存放所有的资源文件，在 _resources/目录下面还会有更详细的分类，下面详细介绍。\r\n\r\n4. _Scenes/ 存放所有的场景文件，为了避免多人协作编辑同一个场景导致的冲突，所以最好将可以将页面按照需求独立成不同的场景，不同的人编辑不同的场景。\r\n\r\n5. _Scripts/ 存放的是所有的和项目需求相关的代码脚本，下面详细介绍。\r\n\r\n6. 其他的两个目录没有用下划线作为名字的开始，所以它们是Unity 工程的特殊目录，这块我不详细介绍，大家可以自行学习相关的知识。\r\n\r\n上面这种项目目录的组织方式可以让我能够快速清晰的定位不同的资源。下面我们再来近距离的看看项目的目录组织结构。\r\n\r\n在 _3rd/ 目录下面是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM.png\" rel=\"attachment wp-att-115\"><img class=\"alignnone size-medium wp-image-115\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-09-05-PM-252x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-09-05-PM\" width=\"252\" height=\"300\" /></a>\r\n\r\n在 _Framework/ 下面是这样的：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM.png\" rel=\"attachment wp-att-116\"><img class=\"alignnone size-medium wp-image-116\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-10-50-PM-272x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-10-50-PM\" width=\"272\" height=\"300\" /></a>\r\n\r\n这部分都是一些通用性质的组件，包括一些例如 BaseBehaviour 之类的基类和一些 Manager 性质的组件如负责事件传递的 MessageCenter 、管理页面打开和关闭的UIManager 等。\r\n\r\n在 _Resources/ 目录下面是按照资源的种类进行分组的，在每一个类别下面再根据不同的页面或者需求点进行细分。如下所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM.png\" rel=\"attachment wp-att-117\"><img class=\"alignnone size-medium wp-image-117\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-15-20-PM-142x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-15-20-PM\" width=\"142\" height=\"300\" /></a>\r\n\r\n在 _Scripts/ 目录下面存放的是项目需求相关的代码。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM.png\" rel=\"attachment wp-att-118\"><img class=\"alignnone size-medium wp-image-118\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-21-04-PM-300x255.png\" alt=\"Screen-Shot-2016-01-01-at-11-21-04-PM\" width=\"300\" height=\"255\" /></a>\r\n\r\n如上所示，Editor/ 目录下面是一些编辑器扩展，主要是一些打包 AssetBundle 之类的辅助工具。\r\n\r\nGame/ 目录又按照 MVC + Component 架构模式分拆。MVC 架构这个是很流行的架构，方便进行代码的责任分拆。因为 Unity 下面组件开发非常方便，所以我又特地的在 MVC 模式的基础上添加了 Component 模式，进一步的增加灵活性和独立性。\r\n\r\nLua/ 目录存放的是所有的 .lua 文件。因为热更新的需求，所以我使用了 ulua 插件。这个 Lua/ 目录下是具体的和项目相关的并且是使用 lua 脚本实现的代码。\r\n\r\n我们再来看一下项目目录组织的完整的图吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM.png\" rel=\"attachment wp-att-119\"><img class=\"alignnone size-medium wp-image-119\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-01-at-11-35-10-PM-108x300.png\" alt=\"Screen-Shot-2016-01-01-at-11-35-10-PM\" width=\"108\" height=\"300\" /></a>\r\n\r\nOK，关于目录结构的组织这块暂时讲到这里，欢迎大家挑错指导。\r\n\r\n另外，之前对于 iOS 项目的目录组织我也曾写过一篇文章[如何组织一个iOS工程的的目录结构](https://github.com/happyjiahan/NET/blob/gh-pages/_posts/2014-07-31-ios-project-directory-structure.md)，感兴趣的也可以看一下。',279,'http://codingcoder.com/?p=281',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (282,1,'2016-01-01 21:39:23','2016-01-01 13:39:23','我之前的一些文章是托管在 GitHub 上面的，现在还没有迁移过来，如果你想看一下，可以点这个链接去看<a href=\"https://github.com/happyjiahan/NET/tree/gh-pages/_posts\">我的 github 博客</a>。我后面会慢慢的把博客迁移过来。','之前的博客迁移','','publish','open','open','','%e4%b9%8b%e5%89%8d%e7%9a%84%e5%8d%9a%e5%ae%a2%e8%bf%81%e7%a7%bb','','','2016-03-06 21:40:55','2016-03-06 13:40:55','我之前的一些文章是托管在 GitHub 上面的，现在还没有迁移过来，如果你想看一下，可以点这个链接去看[我的 github 博客](https://github.com/happyjiahan/NET/tree/gh-pages/_posts)。我后面会慢慢的把博客迁移过来。',0,'http://codingcoder.com/?p=282',0,'post','',0);
INSERT INTO `wp_posts` VALUES (283,1,'2016-03-06 21:40:17','2016-03-06 13:40:17','我之前的一些文章是托管在 GitHub 上面的，现在还没有迁移过来，如果你想看一下，可以点这个链接去看<a href=\"https://github.com/happyjiahan/NET/tree/gh-pages/_posts\">我的 github 博客</a>。我后面会慢慢的把博客迁移过来。','之前的博客迁移','','inherit','closed','closed','','282-revision-v1','','','2016-03-06 21:40:17','2016-03-06 13:40:17','我之前的一些文章是托管在 GitHub 上面的，现在还没有迁移过来，如果你想看一下，可以点这个链接去看[我的 github 博客](https://github.com/happyjiahan/NET/tree/gh-pages/_posts)。我后面会慢慢的把博客迁移过来。',282,'http://codingcoder.com/?p=283',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (284,1,'2016-01-03 21:41:15','2016-01-03 13:41:15','<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg\" rel=\"attachment wp-att-112\"><img class=\"alignnone size-medium wp-image-112\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh-225x300.jpg\" alt=\"7148d7bfgw1ez9b487awej20qo0zkwkh\" width=\"225\" height=\"300\" /></a>\n\n&nbsp;\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg\" rel=\"attachment wp-att-111\"><img class=\"alignnone size-medium wp-image-111\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106-300x225.jpg\" alt=\"7148d7bfgw1ez9b47p8s4j20zk0qo106\" width=\"300\" height=\"225\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg\" rel=\"attachment wp-att-113\"><img class=\"alignnone size-medium wp-image-113\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod-225x300.jpg\" alt=\"7148d7bfgw1ez9b48vr2jj20qo0zkdod\" width=\"225\" height=\"300\" /></a>\n\n&nbsp;\n\n必改之！','我的缺点','','publish','open','open','','%e6%88%91%e7%9a%84%e7%bc%ba%e7%82%b9','','','2016-03-06 21:44:04','2016-03-06 13:44:04','<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg\" rel=\"attachment wp-att-112\"><img class=\"alignnone size-medium wp-image-112\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh-225x300.jpg\" alt=\"7148d7bfgw1ez9b487awej20qo0zkwkh\" width=\"225\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg\" rel=\"attachment wp-att-111\"><img class=\"alignnone size-medium wp-image-111\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106-300x225.jpg\" alt=\"7148d7bfgw1ez9b47p8s4j20zk0qo106\" width=\"300\" height=\"225\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg\" rel=\"attachment wp-att-113\"><img class=\"alignnone size-medium wp-image-113\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod-225x300.jpg\" alt=\"7148d7bfgw1ez9b48vr2jj20qo0zkdod\" width=\"225\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n必改之！',0,'http://codingcoder.com/?p=284',0,'post','',0);
INSERT INTO `wp_posts` VALUES (285,1,'2016-03-06 21:43:31','2016-03-06 13:43:31','<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg\" rel=\"attachment wp-att-112\"><img class=\"alignnone size-medium wp-image-112\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh-225x300.jpg\" alt=\"7148d7bfgw1ez9b487awej20qo0zkwkh\" width=\"225\" height=\"300\" /></a>\n\n&nbsp;\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg\" rel=\"attachment wp-att-111\"><img class=\"alignnone size-medium wp-image-111\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106-300x225.jpg\" alt=\"7148d7bfgw1ez9b47p8s4j20zk0qo106\" width=\"300\" height=\"225\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg\" rel=\"attachment wp-att-113\"><img class=\"alignnone size-medium wp-image-113\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod-225x300.jpg\" alt=\"7148d7bfgw1ez9b48vr2jj20qo0zkdod\" width=\"225\" height=\"300\" /></a>\n\n&nbsp;\n\n必改之！','我的缺点','','inherit','closed','closed','','284-revision-v1','','','2016-03-06 21:43:31','2016-03-06 13:43:31','<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh.jpg\" rel=\"attachment wp-att-112\"><img class=\"alignnone size-medium wp-image-112\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b487awej20qo0zkwkh-225x300.jpg\" alt=\"7148d7bfgw1ez9b487awej20qo0zkwkh\" width=\"225\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106.jpg\" rel=\"attachment wp-att-111\"><img class=\"alignnone size-medium wp-image-111\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b47p8s4j20zk0qo106-300x225.jpg\" alt=\"7148d7bfgw1ez9b47p8s4j20zk0qo106\" width=\"300\" height=\"225\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod.jpg\" rel=\"attachment wp-att-113\"><img class=\"alignnone size-medium wp-image-113\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/7148d7bfgw1ez9b48vr2jj20qo0zkdod-225x300.jpg\" alt=\"7148d7bfgw1ez9b48vr2jj20qo0zkdod\" width=\"225\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n必改之！',284,'http://codingcoder.com/?p=285',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (286,1,'2016-01-06 21:44:07','2016-01-06 13:44:07','今天才知道，原来 .net 是开源的，先开个坑，抽空详细阅读下 <a href=\"http://referencesource.microsoft.com/#mscorlib/system/AppContext/AppContext.cs\">.net 的源码</a>。','微软开源 .net 源码','','publish','open','open','','%e5%be%ae%e8%bd%af%e5%bc%80%e6%ba%90-net-%e6%ba%90%e7%a0%81','','','2016-03-06 21:44:58','2016-03-06 13:44:58','今天才知道，原来 .net 是开源的，先开个坑，抽空详细阅读下 [.net 的源码](http://referencesource.microsoft.com/#mscorlib/system/AppContext/AppContext.cs)。',0,'http://codingcoder.com/?p=286',0,'post','',0);
INSERT INTO `wp_posts` VALUES (287,1,'2016-03-06 21:44:58','2016-03-06 13:44:58','今天才知道，原来 .net 是开源的，先开个坑，抽空详细阅读下 <a href=\"http://referencesource.microsoft.com/#mscorlib/system/AppContext/AppContext.cs\">.net 的源码</a>。','微软开源 .net 源码','','inherit','closed','closed','','286-revision-v1','','','2016-03-06 21:44:58','2016-03-06 13:44:58','今天才知道，原来 .net 是开源的，先开个坑，抽空详细阅读下 [.net 的源码](http://referencesource.microsoft.com/#mscorlib/system/AppContext/AppContext.cs)。',286,'http://codingcoder.com/?p=287',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (288,1,'2016-01-22 21:45:20','2016-01-22 13:45:20','http://answers.unity3d.com/questions/215761/does-unity-care-is-a-texture-is-a-power-of-2.html','Does Unity Care is a texture is a power of 2?','','publish','open','open','','does-unity-care-is-a-texture-is-a-power-of-2','','','2016-03-06 21:46:43','2016-03-06 13:46:43','http://answers.unity3d.com/questions/215761/does-unity-care-is-a-texture-is-a-power-of-2.html',0,'http://codingcoder.com/?p=288',0,'post','',0);
INSERT INTO `wp_posts` VALUES (289,1,'2016-03-06 21:46:43','2016-03-06 13:46:43','http://answers.unity3d.com/questions/215761/does-unity-care-is-a-texture-is-a-power-of-2.html','Does Unity Care is a texture is a power of 2?','','inherit','closed','closed','','288-revision-v1','','','2016-03-06 21:46:43','2016-03-06 13:46:43','http://answers.unity3d.com/questions/215761/does-unity-care-is-a-texture-is-a-power-of-2.html',288,'http://codingcoder.com/?p=289',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (290,1,'2016-01-23 21:49:06','2016-01-23 13:49:06','很多时候，我常常会问自己，最近的这一年我有没有成长呢？或者，最近的工作、经历有没有让我变得更加优秀呢？\n\n要回答这个问题，我就首先要搞清楚什么算是成长呢？收入、知识、工作经验还是不断增长的年龄，哪一个可以作为成长的衡量因素呢？\n\n这些因素其实都是成长的某一个维度的参考，如果让我自己来找一个最重要的维度的话，我会选择内心的自信心这个方面。\n\n我认为在工作之后，我变的越来越自信了，当我与同事、朋友甚至是我的老板讨论东西的时候，我们可以站在一个相同的高度上去讨论，而不再是那个一无所知的小白了。对于不同的观点，我可以大胆而自信的表达出我的反对。敢于说出自己的想法，其实是对自己具有很强的信心的。\n\n现在的我，喜欢从不同的角度去思考问题。虽然我是一个技术人员，在对技术深入研究的同时，我也会积极从产品和运营等其他方面来思考。对待不同的观点，我会把它细分成不同的方面，然后再结合当前的情形，去采取不同的态度进行处理。\n\n我喜欢倾听不同人的观点，从他们不同的观点中进行精华的提取和再加工。他山之石，不一定可以攻玉，但是可以好的他山之石必然是有它的优点的，我要做的是如何去伪存真。\n\n自信心不是说有就有的，它的背后是建立在你长期的努力进步的基础上的。作为一个技术人，如果是个菜鸟，怎能有自信心呢？\n\n努力与进取，是我需要持续去做的事情。其实有句话说的很好，勤奋的男人和爱笑的女人，运气都不会太差。\n\n所以，如何才能不断成长呢？我想你已经有了答案了，成长的道路上布满了艰辛，希望大家都能从自己的内心中获取到那个属于你的成长。','什么算是成长','','publish','open','open','','%e4%bb%80%e4%b9%88%e7%ae%97%e6%98%af%e6%88%90%e9%95%bf','','','2016-03-06 21:49:59','2016-03-06 13:49:59','很多时候，我常常会问自己，最近的这一年我有没有成长呢？或者，最近的工作、经历有没有让我变得更加优秀呢？\r\n\r\n要回答这个问题，我就首先要搞清楚什么算是成长呢？收入、知识、工作经验还是不断增长的年龄，哪一个可以作为成长的衡量因素呢？\r\n\r\n这些因素其实都是成长的某一个维度的参考，如果让我自己来找一个最重要的维度的话，我会选择内心的自信心这个方面。\r\n\r\n我认为在工作之后，我变的越来越自信了，当我与同事、朋友甚至是我的老板讨论东西的时候，我们可以站在一个相同的高度上去讨论，而不再是那个一无所知的小白了。对于不同的观点，我可以大胆而自信的表达出我的反对。敢于说出自己的想法，其实是对自己具有很强的信心的。\r\n\r\n现在的我，喜欢从不同的角度去思考问题。虽然我是一个技术人员，在对技术深入研究的同时，我也会积极从产品和运营等其他方面来思考。对待不同的观点，我会把它细分成不同的方面，然后再结合当前的情形，去采取不同的态度进行处理。\r\n\r\n我喜欢倾听不同人的观点，从他们不同的观点中进行精华的提取和再加工。他山之石，不一定可以攻玉，但是可以好的他山之石必然是有它的优点的，我要做的是如何去伪存真。\r\n\r\n自信心不是说有就有的，它的背后是建立在你长期的努力进步的基础上的。作为一个技术人，如果是个菜鸟，怎能有自信心呢？\r\n\r\n努力与进取，是我需要持续去做的事情。其实有句话说的很好，勤奋的男人和爱笑的女人，运气都不会太差。\r\n\r\n所以，如何才能不断成长呢？我想你已经有了答案了，成长的道路上布满了艰辛，希望大家都能从自己的内心中获取到那个属于你的成长。',0,'http://codingcoder.com/?p=290',0,'post','',0);
INSERT INTO `wp_posts` VALUES (291,1,'2016-03-06 21:49:59','2016-03-06 13:49:59','很多时候，我常常会问自己，最近的这一年我有没有成长呢？或者，最近的工作、经历有没有让我变得更加优秀呢？\n\n要回答这个问题，我就首先要搞清楚什么算是成长呢？收入、知识、工作经验还是不断增长的年龄，哪一个可以作为成长的衡量因素呢？\n\n这些因素其实都是成长的某一个维度的参考，如果让我自己来找一个最重要的维度的话，我会选择内心的自信心这个方面。\n\n我认为在工作之后，我变的越来越自信了，当我与同事、朋友甚至是我的老板讨论东西的时候，我们可以站在一个相同的高度上去讨论，而不再是那个一无所知的小白了。对于不同的观点，我可以大胆而自信的表达出我的反对。敢于说出自己的想法，其实是对自己具有很强的信心的。\n\n现在的我，喜欢从不同的角度去思考问题。虽然我是一个技术人员，在对技术深入研究的同时，我也会积极从产品和运营等其他方面来思考。对待不同的观点，我会把它细分成不同的方面，然后再结合当前的情形，去采取不同的态度进行处理。\n\n我喜欢倾听不同人的观点，从他们不同的观点中进行精华的提取和再加工。他山之石，不一定可以攻玉，但是可以好的他山之石必然是有它的优点的，我要做的是如何去伪存真。\n\n自信心不是说有就有的，它的背后是建立在你长期的努力进步的基础上的。作为一个技术人，如果是个菜鸟，怎能有自信心呢？\n\n努力与进取，是我需要持续去做的事情。其实有句话说的很好，勤奋的男人和爱笑的女人，运气都不会太差。\n\n所以，如何才能不断成长呢？我想你已经有了答案了，成长的道路上布满了艰辛，希望大家都能从自己的内心中获取到那个属于你的成长。','什么算是成长','','inherit','closed','closed','','290-revision-v1','','','2016-03-06 21:49:59','2016-03-06 13:49:59','很多时候，我常常会问自己，最近的这一年我有没有成长呢？或者，最近的工作、经历有没有让我变得更加优秀呢？\r\n\r\n要回答这个问题，我就首先要搞清楚什么算是成长呢？收入、知识、工作经验还是不断增长的年龄，哪一个可以作为成长的衡量因素呢？\r\n\r\n这些因素其实都是成长的某一个维度的参考，如果让我自己来找一个最重要的维度的话，我会选择内心的自信心这个方面。\r\n\r\n我认为在工作之后，我变的越来越自信了，当我与同事、朋友甚至是我的老板讨论东西的时候，我们可以站在一个相同的高度上去讨论，而不再是那个一无所知的小白了。对于不同的观点，我可以大胆而自信的表达出我的反对。敢于说出自己的想法，其实是对自己具有很强的信心的。\r\n\r\n现在的我，喜欢从不同的角度去思考问题。虽然我是一个技术人员，在对技术深入研究的同时，我也会积极从产品和运营等其他方面来思考。对待不同的观点，我会把它细分成不同的方面，然后再结合当前的情形，去采取不同的态度进行处理。\r\n\r\n我喜欢倾听不同人的观点，从他们不同的观点中进行精华的提取和再加工。他山之石，不一定可以攻玉，但是可以好的他山之石必然是有它的优点的，我要做的是如何去伪存真。\r\n\r\n自信心不是说有就有的，它的背后是建立在你长期的努力进步的基础上的。作为一个技术人，如果是个菜鸟，怎能有自信心呢？\r\n\r\n努力与进取，是我需要持续去做的事情。其实有句话说的很好，勤奋的男人和爱笑的女人，运气都不会太差。\r\n\r\n所以，如何才能不断成长呢？我想你已经有了答案了，成长的道路上布满了艰辛，希望大家都能从自己的内心中获取到那个属于你的成长。',290,'http://codingcoder.com/?p=291',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (292,1,'2016-01-25 21:50:30','2016-01-25 13:50:30','在开发界，要想引起工程师的纷争，最好的办法就是说 PHP 是世界上最好的语言。\n\n关于程序语言的优劣的纷争，似乎已经成了开发界的一个默认的话题，只要有两个工程师，就极易一起这个话题的争论，并且双方还争的意犹未尽。\n\n我认为，不管是什么语言，都是技术工具而已，既然是工具，便有它的适用条件。要做一件事情，可能有很多途径，很多工具都可以做到，选择哪一种实际上可能都差不太多。\n\n很多时候，我们做技术的容易陷入到本能的技术陷阱中，沉迷于技术本身，在筛选工具方面浪费了太多的时间，反而忽略了我们最终要做的产品本身。\n\n以我为例，我想写博客，曾经花了好久的时间去搭博客平台，试试这个不好，用用那个也不满意，反反复复的浪费了很多时间。最终却没有真正把时间用来写博客。很是遗憾。\n\n技术终究只是工具，产品才是目的。不要沉陷于技术。','技术是工具，而不是目的','','publish','open','open','','%e6%8a%80%e6%9c%af%e6%98%af%e5%b7%a5%e5%85%b7%ef%bc%8c%e8%80%8c%e4%b8%8d%e6%98%af%e7%9b%ae%e7%9a%84','','','2016-03-06 21:52:57','2016-03-06 13:52:57','在开发界，要想引起工程师的纷争，最好的办法就是说 PHP 是世界上最好的语言。\r\n\r\n关于程序语言的优劣的纷争，似乎已经成了开发界的一个默认的话题，只要有两个工程师，就极易一起这个话题的争论，并且双方还争的意犹未尽。\r\n\r\n我认为，不管是什么语言，都是技术工具而已，既然是工具，便有它的适用条件。要做一件事情，可能有很多途径，很多工具都可以做到，选择哪一种实际上可能都差不太多。\r\n\r\n很多时候，我们做技术的容易陷入到本能的技术陷阱中，沉迷于技术本身，在筛选工具方面浪费了太多的时间，反而忽略了我们最终要做的产品本身。\r\n\r\n以我为例，我想写博客，曾经花了好久的时间去搭博客平台，试试这个不好，用用那个也不满意，反反复复的浪费了很多时间。最终却没有真正把时间用来写博客。很是遗憾。\r\n\r\n技术终究只是工具，产品才是目的。不要沉陷于技术。',0,'http://codingcoder.com/?p=292',0,'post','',0);
INSERT INTO `wp_posts` VALUES (293,1,'2016-03-06 21:52:40','2016-03-06 13:52:40','在开发界，要想引起工程师的纷争，最好的办法就是说 PHP 是世界上最好的语言。\n\n关于程序语言的优劣的纷争，似乎已经成了开发界的一个默认的话题，只要有两个工程师，就极易一起这个话题的争论，并且双方还争的意犹未尽。\n\n我认为，不管是什么语言，都是技术工具而已，既然是工具，便有它的适用条件。要做一件事情，可能有很多途径，很多工具都可以做到，选择哪一种实际上可能都差不太多。\n\n很多时候，我们做技术的容易陷入到本能的技术陷阱中，沉迷于技术本身，在筛选工具方面浪费了太多的时间，反而忽略了我们最终要做的产品本身。\n\n以我为例，我想写博客，曾经花了好久的时间去搭博客平台，试试这个不好，用用那个也不满意，反反复复的浪费了很多时间。最终却没有真正把时间用来写博客。很是遗憾。\n\n技术终究只是工具，产品才是目的。不要沉陷于技术。','技术是工具，而不是目的','','inherit','closed','closed','','292-revision-v1','','','2016-03-06 21:52:40','2016-03-06 13:52:40','在开发界，要想引起工程师的纷争，最好的办法就是说 PHP 是世界上最好的语言。\r\n\r\n关于程序语言的优劣的纷争，似乎已经成了开发界的一个默认的话题，只要有两个工程师，就极易一起这个话题的争论，并且双方还争的意犹未尽。\r\n\r\n我认为，不管是什么语言，都是技术工具而已，既然是工具，便有它的适用条件。要做一件事情，可能有很多途径，很多工具都可以做到，选择哪一种实际上可能都差不太多。\r\n\r\n很多时候，我们做技术的容易陷入到本能的技术陷阱中，沉迷于技术本身，在筛选工具方面浪费了太多的时间，反而忽略了我们最终要做的产品本身。\r\n\r\n以我为例，我想写博客，曾经花了好久的时间去搭博客平台，试试这个不好，用用那个也不满意，反反复复的浪费了很多时间。最终却没有真正把时间用来写博客。很是遗憾。\r\n\r\n技术终究只是工具，产品才是目的。不要沉陷于技术。',292,'http://codingcoder.com/?p=293',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (294,1,'2016-01-29 21:53:38','2016-01-29 13:53:38','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\n\n所以，为了实现这个需求，我看了下 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 <code>Graphic[] m_TargetGraphics;</code>，用来给用户指定需要过渡的 TargetGraphic，然后复写 <code>protected override void DoStateTransition (SelectionState state, bool instant)</code>方法来实现转态转变时，执行我们的颜色过渡的代码。\n\n下面是源码，很简单，无需赘述。\n\n```C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEngine.UI;\n\nusing System;\n\nusing System.Collections.Generic;\n\npublic class MultiTargetGraphicButton : Button\n\n{\n\n// Graphic that will be colored.\n\n[SerializeField]\n\nprivate Graphic[] m_TargetGraphics;\n\nprotected override void DoStateTransition (SelectionState state, bool instant)\n\n{\n\nColor color;\n\nswitch (state) {\n\ncase Selectable.SelectionState.Normal:\n\ncolor = this.colors.normalColor;\n\nbreak;\n\ncase Selectable.SelectionState.Highlighted:\n\ncolor = this.colors.highlightedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Pressed:\n\ncolor = this.colors.pressedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Disabled:\n\ncolor = this.colors.disabledColor;\n\nbreak;\n\ndefault:\n\ncolor = Color.black;\n\nbreak;\n\n}\n\nif (base.gameObject.activeInHierarchy) {\n\nswitch (this.transition) {\n\ncase Selectable.Transition.ColorTint:\n\nColorTween (color * this.colors.colorMultiplier, instant);\n\nbreak;\n\ndefault:\n\nthrow new NotSupportedException ();\n\n}\n\n}\n\n}\n\nprivate void ColorTween (Color targetColor, bool instant)\n\n{\n\nif (this.targetGraphic == null || m_TargetGraphics == null) {\n\nreturn;\n\n}\n\nforeach (Graphic g in m_TargetGraphics) {\n\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\n\n}\n\n}\n\n}\n\n```\n\n最终在 Unity Inspector 中看到的如下所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\" rel=\"attachment wp-att-120\"><img class=\"alignnone size-medium wp-image-120\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1-300x255.png\" alt=\"Screen-Shot-2016-01-29-at-3-16-29-PM-1\" width=\"300\" height=\"255\" /></a>','实现 MultiTargetGraphicButton','','publish','open','open','','%e5%ae%9e%e7%8e%b0-multitargetgraphicbutton','','','2016-03-06 21:56:05','2016-03-06 13:56:05','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\r\n\r\n所以，为了实现这个需求，我看了下 Unity 开源的 [UGUI 的源码](https://bitbucket.org/Unity-Technologies/ui/src)，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 `Graphic[] m_TargetGraphics;`，用来给用户指定需要过渡的 TargetGraphic，然后复写 `protected override void DoStateTransition (SelectionState state, bool instant)`方法来实现转态转变时，执行我们的颜色过渡的代码。\r\n\r\n下面是源码，很简单，无需赘述。\r\n\r\n```C#\r\n\r\nusing UnityEngine;\r\n\r\nusing System.Collections;\r\n\r\nusing UnityEngine.UI;\r\n\r\nusing System;\r\n\r\nusing System.Collections.Generic;\r\n\r\npublic class MultiTargetGraphicButton : Button\r\n\r\n{\r\n\r\n// Graphic that will be colored.\r\n\r\n[SerializeField]\r\n\r\nprivate Graphic[] m_TargetGraphics;\r\n\r\nprotected override void DoStateTransition (SelectionState state, bool instant)\r\n\r\n{\r\n\r\nColor color;\r\n\r\nswitch (state) {\r\n\r\ncase Selectable.SelectionState.Normal:\r\n\r\ncolor = this.colors.normalColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Highlighted:\r\n\r\ncolor = this.colors.highlightedColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Pressed:\r\n\r\ncolor = this.colors.pressedColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Disabled:\r\n\r\ncolor = this.colors.disabledColor;\r\n\r\nbreak;\r\n\r\ndefault:\r\n\r\ncolor = Color.black;\r\n\r\nbreak;\r\n\r\n}\r\n\r\nif (base.gameObject.activeInHierarchy) {\r\n\r\nswitch (this.transition) {\r\n\r\ncase Selectable.Transition.ColorTint:\r\n\r\nColorTween (color * this.colors.colorMultiplier, instant);\r\n\r\nbreak;\r\n\r\ndefault:\r\n\r\nthrow new NotSupportedException ();\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nprivate void ColorTween (Color targetColor, bool instant)\r\n\r\n{\r\n\r\nif (this.targetGraphic == null || m_TargetGraphics == null) {\r\n\r\nreturn;\r\n\r\n}\r\n\r\nforeach (Graphic g in m_TargetGraphics) {\r\n\r\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\n最终在 Unity Inspector 中看到的如下所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\" rel=\"attachment wp-att-120\"><img class=\"alignnone size-medium wp-image-120\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1-300x255.png\" alt=\"Screen-Shot-2016-01-29-at-3-16-29-PM-1\" width=\"300\" height=\"255\" /></a>',0,'http://codingcoder.com/?p=294',0,'post','',0);
INSERT INTO `wp_posts` VALUES (295,1,'2016-03-06 21:55:02','2016-03-06 13:55:02','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\n\n所以，为了实现这个需求，我看了下 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 <code>Graphic[] m_TargetGraphics;</code>，用来给用户指定需要过渡的 TargetGraphic，然后复写 <code>protected override void DoStateTransition (SelectionState state, bool instant)</code>方法来实现转态转变时，执行我们的颜色过渡的代码。\n\n下面是源码，很简单，无需赘述。\n\n```C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEngine.UI;\n\nusing System;\n\nusing System.Collections.Generic;\n\npublic class MultiTargetGraphicButton : Button\n\n{\n\n// Graphic that will be colored.\n\n[SerializeField]\n\nprivate Graphic[] m_TargetGraphics;\n\nprotected override void DoStateTransition (SelectionState state, bool instant)\n\n{\n\nColor color;\n\nswitch (state) {\n\ncase Selectable.SelectionState.Normal:\n\ncolor = this.colors.normalColor;\n\nbreak;\n\ncase Selectable.SelectionState.Highlighted:\n\ncolor = this.colors.highlightedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Pressed:\n\ncolor = this.colors.pressedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Disabled:\n\ncolor = this.colors.disabledColor;\n\nbreak;\n\ndefault:\n\ncolor = Color.black;\n\nbreak;\n\n}\n\nif (base.gameObject.activeInHierarchy) {\n\nswitch (this.transition) {\n\ncase Selectable.Transition.ColorTint:\n\nColorTween (color * this.colors.colorMultiplier, instant);\n\nbreak;\n\ndefault:\n\nthrow new NotSupportedException ();\n\n}\n\n}\n\n}\n\nprivate void ColorTween (Color targetColor, bool instant)\n\n{\n\nif (this.targetGraphic == null || m_TargetGraphics == null) {\n\nreturn;\n\n}\n\nforeach (Graphic g in m_TargetGraphics) {\n\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\n\n}\n\n}\n\n}\n\n```\n\n最终在 Unity Inspector 中看到的如下所示：\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\" alt=\"\" />','实现 MultiTargetGraphicButton','','inherit','closed','closed','','294-revision-v1','','','2016-03-06 21:55:02','2016-03-06 13:55:02','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\r\n\r\n所以，为了实现这个需求，我看了下 Unity 开源的 [UGUI 的源码](https://bitbucket.org/Unity-Technologies/ui/src)，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 `Graphic[] m_TargetGraphics;`，用来给用户指定需要过渡的 TargetGraphic，然后复写 `protected override void DoStateTransition (SelectionState state, bool instant)`方法来实现转态转变时，执行我们的颜色过渡的代码。\r\n\r\n下面是源码，很简单，无需赘述。\r\n\r\n```C#\r\n\r\nusing UnityEngine;\r\n\r\nusing System.Collections;\r\n\r\nusing UnityEngine.UI;\r\n\r\nusing System;\r\n\r\nusing System.Collections.Generic;\r\n\r\npublic class MultiTargetGraphicButton : Button\r\n\r\n{\r\n\r\n// Graphic that will be colored.\r\n\r\n[SerializeField]\r\n\r\nprivate Graphic[] m_TargetGraphics;\r\n\r\nprotected override void DoStateTransition (SelectionState state, bool instant)\r\n\r\n{\r\n\r\nColor color;\r\n\r\nswitch (state) {\r\n\r\ncase Selectable.SelectionState.Normal:\r\n\r\ncolor = this.colors.normalColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Highlighted:\r\n\r\ncolor = this.colors.highlightedColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Pressed:\r\n\r\ncolor = this.colors.pressedColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Disabled:\r\n\r\ncolor = this.colors.disabledColor;\r\n\r\nbreak;\r\n\r\ndefault:\r\n\r\ncolor = Color.black;\r\n\r\nbreak;\r\n\r\n}\r\n\r\nif (base.gameObject.activeInHierarchy) {\r\n\r\nswitch (this.transition) {\r\n\r\ncase Selectable.Transition.ColorTint:\r\n\r\nColorTween (color * this.colors.colorMultiplier, instant);\r\n\r\nbreak;\r\n\r\ndefault:\r\n\r\nthrow new NotSupportedException ();\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nprivate void ColorTween (Color targetColor, bool instant)\r\n\r\n{\r\n\r\nif (this.targetGraphic == null || m_TargetGraphics == null) {\r\n\r\nreturn;\r\n\r\n}\r\n\r\nforeach (Graphic g in m_TargetGraphics) {\r\n\r\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\n最终在 Unity Inspector 中看到的如下所示：\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png)',294,'http://codingcoder.com/?p=295',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (296,1,'2016-03-06 21:56:02','2016-03-06 13:56:02','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\n\n所以，为了实现这个需求，我看了下 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 <code>Graphic[] m_TargetGraphics;</code>，用来给用户指定需要过渡的 TargetGraphic，然后复写 <code>protected override void DoStateTransition (SelectionState state, bool instant)</code>方法来实现转态转变时，执行我们的颜色过渡的代码。\n\n下面是源码，很简单，无需赘述。\n\n```C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEngine.UI;\n\nusing System;\n\nusing System.Collections.Generic;\n\npublic class MultiTargetGraphicButton : Button\n\n{\n\n// Graphic that will be colored.\n\n[SerializeField]\n\nprivate Graphic[] m_TargetGraphics;\n\nprotected override void DoStateTransition (SelectionState state, bool instant)\n\n{\n\nColor color;\n\nswitch (state) {\n\ncase Selectable.SelectionState.Normal:\n\ncolor = this.colors.normalColor;\n\nbreak;\n\ncase Selectable.SelectionState.Highlighted:\n\ncolor = this.colors.highlightedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Pressed:\n\ncolor = this.colors.pressedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Disabled:\n\ncolor = this.colors.disabledColor;\n\nbreak;\n\ndefault:\n\ncolor = Color.black;\n\nbreak;\n\n}\n\nif (base.gameObject.activeInHierarchy) {\n\nswitch (this.transition) {\n\ncase Selectable.Transition.ColorTint:\n\nColorTween (color * this.colors.colorMultiplier, instant);\n\nbreak;\n\ndefault:\n\nthrow new NotSupportedException ();\n\n}\n\n}\n\n}\n\nprivate void ColorTween (Color targetColor, bool instant)\n\n{\n\nif (this.targetGraphic == null || m_TargetGraphics == null) {\n\nreturn;\n\n}\n\nforeach (Graphic g in m_TargetGraphics) {\n\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\n\n}\n\n}\n\n}\n\n```\n\n最终在 Unity Inspector 中看到的如下所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\" rel=\"attachment wp-att-120\"><img class=\"alignnone size-medium wp-image-120\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1-300x255.png\" alt=\"Screen-Shot-2016-01-29-at-3-16-29-PM-1\" width=\"300\" height=\"255\" /></a>','实现 MultiTargetGraphicButton','','inherit','closed','closed','','294-autosave-v1','','','2016-03-06 21:56:02','2016-03-06 13:56:02','',294,'http://codingcoder.com/?p=296',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (297,1,'2016-03-06 21:56:05','2016-03-06 13:56:05','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\n\n所以，为了实现这个需求，我看了下 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 <code>Graphic[] m_TargetGraphics;</code>，用来给用户指定需要过渡的 TargetGraphic，然后复写 <code>protected override void DoStateTransition (SelectionState state, bool instant)</code>方法来实现转态转变时，执行我们的颜色过渡的代码。\n\n下面是源码，很简单，无需赘述。\n\n```C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEngine.UI;\n\nusing System;\n\nusing System.Collections.Generic;\n\npublic class MultiTargetGraphicButton : Button\n\n{\n\n// Graphic that will be colored.\n\n[SerializeField]\n\nprivate Graphic[] m_TargetGraphics;\n\nprotected override void DoStateTransition (SelectionState state, bool instant)\n\n{\n\nColor color;\n\nswitch (state) {\n\ncase Selectable.SelectionState.Normal:\n\ncolor = this.colors.normalColor;\n\nbreak;\n\ncase Selectable.SelectionState.Highlighted:\n\ncolor = this.colors.highlightedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Pressed:\n\ncolor = this.colors.pressedColor;\n\nbreak;\n\ncase Selectable.SelectionState.Disabled:\n\ncolor = this.colors.disabledColor;\n\nbreak;\n\ndefault:\n\ncolor = Color.black;\n\nbreak;\n\n}\n\nif (base.gameObject.activeInHierarchy) {\n\nswitch (this.transition) {\n\ncase Selectable.Transition.ColorTint:\n\nColorTween (color * this.colors.colorMultiplier, instant);\n\nbreak;\n\ndefault:\n\nthrow new NotSupportedException ();\n\n}\n\n}\n\n}\n\nprivate void ColorTween (Color targetColor, bool instant)\n\n{\n\nif (this.targetGraphic == null || m_TargetGraphics == null) {\n\nreturn;\n\n}\n\nforeach (Graphic g in m_TargetGraphics) {\n\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\n\n}\n\n}\n\n}\n\n```\n\n最终在 Unity Inspector 中看到的如下所示：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\" rel=\"attachment wp-att-120\"><img class=\"alignnone size-medium wp-image-120\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1-300x255.png\" alt=\"Screen-Shot-2016-01-29-at-3-16-29-PM-1\" width=\"300\" height=\"255\" /></a>','实现 MultiTargetGraphicButton','','inherit','closed','closed','','294-revision-v1','','','2016-03-06 21:56:05','2016-03-06 13:56:05','在 Unity UGUI 中，Button 的 TargetGraphic 可以用来实现点击 Button 时不同状态时的颜色的过渡变化，非常方便。但是默认的 Button 的 TargetGraphic 只能有一个，如果我想在点击这个 Button 时，想让这个 Button 下面的多个图片都显示过渡变化，UGUI 自带的 Button 就无法满足这个需求。\r\n\r\n所以，为了实现这个需求，我看了下 Unity 开源的 [UGUI 的源码](https://bitbucket.org/Unity-Technologies/ui/src)，然后实现了一个 MultiTargetGraphicButton 。基本想法其实很简单，首先在MultiTargetGraphicButton中暴露一个数组 `Graphic[] m_TargetGraphics;`，用来给用户指定需要过渡的 TargetGraphic，然后复写 `protected override void DoStateTransition (SelectionState state, bool instant)`方法来实现转态转变时，执行我们的颜色过渡的代码。\r\n\r\n下面是源码，很简单，无需赘述。\r\n\r\n```C#\r\n\r\nusing UnityEngine;\r\n\r\nusing System.Collections;\r\n\r\nusing UnityEngine.UI;\r\n\r\nusing System;\r\n\r\nusing System.Collections.Generic;\r\n\r\npublic class MultiTargetGraphicButton : Button\r\n\r\n{\r\n\r\n// Graphic that will be colored.\r\n\r\n[SerializeField]\r\n\r\nprivate Graphic[] m_TargetGraphics;\r\n\r\nprotected override void DoStateTransition (SelectionState state, bool instant)\r\n\r\n{\r\n\r\nColor color;\r\n\r\nswitch (state) {\r\n\r\ncase Selectable.SelectionState.Normal:\r\n\r\ncolor = this.colors.normalColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Highlighted:\r\n\r\ncolor = this.colors.highlightedColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Pressed:\r\n\r\ncolor = this.colors.pressedColor;\r\n\r\nbreak;\r\n\r\ncase Selectable.SelectionState.Disabled:\r\n\r\ncolor = this.colors.disabledColor;\r\n\r\nbreak;\r\n\r\ndefault:\r\n\r\ncolor = Color.black;\r\n\r\nbreak;\r\n\r\n}\r\n\r\nif (base.gameObject.activeInHierarchy) {\r\n\r\nswitch (this.transition) {\r\n\r\ncase Selectable.Transition.ColorTint:\r\n\r\nColorTween (color * this.colors.colorMultiplier, instant);\r\n\r\nbreak;\r\n\r\ndefault:\r\n\r\nthrow new NotSupportedException ();\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\nprivate void ColorTween (Color targetColor, bool instant)\r\n\r\n{\r\n\r\nif (this.targetGraphic == null || m_TargetGraphics == null) {\r\n\r\nreturn;\r\n\r\n}\r\n\r\nforeach (Graphic g in m_TargetGraphics) {\r\n\r\ng.CrossFadeColor (targetColor, (!instant) ? this.colors.fadeDuration : 0f, true, true);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\n最终在 Unity Inspector 中看到的如下所示：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1.png\" rel=\"attachment wp-att-120\"><img class=\"alignnone size-medium wp-image-120\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-16-29-PM-1-300x255.png\" alt=\"Screen-Shot-2016-01-29-at-3-16-29-PM-1\" width=\"300\" height=\"255\" /></a>',294,'http://codingcoder.com/?p=297',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (298,1,'2016-01-29 21:56:44','2016-01-29 13:56:44','今天遇到一个奇怪的问题，当我子类化 UGUI 的 Button时，具体问题请看这篇文章<a href=\"http://115.159.76.183/multitargetgraphicbutton-2/\">实现 MultiTargetGraphicButton</a>，在子类中添加了一个<code>[SerializeField]</code>的属性，发现没有显示在 Inspector 面板上面。\n\n最后通过看 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，发现对于 Button，UGUI 复写了 Inspector 面板的绘制方法，改变了默认的行为，所以导致我子类中添加的<code>[SerializeField]</code>的属性没有显示出来。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png\" rel=\"attachment wp-att-122\"><img class=\"alignnone size-medium wp-image-122\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM-300x194.png\" alt=\"Screen-Shot-2016-01-29-at-3-27-46-PM\" width=\"300\" height=\"194\" /></a>\n\n找到问题后，解决的方法也就有了，只需要再复写这个<code>OnInspectorGUI</code>绘制方法就可以了。\n\n添加如下所示的 Editor 扩展代码，即可实现需求。\n\n``` C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEditor;\n\nusing UnityEditor.UI;\n\n[CustomEditor (typeof(MultiTargetGraphicButton), true)]\n\n[CanEditMultipleObjects]\n\npublic class MultiTargetGraphicButtonEditor : ButtonEditor\n\n{\n\nSerializedProperty m_TargetGraphics;\n\nprotected override void OnEnable ()\n\n{\n\nbase.OnEnable ();\n\nm_TargetGraphics = serializedObject.FindProperty (&quot;m_TargetGraphics&quot;);\n\n}\n\npublic override void OnInspectorGUI ()\n\n{\n\nbase.OnInspectorGUI ();\n\nEditorGUILayout.Space ();\n\nserializedObject.Update ();\n\nEditorGUILayout.PropertyField (m_TargetGraphics, true);\n\nserializedObject.ApplyModifiedProperties ();\n\n}\n\n}\n\n```\n\nUnity 的编辑器扩展简直是什么都可以做，非常强大。我们可以通过<code>OnInspectorGUI</code>来隐藏一些不需要绘制的属性，这样可以让 Inspector 面板变得简洁一些。','子类化 Unity UGUI Button 时 Inspector 面板不正常的问题','','publish','open','open','','%e5%ad%90%e7%b1%bb%e5%8c%96-unity-ugui-button-%e6%97%b6-inspector-%e9%9d%a2%e6%9d%bf%e4%b8%8d%e6%ad%a3%e5%b8%b8%e7%9a%84%e9%97%ae%e9%a2%98','','','2016-03-06 21:58:51','2016-03-06 13:58:51','今天遇到一个奇怪的问题，当我子类化 UGUI 的 Button时，具体问题请看这篇文章[实现 MultiTargetGraphicButton](http://115.159.76.183/multitargetgraphicbutton-2/)，在子类中添加了一个`[SerializeField]`的属性，发现没有显示在 Inspector 面板上面。\r\n\r\n最后通过看 Unity 开源的 [UGUI 的源码](https://bitbucket.org/Unity-Technologies/ui/src)，发现对于 Button，UGUI 复写了 Inspector 面板的绘制方法，改变了默认的行为，所以导致我子类中添加的`[SerializeField]`的属性没有显示出来。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png\" rel=\"attachment wp-att-122\"><img class=\"alignnone size-medium wp-image-122\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM-300x194.png\" alt=\"Screen-Shot-2016-01-29-at-3-27-46-PM\" width=\"300\" height=\"194\" /></a>\r\n\r\n找到问题后，解决的方法也就有了，只需要再复写这个`OnInspectorGUI`绘制方法就可以了。\r\n\r\n添加如下所示的 Editor 扩展代码，即可实现需求。\r\n\r\n``` C#\r\n\r\nusing UnityEngine;\r\n\r\nusing System.Collections;\r\n\r\nusing UnityEditor;\r\n\r\nusing UnityEditor.UI;\r\n\r\n[CustomEditor (typeof(MultiTargetGraphicButton), true)]\r\n\r\n[CanEditMultipleObjects]\r\n\r\npublic class MultiTargetGraphicButtonEditor : ButtonEditor\r\n\r\n{\r\n\r\nSerializedProperty m_TargetGraphics;\r\n\r\nprotected override void OnEnable ()\r\n\r\n{\r\n\r\nbase.OnEnable ();\r\n\r\nm_TargetGraphics = serializedObject.FindProperty (&quot;m_TargetGraphics&quot;);\r\n\r\n}\r\n\r\npublic override void OnInspectorGUI ()\r\n\r\n{\r\n\r\nbase.OnInspectorGUI ();\r\n\r\nEditorGUILayout.Space ();\r\n\r\nserializedObject.Update ();\r\n\r\nEditorGUILayout.PropertyField (m_TargetGraphics, true);\r\n\r\nserializedObject.ApplyModifiedProperties ();\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\nUnity 的编辑器扩展简直是什么都可以做，非常强大。我们可以通过`OnInspectorGUI`来隐藏一些不需要绘制的属性，这样可以让 Inspector 面板变得简洁一些。',0,'http://codingcoder.com/?p=298',0,'post','',0);
INSERT INTO `wp_posts` VALUES (299,1,'2016-03-06 21:57:43','2016-03-06 13:57:43','今天遇到一个奇怪的问题，当我子类化 UGUI 的 Button时，具体问题请看这篇文章<a href=\"http://115.159.76.183/multitargetgraphicbutton-2/\">实现 MultiTargetGraphicButton</a>，在子类中添加了一个<code>[SerializeField]</code>的属性，发现没有显示在 Inspector 面板上面。\n\n最后通过看 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，发现对于 Button，UGUI 复写了 Inspector 面板的绘制方法，改变了默认的行为，所以导致我子类中添加的<code>[SerializeField]</code>的属性没有显示出来。\n\n<img src=\"/content/images/2016/01/Screen-Shot-2016-01-29-at-3-27-46-PM.png\" alt=\"\" />\n\n找到问题后，解决的方法也就有了，只需要再复写这个<code>OnInspectorGUI</code>绘制方法就可以了。\n\n添加如下所示的 Editor 扩展代码，即可实现需求。\n\n``` C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEditor;\n\nusing UnityEditor.UI;\n\n[CustomEditor (typeof(MultiTargetGraphicButton), true)]\n\n[CanEditMultipleObjects]\n\npublic class MultiTargetGraphicButtonEditor : ButtonEditor\n\n{\n\nSerializedProperty m_TargetGraphics;\n\nprotected override void OnEnable ()\n\n{\n\nbase.OnEnable ();\n\nm_TargetGraphics = serializedObject.FindProperty (&quot;m_TargetGraphics&quot;);\n\n}\n\npublic override void OnInspectorGUI ()\n\n{\n\nbase.OnInspectorGUI ();\n\nEditorGUILayout.Space ();\n\nserializedObject.Update ();\n\nEditorGUILayout.PropertyField (m_TargetGraphics, true);\n\nserializedObject.ApplyModifiedProperties ();\n\n}\n\n}\n\n```\n\nUnity 的编辑器扩展简直是什么都可以做，非常强大。我们可以通过<code>OnInspectorGUI</code>来隐藏一些不需要绘制的属性，这样可以让 Inspector 面板变得简洁一些。','子类化 Unity UGUI Button 时 Inspector 面板不正常的问题','','inherit','closed','closed','','298-revision-v1','','','2016-03-06 21:57:43','2016-03-06 13:57:43','今天遇到一个奇怪的问题，当我子类化 UGUI 的 Button时，具体问题请看这篇文章[实现 MultiTargetGraphicButton](http://115.159.76.183/multitargetgraphicbutton-2/)，在子类中添加了一个`[SerializeField]`的属性，发现没有显示在 Inspector 面板上面。\r\n\r\n最后通过看 Unity 开源的 [UGUI 的源码](https://bitbucket.org/Unity-Technologies/ui/src)，发现对于 Button，UGUI 复写了 Inspector 面板的绘制方法，改变了默认的行为，所以导致我子类中添加的`[SerializeField]`的属性没有显示出来。\r\n\r\n![](/content/images/2016/01/Screen-Shot-2016-01-29-at-3-27-46-PM.png)\r\n\r\n找到问题后，解决的方法也就有了，只需要再复写这个`OnInspectorGUI`绘制方法就可以了。\r\n\r\n添加如下所示的 Editor 扩展代码，即可实现需求。\r\n\r\n``` C#\r\n\r\nusing UnityEngine;\r\n\r\nusing System.Collections;\r\n\r\nusing UnityEditor;\r\n\r\nusing UnityEditor.UI;\r\n\r\n[CustomEditor (typeof(MultiTargetGraphicButton), true)]\r\n\r\n[CanEditMultipleObjects]\r\n\r\npublic class MultiTargetGraphicButtonEditor : ButtonEditor\r\n\r\n{\r\n\r\nSerializedProperty m_TargetGraphics;\r\n\r\nprotected override void OnEnable ()\r\n\r\n{\r\n\r\nbase.OnEnable ();\r\n\r\nm_TargetGraphics = serializedObject.FindProperty (&quot;m_TargetGraphics&quot;);\r\n\r\n}\r\n\r\npublic override void OnInspectorGUI ()\r\n\r\n{\r\n\r\nbase.OnInspectorGUI ();\r\n\r\nEditorGUILayout.Space ();\r\n\r\nserializedObject.Update ();\r\n\r\nEditorGUILayout.PropertyField (m_TargetGraphics, true);\r\n\r\nserializedObject.ApplyModifiedProperties ();\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\nUnity 的编辑器扩展简直是什么都可以做，非常强大。我们可以通过`OnInspectorGUI`来隐藏一些不需要绘制的属性，这样可以让 Inspector 面板变得简洁一些。',298,'http://codingcoder.com/?p=299',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (300,1,'2016-03-06 21:58:51','2016-03-06 13:58:51','今天遇到一个奇怪的问题，当我子类化 UGUI 的 Button时，具体问题请看这篇文章<a href=\"http://115.159.76.183/multitargetgraphicbutton-2/\">实现 MultiTargetGraphicButton</a>，在子类中添加了一个<code>[SerializeField]</code>的属性，发现没有显示在 Inspector 面板上面。\n\n最后通过看 Unity 开源的 <a href=\"https://bitbucket.org/Unity-Technologies/ui/src\">UGUI 的源码</a>，发现对于 Button，UGUI 复写了 Inspector 面板的绘制方法，改变了默认的行为，所以导致我子类中添加的<code>[SerializeField]</code>的属性没有显示出来。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png\" rel=\"attachment wp-att-122\"><img class=\"alignnone size-medium wp-image-122\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM-300x194.png\" alt=\"Screen-Shot-2016-01-29-at-3-27-46-PM\" width=\"300\" height=\"194\" /></a>\n\n找到问题后，解决的方法也就有了，只需要再复写这个<code>OnInspectorGUI</code>绘制方法就可以了。\n\n添加如下所示的 Editor 扩展代码，即可实现需求。\n\n``` C#\n\nusing UnityEngine;\n\nusing System.Collections;\n\nusing UnityEditor;\n\nusing UnityEditor.UI;\n\n[CustomEditor (typeof(MultiTargetGraphicButton), true)]\n\n[CanEditMultipleObjects]\n\npublic class MultiTargetGraphicButtonEditor : ButtonEditor\n\n{\n\nSerializedProperty m_TargetGraphics;\n\nprotected override void OnEnable ()\n\n{\n\nbase.OnEnable ();\n\nm_TargetGraphics = serializedObject.FindProperty (&quot;m_TargetGraphics&quot;);\n\n}\n\npublic override void OnInspectorGUI ()\n\n{\n\nbase.OnInspectorGUI ();\n\nEditorGUILayout.Space ();\n\nserializedObject.Update ();\n\nEditorGUILayout.PropertyField (m_TargetGraphics, true);\n\nserializedObject.ApplyModifiedProperties ();\n\n}\n\n}\n\n```\n\nUnity 的编辑器扩展简直是什么都可以做，非常强大。我们可以通过<code>OnInspectorGUI</code>来隐藏一些不需要绘制的属性，这样可以让 Inspector 面板变得简洁一些。','子类化 Unity UGUI Button 时 Inspector 面板不正常的问题','','inherit','closed','closed','','298-revision-v1','','','2016-03-06 21:58:51','2016-03-06 13:58:51','今天遇到一个奇怪的问题，当我子类化 UGUI 的 Button时，具体问题请看这篇文章[实现 MultiTargetGraphicButton](http://115.159.76.183/multitargetgraphicbutton-2/)，在子类中添加了一个`[SerializeField]`的属性，发现没有显示在 Inspector 面板上面。\r\n\r\n最后通过看 Unity 开源的 [UGUI 的源码](https://bitbucket.org/Unity-Technologies/ui/src)，发现对于 Button，UGUI 复写了 Inspector 面板的绘制方法，改变了默认的行为，所以导致我子类中添加的`[SerializeField]`的属性没有显示出来。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM.png\" rel=\"attachment wp-att-122\"><img class=\"alignnone size-medium wp-image-122\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/Screen-Shot-2016-01-29-at-3-27-46-PM-300x194.png\" alt=\"Screen-Shot-2016-01-29-at-3-27-46-PM\" width=\"300\" height=\"194\" /></a>\r\n\r\n找到问题后，解决的方法也就有了，只需要再复写这个`OnInspectorGUI`绘制方法就可以了。\r\n\r\n添加如下所示的 Editor 扩展代码，即可实现需求。\r\n\r\n``` C#\r\n\r\nusing UnityEngine;\r\n\r\nusing System.Collections;\r\n\r\nusing UnityEditor;\r\n\r\nusing UnityEditor.UI;\r\n\r\n[CustomEditor (typeof(MultiTargetGraphicButton), true)]\r\n\r\n[CanEditMultipleObjects]\r\n\r\npublic class MultiTargetGraphicButtonEditor : ButtonEditor\r\n\r\n{\r\n\r\nSerializedProperty m_TargetGraphics;\r\n\r\nprotected override void OnEnable ()\r\n\r\n{\r\n\r\nbase.OnEnable ();\r\n\r\nm_TargetGraphics = serializedObject.FindProperty (&quot;m_TargetGraphics&quot;);\r\n\r\n}\r\n\r\npublic override void OnInspectorGUI ()\r\n\r\n{\r\n\r\nbase.OnInspectorGUI ();\r\n\r\nEditorGUILayout.Space ();\r\n\r\nserializedObject.Update ();\r\n\r\nEditorGUILayout.PropertyField (m_TargetGraphics, true);\r\n\r\nserializedObject.ApplyModifiedProperties ();\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\nUnity 的编辑器扩展简直是什么都可以做，非常强大。我们可以通过`OnInspectorGUI`来隐藏一些不需要绘制的属性，这样可以让 Inspector 面板变得简洁一些。',298,'http://codingcoder.com/?p=300',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (301,1,'2016-01-30 21:59:13','2016-01-30 13:59:13','<blockquote>\n<ul>\n    <li>花落花又开 风儿吹过吹黄了树叶 吹老了好少年</li>\n    <li> 小楼昨夜又东风，故国不堪回首月明中。</li>\n    <li>雕栏玉砌应犹在，只是朱颜改。</li>\n    <li>相见不如怀念</li>\n</ul>\n</blockquote>','只那一句词，偷走你的心','','publish','open','open','','%e5%8f%aa%e9%82%a3%e4%b8%80%e5%8f%a5%e8%af%8d%ef%bc%8c%e5%81%b7%e8%b5%b0%e4%bd%a0%e7%9a%84%e5%bf%83','','','2016-03-08 11:32:02','2016-03-08 03:32:02','<blockquote>\r\n<ul>\r\n	<li>花落花又开 风儿吹过吹黄了树叶 吹老了好少年</li>\r\n	<li> 小楼昨夜又东风，故国不堪回首月明中。</li>\r\n	<li>雕栏玉砌应犹在，只是朱颜改。</li>\r\n	<li>相见不如怀念</li>\r\n</ul>\r\n</blockquote>',0,'http://codingcoder.com/?p=301',0,'post','',0);
INSERT INTO `wp_posts` VALUES (302,1,'2016-03-06 22:05:52','2016-03-06 14:05:52','<blockquote>\n  <ul>\n  <li>花落花又开 风儿吹过吹黄了树叶 吹老了好少年</p></li>\n  <li><p>小楼昨夜又东风，故国不堪回首月明中。</p></li>\n  </ul>\n</blockquote>\n\n<p>雕栏玉砌应犹在，只是朱颜改。\n\n<blockquote>\n  <ul>\n  <li>相见不如怀念</li>\n  </ul>\n</blockquote>','只那一句词，偷走你的心','','inherit','closed','closed','','301-revision-v1','','','2016-03-06 22:05:52','2016-03-06 14:05:52','&gt; + 花落花又开 风儿吹过吹黄了树叶 吹老了好少年\r\n\r\n&gt; + 小楼昨夜又东风，故国不堪回首月明中。\r\n\r\n雕栏玉砌应犹在，只是朱颜改。\r\n\r\n&gt; + 相见不如怀念',301,'http://codingcoder.com/?p=302',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (303,1,'2016-01-31 22:06:23','2016-01-31 14:06:23','创业是没有中间值的，要么是0，要么是1。\n\n在做困难决定时，不要想到取个折衷的方案。任何的折衷都是妥协，而任何的妥协和犹豫不决都会带来后面更大的麻烦。\n\n最近，Parse 服务非常意外的被 Facebook 宣布将要关闭服务，我非常吃惊，但是细想起来，或许对 Facebook 来讲这是最好的处理方法。具体请看知乎网友的回答<a href=\"https://www.zhihu.com/question/39941393\">Facebook 为什么决定关闭 Parse?</a>\n\n所谓长痛不如短痛，该下结论时一定要坚决，决不能犹豫不决，希望尝试一个折衷的方案。\n\n要么是0，要么是1，不要浪费时间去找所谓的0.5的答案。','创业，要么是0，要么是1，没有中间','','publish','open','open','','%e5%88%9b%e4%b8%9a%ef%bc%8c%e8%a6%81%e4%b9%88%e6%98%af0%ef%bc%8c%e8%a6%81%e4%b9%88%e6%98%af1%ef%bc%8c%e6%b2%a1%e6%9c%89%e4%b8%ad%e9%97%b4','','','2016-03-06 22:11:53','2016-03-06 14:11:53','创业是没有中间值的，要么是0，要么是1。\r\n\r\n在做困难决定时，不要想到取个折衷的方案。任何的折衷都是妥协，而任何的妥协和犹豫不决都会带来后面更大的麻烦。\r\n\r\n最近，Parse 服务非常意外的被 Facebook 宣布将要关闭服务，我非常吃惊，但是细想起来，或许对 Facebook 来讲这是最好的处理方法。具体请看知乎网友的回答[Facebook 为什么决定关闭 Parse?](https://www.zhihu.com/question/39941393)\r\n\r\n所谓长痛不如短痛，该下结论时一定要坚决，决不能犹豫不决，希望尝试一个折衷的方案。\r\n\r\n要么是0，要么是1，不要浪费时间去找所谓的0.5的答案。',0,'http://codingcoder.com/?p=303',0,'post','',0);
INSERT INTO `wp_posts` VALUES (304,1,'2016-03-06 22:11:36','2016-03-06 14:11:36','创业是没有中间值的，要么是0，要么是1。\n\n在做困难决定时，不要想到取个折衷的方案。任何的折衷都是妥协，而任何的妥协和犹豫不决都会带来后面更大的麻烦。\n\n最近，Parse 服务非常意外的被 Facebook 宣布将要关闭服务，我非常吃惊，但是细想起来，或许对 Facebook 来讲这是最好的处理方法。具体请看知乎网友的回答<a href=\"https://www.zhihu.com/question/39941393\">Facebook 为什么决定关闭 Parse?</a>\n\n所谓长痛不如短痛，该下结论时一定要坚决，决不能犹豫不决，希望尝试一个折衷的方案。\n\n要么是0，要么是1，不要浪费时间去找所谓的0.5的答案。','创业，要么是0，要么是1，没有中间','','inherit','closed','closed','','303-revision-v1','','','2016-03-06 22:11:36','2016-03-06 14:11:36','创业是没有中间值的，要么是0，要么是1。\r\n\r\n在做困难决定时，不要想到取个折衷的方案。任何的折衷都是妥协，而任何的妥协和犹豫不决都会带来后面更大的麻烦。\r\n\r\n最近，Parse 服务非常意外的被 Facebook 宣布将要关闭服务，我非常吃惊，但是细想起来，或许对 Facebook 来讲这是最好的处理方法。具体请看知乎网友的回答[Facebook 为什么决定关闭 Parse?](https://www.zhihu.com/question/39941393)\r\n\r\n所谓长痛不如短痛，该下结论时一定要坚决，决不能犹豫不决，希望尝试一个折衷的方案。\r\n\r\n要么是0，要么是1，不要浪费时间去找所谓的0.5的答案。',303,'http://codingcoder.com/?p=304',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (305,1,'2016-03-06 22:13:11','0000-00-00 00:00:00','在 Unity 脚本编程中，当执行一个比如 C# 的 Unity 脚本时，有一些比例 Awake、Start 等事件函数的执行顺序是被 Unity 游戏引擎预先定义好的。具体的执行顺序如下文所述：\n\n<hr />\n\n#编辑器\n\n<ul>\n<li><strong><code>Reset</code></strong>: <code>Reset</code></li>\n</ul>\n\n<hr />\n\n<blockquote>\n  本文翻译自：<a href=\"http://docs.unity3d.com/Manual/ExecutionOrder.html\">Unity Manual</a>\n</blockquote>','Unity 中事件的执行顺序','','draft','open','open','','','','','2016-03-06 22:13:11','2016-03-06 14:13:11','在 Unity 脚本编程中，当执行一个比如 C# 的 Unity 脚本时，有一些比例 Awake、Start 等事件函数的执行顺序是被 Unity 游戏引擎预先定义好的。具体的执行顺序如下文所述：\r\n\r\n---\r\n\r\n#编辑器\r\n\r\n+ **`Reset`**: `Reset`\r\n\r\n---\r\n\r\n&gt; 本文翻译自：[Unity Manual](http://docs.unity3d.com/Manual/ExecutionOrder.html)',0,'http://codingcoder.com/?p=305',0,'post','',0);
INSERT INTO `wp_posts` VALUES (306,1,'2016-03-06 22:13:11','2016-03-06 14:13:11','在 Unity 脚本编程中，当执行一个比如 C# 的 Unity 脚本时，有一些比例 Awake、Start 等事件函数的执行顺序是被 Unity 游戏引擎预先定义好的。具体的执行顺序如下文所述：\n\n<hr />\n\n#编辑器\n\n<ul>\n<li><strong><code>Reset</code></strong>: <code>Reset</code></li>\n</ul>\n\n<hr />\n\n<blockquote>\n  本文翻译自：<a href=\"http://docs.unity3d.com/Manual/ExecutionOrder.html\">Unity Manual</a>\n</blockquote>','Unity 中事件的执行顺序','','inherit','closed','closed','','305-revision-v1','','','2016-03-06 22:13:11','2016-03-06 14:13:11','在 Unity 脚本编程中，当执行一个比如 C# 的 Unity 脚本时，有一些比例 Awake、Start 等事件函数的执行顺序是被 Unity 游戏引擎预先定义好的。具体的执行顺序如下文所述：\r\n\r\n---\r\n\r\n#编辑器\r\n\r\n+ **`Reset`**: `Reset`\r\n\r\n---\r\n\r\n&gt; 本文翻译自：[Unity Manual](http://docs.unity3d.com/Manual/ExecutionOrder.html)',305,'http://codingcoder.com/?p=306',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (307,1,'2016-02-02 22:13:37','2016-02-02 14:13:37','作为一个农村出来的孩子，刘强东做到这样的成就，真心不易。\n\n今天看了刘强东的演讲，说到了农村教育的匮乏，作为同样农村的孩子，我深有体会。\n\n教育的不公平是最大不公平。\n\n像我们这样农村的孩子，常年在外漂泊，远离亲人，确实很苦。可是在城里漂着，终究还是有希望的，如果回去，那就是真的没有希望了。\n\n坚持住！\n\n最后，对于奶茶妹妹，我也是心生佩服的。坚持自己的想法，勇敢面对大众的是非口舌。着实敬之！','越来越喜欢刘强东了','','publish','open','open','','%e8%b6%8a%e6%9d%a5%e8%b6%8a%e5%96%9c%e6%ac%a2%e5%88%98%e5%bc%ba%e4%b8%9c%e4%ba%86','','','2016-03-06 22:14:59','2016-03-06 14:14:59','作为一个农村出来的孩子，刘强东做到这样的成就，真心不易。\r\n\r\n今天看了刘强东的演讲，说到了农村教育的匮乏，作为同样农村的孩子，我深有体会。\r\n\r\n教育的不公平是最大不公平。\r\n\r\n像我们这样农村的孩子，常年在外漂泊，远离亲人，确实很苦。可是在城里漂着，终究还是有希望的，如果回去，那就是真的没有希望了。\r\n\r\n坚持住！\r\n\r\n最后，对于奶茶妹妹，我也是心生佩服的。坚持自己的想法，勇敢面对大众的是非口舌。着实敬之！',0,'http://codingcoder.com/?p=307',0,'post','',0);
INSERT INTO `wp_posts` VALUES (308,1,'2016-03-06 22:14:37','2016-03-06 14:14:37','作为一个农村出来的孩子，刘强东做到这样的成就，真心不易。\n\n今天看了刘强东的演讲，说到了农村教育的匮乏，作为同样农村的孩子，我深有体会。\n\n教育的不公平是最大不公平。\n\n像我们这样农村的孩子，常年在外漂泊，远离亲人，确实很苦。可是在城里漂着，终究还是有希望的，如果回去，那就是真的没有希望了。\n\n坚持住！\n\n最后，对于奶茶妹妹，我也是心生佩服的。坚持自己的想法，勇敢面对大众的是非口舌。着实敬之！','越来越喜欢刘强东了','','inherit','closed','closed','','307-revision-v1','','','2016-03-06 22:14:37','2016-03-06 14:14:37','作为一个农村出来的孩子，刘强东做到这样的成就，真心不易。\r\n\r\n今天看了刘强东的演讲，说到了农村教育的匮乏，作为同样农村的孩子，我深有体会。\r\n\r\n教育的不公平是最大不公平。\r\n\r\n像我们这样农村的孩子，常年在外漂泊，远离亲人，确实很苦。可是在城里漂着，终究还是有希望的，如果回去，那就是真的没有希望了。\r\n\r\n坚持住！\r\n\r\n最后，对于奶茶妹妹，我也是心生佩服的。坚持自己的想法，勇敢面对大众的是非口舌。着实敬之！',307,'http://codingcoder.com/?p=308',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (309,1,'2016-03-06 22:17:28','2016-03-06 14:17:28','<a href=\"http://catlikecoding.com/\" target=\"_blank\">http://catlikecoding.com/</a>\n\n<a href=\"http://catlikecoding.com/unity/tutorials/\" target=\"_blank\">http://catlikecoding.com/unity/tutorials/</a>','优秀 Unity 学习资料','','publish','open','open','','%e4%bc%98%e7%a7%80-unity-%e5%ad%a6%e4%b9%a0%e8%b5%84%e6%96%99','','','2016-03-06 22:17:28','2016-03-06 14:17:28','<a href=\"http://catlikecoding.com/\" target=\"_blank\">http://catlikecoding.com/</a>\r\n\r\n<a href=\"http://catlikecoding.com/unity/tutorials/\" target=\"_blank\">http://catlikecoding.com/unity/tutorials/</a>',0,'http://codingcoder.com/?p=309',0,'post','',0);
INSERT INTO `wp_posts` VALUES (310,1,'2016-03-06 22:17:28','2016-03-06 14:17:28','<a href=\"http://catlikecoding.com/\" target=\"_blank\">http://catlikecoding.com/</a>\n\n<a href=\"http://catlikecoding.com/unity/tutorials/\" target=\"_blank\">http://catlikecoding.com/unity/tutorials/</a>','优秀 Unity 学习资料','','inherit','closed','closed','','309-revision-v1','','','2016-03-06 22:17:28','2016-03-06 14:17:28','<a href=\"http://catlikecoding.com/\" target=\"_blank\">http://catlikecoding.com/</a>\r\n\r\n<a href=\"http://catlikecoding.com/unity/tutorials/\" target=\"_blank\">http://catlikecoding.com/unity/tutorials/</a>',309,'http://codingcoder.com/?p=310',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (311,1,'2016-02-14 22:18:02','2016-02-14 14:18:02','<h1>自动布局</h1>\n\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\n\n但是，有时候我们又需要在结构上更严格一点。\n\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\n\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\n\n<h1>理解布局元素(layout elements)</h1>\n\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\n\n一个布局元素有一些属性来定义它自己的大小：\n\nMinimum width\n\nMinimum height\n\nPreferred width\n\nPreferred height\n\nFlexible width\n\nFlexible height\n\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\n\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\n\n首先，先分配 minimum sizes;\n\n如果还有足够的空间，再分配 preferred size;\n\n如果还有额外的空间，分配 flexible size。\n\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\n\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\n\n<h1>Layout Element</h1>\n\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\n\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\n\n更多信息请看<a href=\"http://docs.unity3d.com/Manual/script-LayoutElement.html\">Layout Element </a>\n\n<h1>理解布局控制器</h1>\n\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\n\n一个布局控制器也可以同时作为一个布局元素。\n\n<h1>Content Size Fitter</h1>\n\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\n\n[embed]http://v.youku.com/v_show/id_XMTQ3MTQ3Mjk2MA==.html?from=y1.7-1.2[/embed]\n\n&nbsp;\n\n<h1>Aspect Ratio Fitter</h1>\n\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\n\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\n\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\n\n<h1>Layout Groups</h1>\n\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\n\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\n\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\n\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\n\n<h1>布局是如何计算的</h1>\n\n自动布局系统按照下面的步骤进行布局的计算：\n\n<ol>\n<li>minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。</p></li>\n<li><p>布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</p></li>\n</ol>\n\n<p>这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\n\n<ol>\n<li>minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical</li>\n</ol>\n\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\n\n<ol>\n<li>布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</li>\n</ol>\n\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\n\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。','Unity UGUI 自动布局系统','','publish','open','open','','unity-ugui-%e8%87%aa%e5%8a%a8%e5%b8%83%e5%b1%80%e7%b3%bb%e7%bb%9f','','','2016-03-06 22:24:17','2016-03-06 14:24:17','# 自动布局\r\n\r\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\r\n\r\n但是，有时候我们又需要在结构上更严格一点。\r\n\r\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\r\n\r\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\r\n\r\n# 理解布局元素(layout elements)\r\n\r\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\r\n\r\n一个布局元素有一些属性来定义它自己的大小：\r\n\r\nMinimum width\r\n\r\nMinimum height\r\n\r\nPreferred width\r\n\r\nPreferred height\r\n\r\nFlexible width\r\n\r\nFlexible height\r\n\r\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\r\n\r\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\r\n\r\n首先，先分配 minimum sizes;\r\n\r\n如果还有足够的空间，再分配 preferred size;\r\n\r\n如果还有额外的空间，分配 flexible size。\r\n\r\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\r\n\r\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\r\n\r\n# Layout Element\r\n\r\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\r\n\r\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\r\n\r\n更多信息请看[Layout Element ](http://docs.unity3d.com/Manual/script-LayoutElement.html)\r\n\r\n# 理解布局控制器\r\n\r\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\r\n\r\n一个布局控制器也可以同时作为一个布局元素。\r\n\r\n# Content Size Fitter\r\n\r\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTQ3MTQ3Mjk2MA==.html?from=y1.7-1.2[/embed]\r\n\r\n&nbsp;\r\n\r\n# Aspect Ratio Fitter\r\n\r\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\r\n\r\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\r\n\r\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\r\n\r\n# Layout Groups\r\n\r\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\r\n\r\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\r\n\r\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\r\n\r\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\r\n\r\n# 布局是如何计算的\r\n\r\n自动布局系统按照下面的步骤进行布局的计算：\r\n\r\n1. minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n2. 布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\r\n\r\n3. minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical\r\n\r\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n4. 布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\r\n\r\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。',0,'http://codingcoder.com/?p=311',0,'post','',0);
INSERT INTO `wp_posts` VALUES (312,1,'2016-03-06 22:18:58','2016-03-06 14:18:58','<h1>自动布局</h1>\n\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\n\n但是，有时候我们又需要在结构上更严格一点。\n\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\n\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\n\n<h1>理解布局元素(layout elements)</h1>\n\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\n\n一个布局元素有一些属性来定义它自己的大小：\n\nMinimum width\n\nMinimum height\n\nPreferred width\n\nPreferred height\n\nFlexible width\n\nFlexible height\n\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\n\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\n\n首先，先分配 minimum sizes;\n\n如果还有足够的空间，再分配 preferred size;\n\n如果还有额外的空间，分配 flexible size。\n\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\n\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\n\n<h1>Layout Element</h1>\n\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\n\n<img src=\"/content/images/2016/02/UI_LayoutElementInspector.png\" alt=\"\" />\n\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\n\n更多信息请看<a href=\"http://docs.unity3d.com/Manual/script-LayoutElement.html\">Layout Element </a>\n\n<h1>理解布局控制器</h1>\n\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\n\n一个布局控制器也可以同时作为一个布局元素。\n\n#Content Size Fitter\n\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\n\n&lt;embed src=\"http://player.youku.com/player.php/sid/XMTQ3MTQ3Mjk2MA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt;\n\n#Aspect Ratio Fitter\n\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\n\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\n\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\n\n#Layout Groups\n\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\n\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\n\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\n\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\n\n<h1>布局是如何计算的</h1>\n\n自动布局系统按照下面的步骤进行布局的计算：\n\n<ol>\n<li>minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。</p></li>\n<li><p>布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</p></li>\n</ol>\n\n<p>这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\n\n<ol>\n<li>minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical</li>\n</ol>\n\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\n\n<ol>\n<li>布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</li>\n</ol>\n\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\n\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。','Unity UGUI 自动布局系统','','inherit','closed','closed','','311-revision-v1','','','2016-03-06 22:18:58','2016-03-06 14:18:58','# 自动布局\r\n\r\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\r\n\r\n但是，有时候我们又需要在结构上更严格一点。\r\n\r\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\r\n\r\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\r\n\r\n# 理解布局元素(layout elements)\r\n\r\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\r\n\r\n一个布局元素有一些属性来定义它自己的大小：\r\n\r\nMinimum width\r\n\r\nMinimum height\r\n\r\nPreferred width\r\n\r\nPreferred height\r\n\r\nFlexible width\r\n\r\nFlexible height\r\n\r\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\r\n\r\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\r\n\r\n首先，先分配 minimum sizes;\r\n\r\n如果还有足够的空间，再分配 preferred size;\r\n\r\n如果还有额外的空间，分配 flexible size。\r\n\r\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\r\n\r\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\r\n\r\n# Layout Element\r\n\r\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\r\n\r\n![](/content/images/2016/02/UI_LayoutElementInspector.png)\r\n\r\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\r\n\r\n更多信息请看[Layout Element ](http://docs.unity3d.com/Manual/script-LayoutElement.html)\r\n\r\n# 理解布局控制器\r\n\r\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\r\n\r\n一个布局控制器也可以同时作为一个布局元素。\r\n\r\n#Content Size Fitter\r\n\r\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\r\n\r\n&lt;embed src=\"http://player.youku.com/player.php/sid/XMTQ3MTQ3Mjk2MA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt;\r\n\r\n#Aspect Ratio Fitter\r\n\r\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\r\n\r\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\r\n\r\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\r\n\r\n#Layout Groups\r\n\r\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\r\n\r\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\r\n\r\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\r\n\r\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\r\n\r\n# 布局是如何计算的\r\n\r\n自动布局系统按照下面的步骤进行布局的计算：\r\n\r\n1. minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n2. 布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\r\n\r\n3. minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical\r\n\r\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n4. 布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\r\n\r\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。',311,'http://codingcoder.com/?p=312',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (313,1,'2016-03-06 22:24:13','2016-03-06 14:24:13','<h1>自动布局</h1>\n\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\n\n但是，有时候我们又需要在结构上更严格一点。\n\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\n\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\n\n<h1>理解布局元素(layout elements)</h1>\n\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\n\n一个布局元素有一些属性来定义它自己的大小：\n\nMinimum width\n\nMinimum height\n\nPreferred width\n\nPreferred height\n\nFlexible width\n\nFlexible height\n\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\n\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\n\n首先，先分配 minimum sizes;\n\n如果还有足够的空间，再分配 preferred size;\n\n如果还有额外的空间，分配 flexible size。\n\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\n\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\n\n<h1>Layout Element</h1>\n\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\n\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\n\n更多信息请看<a href=\"http://docs.unity3d.com/Manual/script-LayoutElement.html\">Layout Element </a>\n\n<h1>理解布局控制器</h1>\n\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\n\n一个布局控制器也可以同时作为一个布局元素。\n\n<h1>Content Size Fitter</h1>\n\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\n\n[embed]http://v.youku.com/v_show/id_XMTQ3MTQ3Mjk2MA==.html?from=y1.7-1.2[/embed]\n\n&nbsp;\n\n<h1>Aspect Ratio Fitter</h1>\n\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\n\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\n\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\n\n<h1>Layout Groups</h1>\n\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\n\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\n\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\n\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\n\n<h1>布局是如何计算的</h1>\n\n自动布局系统按照下面的步骤进行布局的计算：\n\n<ol>\n<li>minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。</p></li>\n<li><p>布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</p></li>\n</ol>\n\n<p>这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\n\n<ol>\n<li>minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical</li>\n</ol>\n\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\n\n<ol>\n<li>布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</li>\n</ol>\n\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\n\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。','Unity UGUI 自动布局系统','','inherit','closed','closed','','311-autosave-v1','','','2016-03-06 22:24:13','2016-03-06 14:24:13','',311,'http://codingcoder.com/?p=313',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (315,1,'2016-03-06 22:24:17','2016-03-06 14:24:17','<h1>自动布局</h1>\n\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\n\n但是，有时候我们又需要在结构上更严格一点。\n\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\n\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\n\n<h1>理解布局元素(layout elements)</h1>\n\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\n\n一个布局元素有一些属性来定义它自己的大小：\n\nMinimum width\n\nMinimum height\n\nPreferred width\n\nPreferred height\n\nFlexible width\n\nFlexible height\n\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\n\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\n\n首先，先分配 minimum sizes;\n\n如果还有足够的空间，再分配 preferred size;\n\n如果还有额外的空间，分配 flexible size。\n\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\n\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\n\n<h1>Layout Element</h1>\n\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\n\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\n\n更多信息请看<a href=\"http://docs.unity3d.com/Manual/script-LayoutElement.html\">Layout Element </a>\n\n<h1>理解布局控制器</h1>\n\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\n\n一个布局控制器也可以同时作为一个布局元素。\n\n<h1>Content Size Fitter</h1>\n\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\n\n[embed]http://v.youku.com/v_show/id_XMTQ3MTQ3Mjk2MA==.html?from=y1.7-1.2[/embed]\n\n&nbsp;\n\n<h1>Aspect Ratio Fitter</h1>\n\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\n\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\n\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\n\n<h1>Layout Groups</h1>\n\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\n\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\n\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\n\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\n\n<h1>布局是如何计算的</h1>\n\n自动布局系统按照下面的步骤进行布局的计算：\n\n<ol>\n<li>minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。</p></li>\n<li><p>布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</p></li>\n</ol>\n\n<p>这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\n\n<ol>\n<li>minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical</li>\n</ol>\n\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\n\n<ol>\n<li>布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</li>\n</ol>\n\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\n\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。','Unity UGUI 自动布局系统','','inherit','closed','closed','','311-revision-v1','','','2016-03-06 22:24:17','2016-03-06 14:24:17','# 自动布局\r\n\r\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\r\n\r\n但是，有时候我们又需要在结构上更严格一点。\r\n\r\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\r\n\r\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\r\n\r\n# 理解布局元素(layout elements)\r\n\r\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\r\n\r\n一个布局元素有一些属性来定义它自己的大小：\r\n\r\nMinimum width\r\n\r\nMinimum height\r\n\r\nPreferred width\r\n\r\nPreferred height\r\n\r\nFlexible width\r\n\r\nFlexible height\r\n\r\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\r\n\r\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\r\n\r\n首先，先分配 minimum sizes;\r\n\r\n如果还有足够的空间，再分配 preferred size;\r\n\r\n如果还有额外的空间，分配 flexible size。\r\n\r\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\r\n\r\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\r\n\r\n# Layout Element\r\n\r\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\r\n\r\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\r\n\r\n更多信息请看[Layout Element ](http://docs.unity3d.com/Manual/script-LayoutElement.html)\r\n\r\n# 理解布局控制器\r\n\r\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\r\n\r\n一个布局控制器也可以同时作为一个布局元素。\r\n\r\n# Content Size Fitter\r\n\r\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTQ3MTQ3Mjk2MA==.html?from=y1.7-1.2[/embed]\r\n\r\n&nbsp;\r\n\r\n# Aspect Ratio Fitter\r\n\r\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\r\n\r\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\r\n\r\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\r\n\r\n# Layout Groups\r\n\r\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\r\n\r\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\r\n\r\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\r\n\r\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\r\n\r\n# 布局是如何计算的\r\n\r\n自动布局系统按照下面的步骤进行布局的计算：\r\n\r\n1. minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n2. 布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\r\n\r\n3. minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical\r\n\r\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n4. 布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\r\n\r\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。',311,'http://codingcoder.com/?p=315',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (314,1,'2016-03-06 22:20:27','2016-03-06 14:20:27','<h1>自动布局</h1>\n\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\n\n但是，有时候我们又需要在结构上更严格一点。\n\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\n\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\n\n<h1>理解布局元素(layout elements)</h1>\n\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\n\n一个布局元素有一些属性来定义它自己的大小：\n\nMinimum width\n\nMinimum height\n\nPreferred width\n\nPreferred height\n\nFlexible width\n\nFlexible height\n\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\n\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\n\n首先，先分配 minimum sizes;\n\n如果还有足够的空间，再分配 preferred size;\n\n如果还有额外的空间，分配 flexible size。\n\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\n\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\n\n<h1>Layout Element</h1>\n\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\n\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\n\n更多信息请看<a href=\"http://docs.unity3d.com/Manual/script-LayoutElement.html\">Layout Element </a>\n\n<h1>理解布局控制器</h1>\n\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\n\n一个布局控制器也可以同时作为一个布局元素。\n\n#Content Size Fitter\n\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\n\n&lt;embed src=\"http://player.youku.com/player.php/sid/XMTQ3MTQ3Mjk2MA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt;\n\n#Aspect Ratio Fitter\n\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\n\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\n\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\n\n#Layout Groups\n\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\n\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\n\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\n\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\n\n<h1>布局是如何计算的</h1>\n\n自动布局系统按照下面的步骤进行布局的计算：\n\n<ol>\n<li>minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。</p></li>\n<li><p>布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</p></li>\n</ol>\n\n<p>这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\n\n<ol>\n<li>minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical</li>\n</ol>\n\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\n\n<ol>\n<li>布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。</li>\n</ol>\n\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\n\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。','Unity UGUI 自动布局系统','','inherit','closed','closed','','311-revision-v1','','','2016-03-06 22:20:27','2016-03-06 14:20:27','# 自动布局\r\n\r\n基于 Rect Transform 的布局系统足够灵活，它可以处理很多不同类型的布局，并且允许用完全自定义的方式来摆放元素。\r\n\r\n但是，有时候我们又需要在结构上更严格一点。\r\n\r\n自动布局系统可以让我们以嵌套的形式来布局元素，比如水平布局组，垂直布局组或者是网格布局组。它也允许元素自动根据自己的内容来自适应大小。比如，一个按钮可以根据按钮上文字的多少再加上一些间距，来动态的决定这个按钮的大小。\r\n\r\n自动布局系统是构建在基本的 Rect Transform 布局系统之上的。自动布局系统可以选择性的使用。\r\n\r\n# 理解布局元素(layout elements)\r\n\r\n自动布局系统是基于布局元素和布局控制器(layout controller)这两个概念的。一个布局元素就是一个挂载了 Rect Transform 组件的 GameObject，当然这个 GameObject也可以同时挂载其他的组件。一个布局元素可以知道它自己的大小。布局元素并不直接设置它自己的尺寸大小，但是其他的承当布局控制器作用的组件可以使用布局元素提供的信息，计算出一个大小来设置到 GameObject 上面。\r\n\r\n一个布局元素有一些属性来定义它自己的大小：\r\n\r\nMinimum width\r\n\r\nMinimum height\r\n\r\nPreferred width\r\n\r\nPreferred height\r\n\r\nFlexible width\r\n\r\nFlexible height\r\n\r\nContent Size Fitter 和 各种 LayoutGroup 组件就是布局控制器，它们利用布局元素提供的上述信息来进行布局。\r\n\r\n在 LayoutGroup 中的布局元素的布局过程依据下面所述的基本原则：\r\n\r\n首先，先分配 minimum sizes;\r\n\r\n如果还有足够的空间，再分配 preferred size;\r\n\r\n如果还有额外的空间，分配 flexible size。\r\n\r\n任何一个挂载了 Rect Transform 组件的 GameObject 都可以看成一个布局元素。他们的 minimum, preferred, 和 flexible size 的默认值都是0。\r\n\r\n有一些特定的组件挂载到 GameObject 上时，会改变这些布局属性的值。Image 和 Text 组件就是两个会改变布局元素属性的两个例子。它们改变 preferred width 和 height 来匹配精灵和文字的内容。\r\n\r\n# Layout Element\r\n\r\n如果你想要改变一个元素的的 minimum , preferred 或者 flexible size，你可以通过给 GameObject 添加一个 Layout Element 组件来实现。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" rel=\"attachment wp-att-125\"><img class=\"alignnone size-full wp-image-125\" src=\"http://codingcoder.com/wp-content/uploads/2016/02/UI_LayoutElementInspector.png\" alt=\"UI_LayoutElementInspector\" width=\"292\" height=\"130\" /></a>\r\n\r\n选中复现框，然后输入你想要的数值大小就可以复写 Layout Element 的布局属性。\r\n\r\n更多信息请看[Layout Element ](http://docs.unity3d.com/Manual/script-LayoutElement.html)\r\n\r\n# 理解布局控制器\r\n\r\n布局控制器是用来控制一个或多个布局元素的各种大小和位置的组件。一个布局控制器可以挂载它的 GameObject 的布局元素，也可以控制它的子对象的布局元素。\r\n\r\n一个布局控制器也可以同时作为一个布局元素。\r\n\r\n#Content Size Fitter\r\n\r\nContent Size Fitter 是一个布局控制器，它可以控制自己的布局元素的大小。了解自动布局系统是如何工作的最简单的方式就是给一个挂载有 Text 组件的 GameObject 上面再挂载一个 Content Size Fitter 组件。下面的这个视频做了演示：\r\n\r\n&lt;embed src=\"http://player.youku.com/player.php/sid/XMTQ3MTQ3Mjk2MA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt;\r\n\r\n#Aspect Ratio Fitter\r\n\r\nAspect Ratio Fitter 是一个布局控制器，它可以根据宽高比例控制自己的布局元素的大小。\r\n\r\nAspect Ratio Fitter 可以根据宽度和宽高比来调整高度，或者相反。它也可以让它的元素根据它的父节点内部的大小来适配，\r\n\r\n或者让他包裹住它的父节点。Aspect Ratio Fitter 不会考虑例如 minimum size 、preferred size 这些布局参数。\r\n\r\n#Layout Groups\r\n\r\nA layout group functions as a layout controller that controls the sizes and positions of its child layout elements. For example, a Horizontal Layout Group places its children next to each other, and a Grid Layout Group places its children in a grid.\r\n\r\nA layout group doesn’t control its own size. Instead it functions as a layout element itself which may be controlled by other layout controllers or be set manually.\r\n\r\nWhatever size a layout group is allocated, it will in most cases try to allocate an appropriate amount of space for each of its child layout elements based on the minimum, preferred, and flexible sizes they reported. Layout groups can also be nested arbitrarily this way.\r\n\r\nSee the reference pages for Horizontal Layout Group, Vertical Layout Group and Grid Layout Group for more information.\r\n\r\n# 布局是如何计算的\r\n\r\n自动布局系统按照下面的步骤进行布局的计算：\r\n\r\n1. minimum, preferred 和 flexible width 在调用ILayoutElement 组件的 CalculateLayoutInputHorizontal 方法时会被计算。这种计算是从下往上计算的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n2. 布局元素的有效宽度被计算好后，通过调用ILayoutController 组件的SetLayoutHorizontal方法进行设置。由于子对象的宽度需要根据父对象的总宽度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的宽度。\r\n\r\n3. minimum, preferred 和 flexible height 在调用ILayoutElement组件的CalculateLayoutInputVertical\r\n\r\n方法时会被计算。这个过程是自下向上的，子对象会在父对象之前进行计算。父对象在计算时，可能会需要把子对象的信息考虑进去进行计算。\r\n\r\n4. 布局元素的有效高度被计算好后，通过调用ILayoutController 组件的SetLayoutVertical方法进行设置。由于子对象的高度需要根据父对象的总高度来计算，所以这个过程是从上到下的过程，子对象在父对象计算完成后再进行计算。\r\n\r\n这一步完成后，布局元素的 Rect Transforms 组件就都更新到了新的高度。\r\n\r\n从上面你也可以看出来，自动布局系统会先计算宽度，然后再计算高度。这样，计算出来的高度可能依赖于宽度，但是计算出来的宽度不可能依赖于高度。',311,'http://codingcoder.com/?p=314',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (316,1,'2016-02-14 22:25:04','2016-02-14 14:25:04','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\n\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\n\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\n\nusing UnityEngine.EventSystems;\n\nusing UnityEngine.Serialization;\n\nnamespace UnityEngine.UI\n\n{\n\n[DisallowMultipleComponent]\n\n[ExecuteInEditMode]\n\n[RequireComponent(typeof(RectTransform))]\n\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\n\n{\n\n// ... 为方便，我只保留了核心的部分\n\n}\n\n}</pre>\n\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\n\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\n\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\n\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\n\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\n\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\n\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\n\n<hr />\n\n<h1><code>ILayoutGroup</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\n\n{\n\nvoid SetLayoutHorizontal();\n\nvoid SetLayoutVertical();\n\n}\n\n// An ILayoutGroup component should drive the RectTransforms of its children.\n\npublic interface ILayoutGroup : ILayoutController\n\n{\n\n}\n\n// An ILayoutSelfController component should drive its own RectTransform.\n\npublic interface ILayoutSelfController : ILayoutController\n\n{\n\n}</pre>\n\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\n\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\n\n很简单，不再赘述。\n\n<hr />\n\n<h1><code>ILayoutElement</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\n\n{\n\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\n\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\n\nvoid CalculateLayoutInputHorizontal();\n\n// After this method is invoked, layout vertical input properties should return up-to-date values.\n\n// Children will already have up-to-date layout vertical inputs when this methods is called.\n\nvoid CalculateLayoutInputVertical();\n\n// Layout horizontal inputs\n\nfloat minWidth { get; }\n\nfloat preferredWidth { get; }\n\nfloat flexibleWidth { get; }\n\n// Layout vertical inputs\n\nfloat minHeight { get; }\n\nfloat preferredHeight { get; }\n\nfloat flexibleHeight { get; }\n\nint layoutPriority { get; }\n\n}</pre>\n\n这个接口很简单，看方法名就可以猜测到这个 <code>ILayoutElement</code> 接口是负责界面布局相关的事情的。\n\n为了详细了解这个接口的用途，我们详细看一下它的文档。\n\n<h1><code>ILayoutElement</code> 方法介绍</h1>\n\n如果一个组件实现了 <code>ILayoutElement</code> 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\n\n布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n\n同理，对于 <code>CalculateLayoutInputVertical</code> 和 <code>minHeight</code> 、<code>preferredHeight</code> 、<code>flexibleHeight</code>也是如此。\n\n<code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性不能依赖于当前这个 layout element 的<code>RectTransform</code>组件的任何属性，否则这个组件的行为是未定义的。\n\n<code>minHeight</code>，<code>preferredHeight</code>和<code>flexibleHeight</code>可以依赖于这个<code>RectTransform</code>组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\n\nchild layout elements 的所有的<code>RectTransform</code>的任何属性都可以被依赖。\n\n<code>layoutPriority</code>属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 <code>ILayoutElement</code>的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\n\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\n\n下面我们再来看一下具体的实现函数：\n\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\n\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\n\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\n\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\n\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\n\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\n\npublic virtual int layoutPriority { get { return 0; } }</pre>\n\n&nbsp;\n\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\n\n这几个属性都调用了类似于<code>GetTotalMinSize(0)</code>这样的方法，\n\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\n\n{\n\nreturn m_TotalMinSize[axis];\n\n}\n</pre>\n\n而<code>private Vector2 m_TotalMinSize = Vector2.zero;</code>是一个 Vector2的变量，分别用来储存宽度和高度。\n\n那么<code>m_TotalMinSize</code>这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\n\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\n\n{\n\nm_TotalMinSize[axis] = totalMin;\n\nm_TotalPreferredSize[axis] = totalPreferred;\n\nm_TotalFlexibleSize[axis] = totalFlexible;\n\n}</pre>\n\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\n\n必然会调用这个方法。\n\n在上面我们提到：\n\n<blockquote>\n  布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，<em>这些属性可以被事先缓存</em>，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n</blockquote>\n\n这里的<code>m_TotalMinSize</code>其实就是起来缓存的作用。\n\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 <a href=\"\">Auto Layout</a>。\n\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。','Unity UGUI LayoutGroup 源码解析','','publish','open','open','','unity-ugui-layoutgroup-%e6%ba%90%e7%a0%81%e8%a7%a3%e6%9e%90','','','2016-03-06 22:36:53','2016-03-06 14:36:53','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\r\n\r\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\r\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\r\n\r\nusing UnityEngine.EventSystems;\r\n\r\nusing UnityEngine.Serialization;\r\n\r\nnamespace UnityEngine.UI\r\n\r\n{\r\n\r\n[DisallowMultipleComponent]\r\n\r\n[ExecuteInEditMode]\r\n\r\n[RequireComponent(typeof(RectTransform))]\r\n\r\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\r\n\r\n{\r\n\r\n// ... 为方便，我只保留了核心的部分\r\n\r\n}\r\n\r\n}</pre>\r\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\r\n\r\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\r\n\r\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\r\n\r\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\r\n\r\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\r\n\r\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\r\n\r\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\r\n\r\n---\r\n\r\n# `ILayoutGroup`\r\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\r\n\r\n{\r\n\r\nvoid SetLayoutHorizontal();\r\n\r\nvoid SetLayoutVertical();\r\n\r\n}\r\n\r\n// An ILayoutGroup component should drive the RectTransforms of its children.\r\n\r\npublic interface ILayoutGroup : ILayoutController\r\n\r\n{\r\n\r\n}\r\n\r\n// An ILayoutSelfController component should drive its own RectTransform.\r\n\r\npublic interface ILayoutSelfController : ILayoutController\r\n\r\n{\r\n\r\n}</pre>\r\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\r\n\r\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\r\n\r\n很简单，不再赘述。\r\n\r\n---\r\n\r\n# `ILayoutElement`\r\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\r\n\r\n{\r\n\r\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputHorizontal();\r\n\r\n// After this method is invoked, layout vertical input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout vertical inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputVertical();\r\n\r\n// Layout horizontal inputs\r\n\r\nfloat minWidth { get; }\r\n\r\nfloat preferredWidth { get; }\r\n\r\nfloat flexibleWidth { get; }\r\n\r\n// Layout vertical inputs\r\n\r\nfloat minHeight { get; }\r\n\r\nfloat preferredHeight { get; }\r\n\r\nfloat flexibleHeight { get; }\r\n\r\nint layoutPriority { get; }\r\n\r\n}</pre>\r\n这个接口很简单，看方法名就可以猜测到这个 `ILayoutElement` 接口是负责界面布局相关的事情的。\r\n\r\n为了详细了解这个接口的用途，我们详细看一下它的文档。\r\n\r\n# `ILayoutElement` 方法介绍\r\n\r\n如果一个组件实现了 `ILayoutElement` 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\r\n\r\n布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n同理，对于 `CalculateLayoutInputVertical` 和 `minHeight` 、`preferredHeight` 、`flexibleHeight`也是如此。\r\n\r\n`minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性不能依赖于当前这个 layout element 的`RectTransform`组件的任何属性，否则这个组件的行为是未定义的。\r\n\r\n`minHeight`，`preferredHeight`和`flexibleHeight`可以依赖于这个`RectTransform`组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\r\n\r\nchild layout elements 的所有的`RectTransform`的任何属性都可以被依赖。\r\n\r\n`layoutPriority`属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 `ILayoutElement`的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\r\n\r\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\r\n\r\n下面我们再来看一下具体的实现函数：\r\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\r\n\r\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\r\n\r\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\r\n\r\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\r\n\r\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\r\n\r\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\r\n\r\npublic virtual int layoutPriority { get { return 0; } }</pre>\r\n&nbsp;\r\n\r\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\r\n\r\n这几个属性都调用了类似于`GetTotalMinSize(0)`这样的方法，\r\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\r\n\r\n{\r\n\r\nreturn m_TotalMinSize[axis];\r\n\r\n}\r\n</pre>\r\n而`private Vector2 m_TotalMinSize = Vector2.zero;`是一个 Vector2的变量，分别用来储存宽度和高度。\r\n\r\n那么`m_TotalMinSize`这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\r\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\r\n\r\n{\r\n\r\nm_TotalMinSize[axis] = totalMin;\r\n\r\nm_TotalPreferredSize[axis] = totalPreferred;\r\n\r\nm_TotalFlexibleSize[axis] = totalFlexible;\r\n\r\n}</pre>\r\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\r\n\r\n必然会调用这个方法。\r\n\r\n在上面我们提到：\r\n\r\n&gt; 布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，*这些属性可以被事先缓存*，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n这里的`m_TotalMinSize`其实就是起来缓存的作用。\r\n\r\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 [Auto Layout]()。\r\n\r\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。',0,'http://codingcoder.com/?p=316',0,'post','',0);
INSERT INTO `wp_posts` VALUES (317,1,'2016-03-06 22:26:17','2016-03-06 14:26:17','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\n\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\n\n```C#\n\nusing System.Collections.Generic;\n\nusing UnityEngine.EventSystems;\n\nusing UnityEngine.Serialization;\n\nnamespace UnityEngine.UI\n\n{\n\n[DisallowMultipleComponent]\n\n[ExecuteInEditMode]\n\n[RequireComponent(typeof(RectTransform))]\n\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\n\n{\n\n// ... 为方便，我只保留了核心的部分\n\n}\n\n}\n\n<pre><code><br />为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\n\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\n\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\n\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\n\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\n\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\n\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\n\n---\n\n# `ILayoutGroup`\n\n```C#\n\npublic interface ILayoutController\n\n{\n\nvoid SetLayoutHorizontal();\n\nvoid SetLayoutVertical();\n\n}\n\n// An ILayoutGroup component should drive the RectTransforms of its children.\n\npublic interface ILayoutGroup : ILayoutController\n\n{\n\n}\n\n// An ILayoutSelfController component should drive its own RectTransform.\n\npublic interface ILayoutSelfController : ILayoutController\n\n{\n\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\n\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\n\n很简单，不再赘述。\n\n&lt;hr /&gt;\n\n&lt;h1&gt;&lt;code&gt;ILayoutElement&lt;/code&gt;&lt;/h1&gt;\n\n```C#\n\npublic interface ILayoutElement\n\n{\n\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\n\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\n\nvoid CalculateLayoutInputHorizontal();\n\n// After this method is invoked, layout vertical input properties should return up-to-date values.\n\n// Children will already have up-to-date layout vertical inputs when this methods is called.\n\nvoid CalculateLayoutInputVertical();\n\n// Layout horizontal inputs\n\nfloat minWidth { get; }\n\nfloat preferredWidth { get; }\n\nfloat flexibleWidth { get; }\n\n// Layout vertical inputs\n\nfloat minHeight { get; }\n\nfloat preferredHeight { get; }\n\nfloat flexibleHeight { get; }\n\nint layoutPriority { get; }\n\n}\n\n<pre><code><br />这个接口很简单，看方法名就可以猜测到这个 `ILayoutElement` 接口是负责界面布局相关的事情的。\n\n为了详细了解这个接口的用途，我们详细看一下它的文档。\n\n# `ILayoutElement` 方法介绍\n\n如果一个组件实现了 `ILayoutElement` 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\n\n布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n\n同理，对于 `CalculateLayoutInputVertical` 和 `minHeight` 、`preferredHeight` 、`flexibleHeight`也是如此。\n\n`minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性不能依赖于当前这个 layout element 的`RectTransform`组件的任何属性，否则这个组件的行为是未定义的。\n\n`minHeight`，`preferredHeight`和`flexibleHeight`可以依赖于这个`RectTransform`组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\n\nchild layout elements 的所有的`RectTransform`的任何属性都可以被依赖。\n\n`layoutPriority`属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 `ILayoutElement`的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\n\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\n\n下面我们再来看一下具体的实现函数：\n\n```C#\n\npublic virtual float minWidth { get { return GetTotalMinSize(0); } }\n\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\n\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\n\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\n\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\n\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\n\npublic virtual int layoutPriority { get { return 0; } }\n\n</code></pre>\n\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\n\n这几个属性都调用了类似于<code>GetTotalMinSize(0)</code>这样的方法，\n\n<pre><code><br />protected float GetTotalMinSize(int axis)\n\n{\n\nreturn m_TotalMinSize[axis];\n\n}\n\n</code></pre>\n\n而<code>private Vector2 m_TotalMinSize = Vector2.zero;</code>是一个 Vector2的变量，分别用来储存宽度和高度。\n\n那么<code>m_TotalMinSize</code>这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\n\n<pre><code><br />protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\n\n{\n\nm_TotalMinSize[axis] = totalMin;\n\nm_TotalPreferredSize[axis] = totalPreferred;\n\nm_TotalFlexibleSize[axis] = totalFlexible;\n\n}\n\n</code></pre>\n\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\n\n必然会调用这个方法。\n\n在上面我们提到：\n\n<blockquote>\n  布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，<em>这些属性可以被事先缓存</em>，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n</blockquote>\n\n这里的<code>m_TotalMinSize</code>其实就是起来缓存的作用。\n\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 <a href=\"\">Auto Layout</a>。\n\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。','Unity UGUI LayoutGroup 源码解析','','inherit','closed','closed','','316-revision-v1','','','2016-03-06 22:26:17','2016-03-06 14:26:17','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\r\n\r\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\r\n\r\n```C#\r\n\r\nusing System.Collections.Generic;\r\n\r\nusing UnityEngine.EventSystems;\r\n\r\nusing UnityEngine.Serialization;\r\n\r\nnamespace UnityEngine.UI\r\n\r\n{\r\n\r\n[DisallowMultipleComponent]\r\n\r\n[ExecuteInEditMode]\r\n\r\n[RequireComponent(typeof(RectTransform))]\r\n\r\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\r\n\r\n{\r\n\r\n// ... 为方便，我只保留了核心的部分\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\r\n\r\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\r\n\r\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\r\n\r\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\r\n\r\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\r\n\r\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\r\n\r\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\r\n\r\n---\r\n\r\n# `ILayoutGroup`\r\n\r\n```C#\r\n\r\npublic interface ILayoutController\r\n\r\n{\r\n\r\nvoid SetLayoutHorizontal();\r\n\r\nvoid SetLayoutVertical();\r\n\r\n}\r\n\r\n// An ILayoutGroup component should drive the RectTransforms of its children.\r\n\r\npublic interface ILayoutGroup : ILayoutController\r\n\r\n{\r\n\r\n}\r\n\r\n// An ILayoutSelfController component should drive its own RectTransform.\r\n\r\npublic interface ILayoutSelfController : ILayoutController\r\n\r\n{\r\n\r\n}\r\n\r\n```\r\n\r\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\r\n\r\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\r\n\r\n很简单，不再赘述。\r\n\r\n---\r\n\r\n# `ILayoutElement`\r\n\r\n```C#\r\n\r\npublic interface ILayoutElement\r\n\r\n{\r\n\r\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputHorizontal();\r\n\r\n// After this method is invoked, layout vertical input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout vertical inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputVertical();\r\n\r\n// Layout horizontal inputs\r\n\r\nfloat minWidth { get; }\r\n\r\nfloat preferredWidth { get; }\r\n\r\nfloat flexibleWidth { get; }\r\n\r\n// Layout vertical inputs\r\n\r\nfloat minHeight { get; }\r\n\r\nfloat preferredHeight { get; }\r\n\r\nfloat flexibleHeight { get; }\r\n\r\nint layoutPriority { get; }\r\n\r\n}\r\n\r\n```\r\n\r\n这个接口很简单，看方法名就可以猜测到这个 `ILayoutElement` 接口是负责界面布局相关的事情的。\r\n\r\n为了详细了解这个接口的用途，我们详细看一下它的文档。\r\n\r\n# `ILayoutElement` 方法介绍\r\n\r\n如果一个组件实现了 `ILayoutElement` 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\r\n\r\n布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n同理，对于 `CalculateLayoutInputVertical` 和 `minHeight` 、`preferredHeight` 、`flexibleHeight`也是如此。\r\n\r\n`minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性不能依赖于当前这个 layout element 的`RectTransform`组件的任何属性，否则这个组件的行为是未定义的。\r\n\r\n`minHeight`，`preferredHeight`和`flexibleHeight`可以依赖于这个`RectTransform`组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\r\n\r\nchild layout elements 的所有的`RectTransform`的任何属性都可以被依赖。\r\n\r\n`layoutPriority`属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 `ILayoutElement`的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\r\n\r\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\r\n\r\n下面我们再来看一下具体的实现函数：\r\n\r\n```C#\r\n\r\npublic virtual float minWidth { get { return GetTotalMinSize(0); } }\r\n\r\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\r\n\r\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\r\n\r\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\r\n\r\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\r\n\r\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\r\n\r\npublic virtual int layoutPriority { get { return 0; } }\r\n\r\n```\r\n\r\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\r\n\r\n这几个属性都调用了类似于`GetTotalMinSize(0)`这样的方法，\r\n\r\n```\r\n\r\nprotected float GetTotalMinSize(int axis)\r\n\r\n{\r\n\r\nreturn m_TotalMinSize[axis];\r\n\r\n}\r\n\r\n```\r\n\r\n而`private Vector2 m_TotalMinSize = Vector2.zero;`是一个 Vector2的变量，分别用来储存宽度和高度。\r\n\r\n那么`m_TotalMinSize`这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\r\n\r\n```\r\n\r\nprotected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\r\n\r\n{\r\n\r\nm_TotalMinSize[axis] = totalMin;\r\n\r\nm_TotalPreferredSize[axis] = totalPreferred;\r\n\r\nm_TotalFlexibleSize[axis] = totalFlexible;\r\n\r\n}\r\n\r\n```\r\n\r\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\r\n\r\n必然会调用这个方法。\r\n\r\n在上面我们提到：\r\n\r\n&gt; 布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，*这些属性可以被事先缓存*，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n这里的`m_TotalMinSize`其实就是起来缓存的作用。\r\n\r\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 [Auto Layout]()。\r\n\r\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。',316,'http://codingcoder.com/?p=317',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (318,1,'2016-03-06 22:33:41','2016-03-06 14:33:41','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\n\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\n\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\n\nusing UnityEngine.EventSystems;\n\nusing UnityEngine.Serialization;\n\nnamespace UnityEngine.UI\n\n{\n\n[DisallowMultipleComponent]\n\n[ExecuteInEditMode]\n\n[RequireComponent(typeof(RectTransform))]\n\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\n\n{\n\n// ... 为方便，我只保留了核心的部分\n\n}\n\n}</pre>\n\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\n\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\n\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\n\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\n\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\n\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\n\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\n\n<hr />\n\n<h1><code>ILayoutGroup</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\n\n{\n\nvoid SetLayoutHorizontal();\n\nvoid SetLayoutVertical();\n\n}\n\n// An ILayoutGroup component should drive the RectTransforms of its children.\n\npublic interface ILayoutGroup : ILayoutController\n\n{\n\n}\n\n// An ILayoutSelfController component should drive its own RectTransform.\n\npublic interface ILayoutSelfController : ILayoutController\n\n{\n\n}</pre>\n\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\n\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\n\n很简单，不再赘述。\n\n<hr />\n\n<h1><code>ILayoutElement</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\n\n{\n\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\n\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\n\nvoid CalculateLayoutInputHorizontal();\n\n// After this method is invoked, layout vertical input properties should return up-to-date values.\n\n// Children will already have up-to-date layout vertical inputs when this methods is called.\n\nvoid CalculateLayoutInputVertical();\n\n// Layout horizontal inputs\n\nfloat minWidth { get; }\n\nfloat preferredWidth { get; }\n\nfloat flexibleWidth { get; }\n\n// Layout vertical inputs\n\nfloat minHeight { get; }\n\nfloat preferredHeight { get; }\n\nfloat flexibleHeight { get; }\n\nint layoutPriority { get; }\n\n}</pre>\n\n这个接口很简单，看方法名就可以猜测到这个 <code>ILayoutElement</code> 接口是负责界面布局相关的事情的。\n\n为了详细了解这个接口的用途，我们详细看一下它的文档。\n\n<h1><code>ILayoutElement</code> 方法介绍</h1>\n\n如果一个组件实现了 <code>ILayoutElement</code> 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\n\n布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n\n同理，对于 <code>CalculateLayoutInputVertical</code> 和 <code>minHeight</code> 、<code>preferredHeight</code> 、<code>flexibleHeight</code>也是如此。\n\n<code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性不能依赖于当前这个 layout element 的<code>RectTransform</code>组件的任何属性，否则这个组件的行为是未定义的。\n\n<code>minHeight</code>，<code>preferredHeight</code>和<code>flexibleHeight</code>可以依赖于这个<code>RectTransform</code>组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\n\nchild layout elements 的所有的<code>RectTransform</code>的任何属性都可以被依赖。\n\n<code>layoutPriority</code>属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 <code>ILayoutElement</code>的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\n\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\n\n下面我们再来看一下具体的实现函数：\n\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\n\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\n\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\n\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\n\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\n\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\n\npublic virtual int layoutPriority { get { return 0; } }</pre>\n\n&nbsp;\n\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\n\n这几个属性都调用了类似于<code>GetTotalMinSize(0)</code>这样的方法，\n\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\n\n{\n\nreturn m_TotalMinSize[axis];\n\n}\n</pre>\n\n而<code>private Vector2 m_TotalMinSize = Vector2.zero;</code>是一个 Vector2的变量，分别用来储存宽度和高度。\n\n那么<code>m_TotalMinSize</code>这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\n\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\n\n{\n\nm_TotalMinSize[axis] = totalMin;\n\nm_TotalPreferredSize[axis] = totalPreferred;\n\nm_TotalFlexibleSize[axis] = totalFlexible;\n\n}</pre>\n\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\n\n必然会调用这个方法。\n\n在上面我们提到：\n\n<blockquote>\n  布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，<em>这些属性可以被事先缓存</em>，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n</blockquote>\n\n这里的<code>m_TotalMinSize</code>其实就是起来缓存的作用。\n\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 <a href=\"\">Auto Layout</a>。\n\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。','Unity UGUI LayoutGroup 源码解析','','inherit','closed','closed','','316-autosave-v1','','','2016-03-06 22:33:41','2016-03-06 14:33:41','',316,'http://codingcoder.com/?p=318',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (321,1,'2016-03-06 22:36:53','2016-03-06 14:36:53','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\n\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\n\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\n\nusing UnityEngine.EventSystems;\n\nusing UnityEngine.Serialization;\n\nnamespace UnityEngine.UI\n\n{\n\n[DisallowMultipleComponent]\n\n[ExecuteInEditMode]\n\n[RequireComponent(typeof(RectTransform))]\n\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\n\n{\n\n// ... 为方便，我只保留了核心的部分\n\n}\n\n}</pre>\n\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\n\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\n\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\n\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\n\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\n\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\n\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\n\n<hr />\n\n<h1><code>ILayoutGroup</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\n\n{\n\nvoid SetLayoutHorizontal();\n\nvoid SetLayoutVertical();\n\n}\n\n// An ILayoutGroup component should drive the RectTransforms of its children.\n\npublic interface ILayoutGroup : ILayoutController\n\n{\n\n}\n\n// An ILayoutSelfController component should drive its own RectTransform.\n\npublic interface ILayoutSelfController : ILayoutController\n\n{\n\n}</pre>\n\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\n\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\n\n很简单，不再赘述。\n\n<hr />\n\n<h1><code>ILayoutElement</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\n\n{\n\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\n\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\n\nvoid CalculateLayoutInputHorizontal();\n\n// After this method is invoked, layout vertical input properties should return up-to-date values.\n\n// Children will already have up-to-date layout vertical inputs when this methods is called.\n\nvoid CalculateLayoutInputVertical();\n\n// Layout horizontal inputs\n\nfloat minWidth { get; }\n\nfloat preferredWidth { get; }\n\nfloat flexibleWidth { get; }\n\n// Layout vertical inputs\n\nfloat minHeight { get; }\n\nfloat preferredHeight { get; }\n\nfloat flexibleHeight { get; }\n\nint layoutPriority { get; }\n\n}</pre>\n\n这个接口很简单，看方法名就可以猜测到这个 <code>ILayoutElement</code> 接口是负责界面布局相关的事情的。\n\n为了详细了解这个接口的用途，我们详细看一下它的文档。\n\n<h1><code>ILayoutElement</code> 方法介绍</h1>\n\n如果一个组件实现了 <code>ILayoutElement</code> 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\n\n布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n\n同理，对于 <code>CalculateLayoutInputVertical</code> 和 <code>minHeight</code> 、<code>preferredHeight</code> 、<code>flexibleHeight</code>也是如此。\n\n<code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性不能依赖于当前这个 layout element 的<code>RectTransform</code>组件的任何属性，否则这个组件的行为是未定义的。\n\n<code>minHeight</code>，<code>preferredHeight</code>和<code>flexibleHeight</code>可以依赖于这个<code>RectTransform</code>组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\n\nchild layout elements 的所有的<code>RectTransform</code>的任何属性都可以被依赖。\n\n<code>layoutPriority</code>属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 <code>ILayoutElement</code>的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\n\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\n\n下面我们再来看一下具体的实现函数：\n\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\n\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\n\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\n\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\n\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\n\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\n\npublic virtual int layoutPriority { get { return 0; } }</pre>\n\n&nbsp;\n\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\n\n这几个属性都调用了类似于<code>GetTotalMinSize(0)</code>这样的方法，\n\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\n\n{\n\nreturn m_TotalMinSize[axis];\n\n}\n</pre>\n\n而<code>private Vector2 m_TotalMinSize = Vector2.zero;</code>是一个 Vector2的变量，分别用来储存宽度和高度。\n\n那么<code>m_TotalMinSize</code>这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\n\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\n\n{\n\nm_TotalMinSize[axis] = totalMin;\n\nm_TotalPreferredSize[axis] = totalPreferred;\n\nm_TotalFlexibleSize[axis] = totalFlexible;\n\n}</pre>\n\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\n\n必然会调用这个方法。\n\n在上面我们提到：\n\n<blockquote>\n  布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，<em>这些属性可以被事先缓存</em>，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n</blockquote>\n\n这里的<code>m_TotalMinSize</code>其实就是起来缓存的作用。\n\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 <a href=\"\">Auto Layout</a>。\n\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。','Unity UGUI LayoutGroup 源码解析','','inherit','closed','closed','','316-revision-v1','','','2016-03-06 22:36:53','2016-03-06 14:36:53','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\r\n\r\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\r\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\r\n\r\nusing UnityEngine.EventSystems;\r\n\r\nusing UnityEngine.Serialization;\r\n\r\nnamespace UnityEngine.UI\r\n\r\n{\r\n\r\n[DisallowMultipleComponent]\r\n\r\n[ExecuteInEditMode]\r\n\r\n[RequireComponent(typeof(RectTransform))]\r\n\r\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\r\n\r\n{\r\n\r\n// ... 为方便，我只保留了核心的部分\r\n\r\n}\r\n\r\n}</pre>\r\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\r\n\r\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\r\n\r\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\r\n\r\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\r\n\r\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\r\n\r\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\r\n\r\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\r\n\r\n---\r\n\r\n# `ILayoutGroup`\r\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\r\n\r\n{\r\n\r\nvoid SetLayoutHorizontal();\r\n\r\nvoid SetLayoutVertical();\r\n\r\n}\r\n\r\n// An ILayoutGroup component should drive the RectTransforms of its children.\r\n\r\npublic interface ILayoutGroup : ILayoutController\r\n\r\n{\r\n\r\n}\r\n\r\n// An ILayoutSelfController component should drive its own RectTransform.\r\n\r\npublic interface ILayoutSelfController : ILayoutController\r\n\r\n{\r\n\r\n}</pre>\r\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\r\n\r\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\r\n\r\n很简单，不再赘述。\r\n\r\n---\r\n\r\n# `ILayoutElement`\r\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\r\n\r\n{\r\n\r\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputHorizontal();\r\n\r\n// After this method is invoked, layout vertical input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout vertical inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputVertical();\r\n\r\n// Layout horizontal inputs\r\n\r\nfloat minWidth { get; }\r\n\r\nfloat preferredWidth { get; }\r\n\r\nfloat flexibleWidth { get; }\r\n\r\n// Layout vertical inputs\r\n\r\nfloat minHeight { get; }\r\n\r\nfloat preferredHeight { get; }\r\n\r\nfloat flexibleHeight { get; }\r\n\r\nint layoutPriority { get; }\r\n\r\n}</pre>\r\n这个接口很简单，看方法名就可以猜测到这个 `ILayoutElement` 接口是负责界面布局相关的事情的。\r\n\r\n为了详细了解这个接口的用途，我们详细看一下它的文档。\r\n\r\n# `ILayoutElement` 方法介绍\r\n\r\n如果一个组件实现了 `ILayoutElement` 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\r\n\r\n布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n同理，对于 `CalculateLayoutInputVertical` 和 `minHeight` 、`preferredHeight` 、`flexibleHeight`也是如此。\r\n\r\n`minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性不能依赖于当前这个 layout element 的`RectTransform`组件的任何属性，否则这个组件的行为是未定义的。\r\n\r\n`minHeight`，`preferredHeight`和`flexibleHeight`可以依赖于这个`RectTransform`组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\r\n\r\nchild layout elements 的所有的`RectTransform`的任何属性都可以被依赖。\r\n\r\n`layoutPriority`属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 `ILayoutElement`的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\r\n\r\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\r\n\r\n下面我们再来看一下具体的实现函数：\r\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\r\n\r\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\r\n\r\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\r\n\r\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\r\n\r\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\r\n\r\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\r\n\r\npublic virtual int layoutPriority { get { return 0; } }</pre>\r\n&nbsp;\r\n\r\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\r\n\r\n这几个属性都调用了类似于`GetTotalMinSize(0)`这样的方法，\r\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\r\n\r\n{\r\n\r\nreturn m_TotalMinSize[axis];\r\n\r\n}\r\n</pre>\r\n而`private Vector2 m_TotalMinSize = Vector2.zero;`是一个 Vector2的变量，分别用来储存宽度和高度。\r\n\r\n那么`m_TotalMinSize`这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\r\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\r\n\r\n{\r\n\r\nm_TotalMinSize[axis] = totalMin;\r\n\r\nm_TotalPreferredSize[axis] = totalPreferred;\r\n\r\nm_TotalFlexibleSize[axis] = totalFlexible;\r\n\r\n}</pre>\r\n所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，\r\n\r\n必然会调用这个方法。\r\n\r\n在上面我们提到：\r\n\r\n&gt; 布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，*这些属性可以被事先缓存*，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n这里的`m_TotalMinSize`其实就是起来缓存的作用。\r\n\r\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 [Auto Layout]()。\r\n\r\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。',316,'http://codingcoder.com/?p=321',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (319,1,'2016-03-06 22:31:49','2016-03-06 14:31:49','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\n\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\n\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\n\nusing UnityEngine.EventSystems;\n\nusing UnityEngine.Serialization;\n\nnamespace UnityEngine.UI\n\n{\n\n[DisallowMultipleComponent]\n\n[ExecuteInEditMode]\n\n[RequireComponent(typeof(RectTransform))]\n\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\n\n{\n\n// ... 为方便，我只保留了核心的部分\n\n}\n\n}</pre>\n\n&nbsp;\n\n``` C#\n\n \n\n```\n\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\n\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\n\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\n\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\n\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\n\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\n\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\n\n<hr />\n\n<h1><code>ILayoutGroup</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\n\n{\n\nvoid SetLayoutHorizontal();\n\nvoid SetLayoutVertical();\n\n}\n\n// An ILayoutGroup component should drive the RectTransforms of its children.\n\npublic interface ILayoutGroup : ILayoutController\n\n{\n\n}\n\n// An ILayoutSelfController component should drive its own RectTransform.\n\npublic interface ILayoutSelfController : ILayoutController\n\n{\n\n}</pre>\n\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\n\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\n\n很简单，不再赘述。\n\n<hr />\n\n<h1><code>ILayoutElement</code></h1>\n\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\n\n{\n\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\n\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\n\nvoid CalculateLayoutInputHorizontal();\n\n// After this method is invoked, layout vertical input properties should return up-to-date values.\n\n// Children will already have up-to-date layout vertical inputs when this methods is called.\n\nvoid CalculateLayoutInputVertical();\n\n// Layout horizontal inputs\n\nfloat minWidth { get; }\n\nfloat preferredWidth { get; }\n\nfloat flexibleWidth { get; }\n\n// Layout vertical inputs\n\nfloat minHeight { get; }\n\nfloat preferredHeight { get; }\n\nfloat flexibleHeight { get; }\n\nint layoutPriority { get; }\n\n}</pre>\n\n这个接口很简单，看方法名就可以猜测到这个 <code>ILayoutElement</code> 接口是负责界面布局相关的事情的。\n\n为了详细了解这个接口的用途，我们详细看一下它的文档。\n\n<h1><code>ILayoutElement</code> 方法介绍</h1>\n\n如果一个组件实现了 <code>ILayoutElement</code> 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\n\n布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n\n同理，对于 <code>CalculateLayoutInputVertical</code> 和 <code>minHeight</code> 、<code>preferredHeight</code> 、<code>flexibleHeight</code>也是如此。\n\n<code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性不能依赖于当前这个 layout element 的<code>RectTransform</code>组件的任何属性，否则这个组件的行为是未定义的。\n\n<code>minHeight</code>，<code>preferredHeight</code>和<code>flexibleHeight</code>可以依赖于这个<code>RectTransform</code>组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\n\nchild layout elements 的所有的<code>RectTransform</code>的任何属性都可以被依赖。\n\n<code>layoutPriority</code>属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 <code>ILayoutElement</code>的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\n\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\n\n下面我们再来看一下具体的实现函数：\n\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\n\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\n\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\n\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\n\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\n\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\n\npublic virtual int layoutPriority { get { return 0; } }</pre>\n\n&nbsp;\n\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\n\n这几个属性都调用了类似于<code>GetTotalMinSize(0)</code>这样的方法，\n\n&nbsp;\n\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\n\n{\n\nreturn m_TotalMinSize[axis];\n\n}\n</pre>\n\n&nbsp;\n\n而<code>private Vector2 m_TotalMinSize = Vector2.zero;</code>是一个 Vector2的变量，分别用来储存宽度和高度。\n\n那么<code>m_TotalMinSize</code>这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\n\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\n\n{\n\nm_TotalMinSize[axis] = totalMin;\n\nm_TotalPreferredSize[axis] = totalPreferred;\n\nm_TotalFlexibleSize[axis] = totalFlexible;\n\n}</pre>\n\n&nbsp;\n\n<span style=\"line-height: 1.6471;\">所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，</span>\n\n必然会调用这个方法。\n\n在上面我们提到：\n\n<blockquote>\n  布局系统在调用 <code>minWidth</code>，<code>perferredWidth</code> 和 <code>flexibleWidth</code> 这几个属性之前，会先调用 <code>CalculateLayoutInputHorizontal</code>方法。如果在调用 <code>CalculateLayoutInputHorizontal</code> 时，<em>这些属性可以被事先缓存</em>，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\n</blockquote>\n\n这里的<code>m_TotalMinSize</code>其实就是起来缓存的作用。\n\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 <a href=\"\">Auto Layout</a>。\n\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。','Unity UGUI LayoutGroup 源码解析','','inherit','closed','closed','','316-revision-v1','','','2016-03-06 22:31:49','2016-03-06 14:31:49','在 UGUI 中，常见的 HorizontalLayoutGroup 和 GridLayoutGroup 等都是继承于 LayoutGroup 这个抽象类的。\r\n\r\n这也是我们分析 LayoutGroup 源码的入口。下面我们先来看一下代码。\r\n<pre class=\"lang:c# decode:true \">using System.Collections.Generic;\r\n\r\nusing UnityEngine.EventSystems;\r\n\r\nusing UnityEngine.Serialization;\r\n\r\nnamespace UnityEngine.UI\r\n\r\n{\r\n\r\n[DisallowMultipleComponent]\r\n\r\n[ExecuteInEditMode]\r\n\r\n[RequireComponent(typeof(RectTransform))]\r\n\r\npublic abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup\r\n\r\n{\r\n\r\n// ... 为方便，我只保留了核心的部分\r\n\r\n}\r\n\r\n}</pre>\r\n&nbsp;\r\n\r\n``` C#\r\n\r\n&nbsp;\r\n\r\n```\r\n\r\n为了简洁，我只保留了 LayoutGroup 类的定义部分，具体的实现部分暂不讨论。\r\n\r\n在分析源码时，由于源码会非常多，琐碎的实现细节也非常多，这时候就需要去繁就简，把暂时不需要的部分忽略掉，然后重点抓住源码的总体架构，当总体架构清晰后，基本上就理解了\r\n\r\n作者这个设计的意图和原因，这个时候，再去一点一点的搞清楚细节部分。\r\n\r\n简单来讲就是一句话，擒贼先擒王，最后再一点点的对付那些虾兵蟹将。\r\n\r\n好了，我们回到源码分析上。LayoutGroup 是一个抽象类，所以 LayoutGroup 这个类是不能直接被作为实例或者组件使用的，你必须使用它的子类，如 HorizontalLayoutGroup 或者 GripLayoutGroup 等。\r\n\r\nLayoutGroup 继承与 UIBehaviour 这个基类，UIBehavior 这个类很简单，我就不多说了。\r\n\r\nLayoutGroup 还实现了 ILayoutElement 和 ILayoutGroup 这两个接口，这两个接口类我们不是很熟悉，我们先来分析一下。\r\n\r\n---\r\n\r\n# `ILayoutGroup`\r\n<pre class=\"lang:c# decode:true \">public interface ILayoutController\r\n\r\n{\r\n\r\nvoid SetLayoutHorizontal();\r\n\r\nvoid SetLayoutVertical();\r\n\r\n}\r\n\r\n// An ILayoutGroup component should drive the RectTransforms of its children.\r\n\r\npublic interface ILayoutGroup : ILayoutController\r\n\r\n{\r\n\r\n}\r\n\r\n// An ILayoutSelfController component should drive its own RectTransform.\r\n\r\npublic interface ILayoutSelfController : ILayoutController\r\n\r\n{\r\n\r\n}</pre>\r\nILayoutGroup is an ILayoutController that should drive the RectTransforms of its children.\r\n\r\nILayoutSelfController is an ILayoutController that should drive its own RectTransform.\r\n\r\n很简单，不再赘述。\r\n\r\n---\r\n\r\n# `ILayoutElement`\r\n<pre class=\"lang:c# decode:true \">public interface ILayoutElement\r\n\r\n{\r\n\r\n// After this method is invoked, layout horizontal input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout horizontal inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputHorizontal();\r\n\r\n// After this method is invoked, layout vertical input properties should return up-to-date values.\r\n\r\n// Children will already have up-to-date layout vertical inputs when this methods is called.\r\n\r\nvoid CalculateLayoutInputVertical();\r\n\r\n// Layout horizontal inputs\r\n\r\nfloat minWidth { get; }\r\n\r\nfloat preferredWidth { get; }\r\n\r\nfloat flexibleWidth { get; }\r\n\r\n// Layout vertical inputs\r\n\r\nfloat minHeight { get; }\r\n\r\nfloat preferredHeight { get; }\r\n\r\nfloat flexibleHeight { get; }\r\n\r\nint layoutPriority { get; }\r\n\r\n}</pre>\r\n这个接口很简单，看方法名就可以猜测到这个 `ILayoutElement` 接口是负责界面布局相关的事情的。\r\n\r\n为了详细了解这个接口的用途，我们详细看一下它的文档。\r\n\r\n# `ILayoutElement` 方法介绍\r\n\r\n如果一个组件实现了 `ILayoutElement` 接口，那么这个组件就会被自动布局系统作为一个 layout element 对待。\r\n\r\n布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，这些属性可以被事先缓存，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n同理，对于 `CalculateLayoutInputVertical` 和 `minHeight` 、`preferredHeight` 、`flexibleHeight`也是如此。\r\n\r\n`minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性不能依赖于当前这个 layout element 的`RectTransform`组件的任何属性，否则这个组件的行为是未定义的。\r\n\r\n`minHeight`，`preferredHeight`和`flexibleHeight`可以依赖于这个`RectTransform`组件的水平方向的属性，比如宽度或者所在位置的 X 坐标。\r\n\r\nchild layout elements 的所有的`RectTransform`的任何属性都可以被依赖。\r\n\r\n`layoutPriority`属性代表当前这个 layout element 的布局优先级。如果一个 GameObject 上面挂载了多个实现了 `ILayoutElement`的组件，那么会以最高的那个 layoutPriority 作为选定的优先级。需要注意的是，小于0的优先级会被忽略掉。\r\n\r\n这样，我们可以通过把这个值设为-1或者其他负数，就可以达到只改变某些选中的属性的值的目的。//todo\r\n\r\n下面我们再来看一下具体的实现函数：\r\n<pre class=\"lang:c# decode:true \">public virtual float minWidth { get { return GetTotalMinSize(0); } }\r\n\r\npublic virtual float preferredWidth { get { return GetTotalPreferredSize(0); } }\r\n\r\npublic virtual float flexibleWidth { get { return GetTotalFlexibleSize(0); } }\r\n\r\npublic virtual float minHeight { get { return GetTotalMinSize(1); } }\r\n\r\npublic virtual float preferredHeight { get { return GetTotalPreferredSize(1); } }\r\n\r\npublic virtual float flexibleHeight { get { return GetTotalFlexibleSize(1); } }\r\n\r\npublic virtual int layoutPriority { get { return 0; } }</pre>\r\n&nbsp;\r\n\r\n从设计的角度上来讲，因为 LayoutGroup 这个类是抽象类，子类中必然需要根据需要做自定义的处理。所以这几个属性都是 virtual 的，方便子类复写。\r\n\r\n这几个属性都调用了类似于`GetTotalMinSize(0)`这样的方法，\r\n\r\n&nbsp;\r\n<pre class=\"lang:c# decode:true\">protected float GetTotalMinSize(int axis)\r\n\r\n{\r\n\r\nreturn m_TotalMinSize[axis];\r\n\r\n}\r\n</pre>\r\n&nbsp;\r\n\r\n而`private Vector2 m_TotalMinSize = Vector2.zero;`是一个 Vector2的变量，分别用来储存宽度和高度。\r\n\r\n那么`m_TotalMinSize`这里面的数据是什么时候设置的呢？是通过下面这个方法来改变的。\r\n<pre class=\"lang:c# decode:true \">protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis)\r\n\r\n{\r\n\r\nm_TotalMinSize[axis] = totalMin;\r\n\r\nm_TotalPreferredSize[axis] = totalPreferred;\r\n\r\nm_TotalFlexibleSize[axis] = totalFlexible;\r\n\r\n}</pre>\r\n&nbsp;\r\n\r\n<span style=\"line-height: 1.6471;\">所以，我们可以猜想，在LayoutGroup 的子类 HorizontalLayoutGroup 或者 GridLayoutGroup 中，</span>\r\n\r\n必然会调用这个方法。\r\n\r\n在上面我们提到：\r\n\r\n&gt; 布局系统在调用 `minWidth`，`perferredWidth` 和 `flexibleWidth` 这几个属性之前，会先调用 `CalculateLayoutInputHorizontal`方法。如果在调用 `CalculateLayoutInputHorizontal` 时，*这些属性可以被事先缓存*，是可以提升性能的，这样就不需要每一次调用这些属性时都去计算一遍。\r\n\r\n这里的`m_TotalMinSize`其实就是起来缓存的作用。\r\n\r\n关于在 Auto Layout 系统中，minWidth, perferredWidth 和 flexibleWidth 等类似的属性的具体是如何影响布局的，请看下一篇文章 [Auto Layout]()。\r\n\r\nLayoutGroup 的基本框架我们都已经分析完了，剩下的问题就是具体的代码实现细节方面的事情了。我会在后续的文章中继续分析比如 HorizontalLayoutGroup 、GridLayoutGroup 之类的 LayoutGroup 的详细实现。',316,'http://codingcoder.com/?p=319',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (320,1,'2016-02-15 22:35:12','2016-02-15 14:35:12','<h1>ILayoutIgnorer</h1>\n\n如果一个<code>RectTransform</code>上挂载了一个实现了<code>ILayoutIgnorer</code> 接口的组件，那么这个 <code>RectTransform</code> 将会被布局系统忽略掉。\n\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\n\n<pre class=\"lang:c# decode:true\">public virtual void CalculateLayoutInputHorizontal()\n\n{\n\nm_RectChildren.Clear();\n\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\n\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\n\nif (rect == null) {\n\ncontinue;\n\n}\n\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\n\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}\n\nm_Tracker.Clear();\n\n}</pre>\n\n其中，\n\n<pre class=\"lang:c# decode:true\">if (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}</pre>\n\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\n\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\n\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\n\n我录制了一个 Demo 的演示视频，欢迎大家观看：\n\n[embed]http://v.youku.com/v_show/id_XMTQ3Mjc1OTQwNA==.html?from=y1.7-1.2[/embed]','Unity UGUI ILayoutIgnorer 源码解析','','publish','open','open','','unity-ugui-ilayoutignorer-%e6%ba%90%e7%a0%81%e8%a7%a3%e6%9e%90','','','2016-03-06 22:39:20','2016-03-06 14:39:20','# ILayoutIgnorer\r\n\r\n如果一个`RectTransform`上挂载了一个实现了`ILayoutIgnorer` 接口的组件，那么这个 `RectTransform` 将会被布局系统忽略掉。\r\n\r\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\r\n<pre class=\"lang:c# decode:true\">public virtual void CalculateLayoutInputHorizontal()\r\n\r\n{\r\n\r\nm_RectChildren.Clear();\r\n\r\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\r\n\r\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\r\n\r\nif (rect == null) {\r\n\r\ncontinue;\r\n\r\n}\r\n\r\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\r\n\r\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\r\n\r\nm_RectChildren.Add(rect);\r\n\r\n}\r\n\r\n}\r\n\r\nm_Tracker.Clear();\r\n\r\n}</pre>\r\n其中，\r\n<pre class=\"lang:c# decode:true\">if (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\r\n\r\nm_RectChildren.Add(rect);\r\n\r\n}\r\n\r\n}</pre>\r\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\r\n\r\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\r\n\r\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\r\n\r\n我录制了一个 Demo 的演示视频，欢迎大家观看：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTQ3Mjc1OTQwNA==.html?from=y1.7-1.2[/embed]',0,'http://codingcoder.com/?p=320',0,'post','',0);
INSERT INTO `wp_posts` VALUES (324,1,'2016-03-06 22:39:20','2016-03-06 14:39:20','<h1>ILayoutIgnorer</h1>\n\n如果一个<code>RectTransform</code>上挂载了一个实现了<code>ILayoutIgnorer</code> 接口的组件，那么这个 <code>RectTransform</code> 将会被布局系统忽略掉。\n\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\n\n<pre class=\"lang:c# decode:true\">public virtual void CalculateLayoutInputHorizontal()\n\n{\n\nm_RectChildren.Clear();\n\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\n\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\n\nif (rect == null) {\n\ncontinue;\n\n}\n\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\n\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}\n\nm_Tracker.Clear();\n\n}</pre>\n\n其中，\n\n<pre class=\"lang:c# decode:true\">if (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}</pre>\n\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\n\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\n\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\n\n我录制了一个 Demo 的演示视频，欢迎大家观看：\n\n[embed]http://v.youku.com/v_show/id_XMTQ3Mjc1OTQwNA==.html?from=y1.7-1.2[/embed]','Unity UGUI ILayoutIgnorer 源码解析','','inherit','closed','closed','','320-revision-v1','','','2016-03-06 22:39:20','2016-03-06 14:39:20','# ILayoutIgnorer\r\n\r\n如果一个`RectTransform`上挂载了一个实现了`ILayoutIgnorer` 接口的组件，那么这个 `RectTransform` 将会被布局系统忽略掉。\r\n\r\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\r\n<pre class=\"lang:c# decode:true\">public virtual void CalculateLayoutInputHorizontal()\r\n\r\n{\r\n\r\nm_RectChildren.Clear();\r\n\r\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\r\n\r\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\r\n\r\nif (rect == null) {\r\n\r\ncontinue;\r\n\r\n}\r\n\r\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\r\n\r\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\r\n\r\nm_RectChildren.Add(rect);\r\n\r\n}\r\n\r\n}\r\n\r\nm_Tracker.Clear();\r\n\r\n}</pre>\r\n其中，\r\n<pre class=\"lang:c# decode:true\">if (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\r\n\r\nm_RectChildren.Add(rect);\r\n\r\n}\r\n\r\n}</pre>\r\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\r\n\r\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\r\n\r\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\r\n\r\n我录制了一个 Demo 的演示视频，欢迎大家观看：\r\n\r\n[embed]http://v.youku.com/v_show/id_XMTQ3Mjc1OTQwNA==.html?from=y1.7-1.2[/embed]',320,'http://codingcoder.com/?p=324',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (322,1,'2016-03-06 22:37:10','2016-03-06 14:37:10','<h1>ILayoutIgnorer</h1>\n\n如果一个<code>RectTransform</code>上挂载了一个实现了<code>ILayoutIgnorer</code> 接口的组件，那么这个 <code>RectTransform</code> 将会被布局系统忽略掉。\n\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\n\n```C#\n\npublic virtual void CalculateLayoutInputHorizontal()\n\n{\n\nm_RectChildren.Clear();\n\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\n\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\n\nif (rect == null) {\n\ncontinue;\n\n}\n\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\n\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}\n\nm_Tracker.Clear();\n\n}\n\n&lt;pre&gt;&lt;code&gt;&lt;br /&gt;其中，\n\n``` C#\n\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}\n\n</code></pre>\n\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\n\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\n\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\n\n我录制了一个 Demo 的演示视频，欢迎大家观看：\n\n&lt;embed src=\"http://player.youku.com/player.php/sid/XMTQ3Mjc1OTQwNA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt;','Unity UGUI ILayoutIgnorer 源码解析','','inherit','closed','closed','','320-revision-v1','','','2016-03-06 22:37:10','2016-03-06 14:37:10','# ILayoutIgnorer\r\n\r\n如果一个`RectTransform`上挂载了一个实现了`ILayoutIgnorer` 接口的组件，那么这个 `RectTransform` 将会被布局系统忽略掉。\r\n\r\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\r\n\r\n```C#\r\n\r\npublic virtual void CalculateLayoutInputHorizontal()\r\n\r\n{\r\n\r\nm_RectChildren.Clear();\r\n\r\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\r\n\r\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\r\n\r\nif (rect == null) {\r\n\r\ncontinue;\r\n\r\n}\r\n\r\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\r\n\r\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\r\n\r\nm_RectChildren.Add(rect);\r\n\r\n}\r\n\r\n}\r\n\r\nm_Tracker.Clear();\r\n\r\n}\r\n\r\n```\r\n\r\n其中，\r\n\r\n``` C#\r\n\r\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\r\n\r\nm_RectChildren.Add(rect);\r\n\r\n}\r\n\r\n}\r\n\r\n```\r\n\r\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\r\n\r\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\r\n\r\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\r\n\r\n我录制了一个 Demo 的演示视频，欢迎大家观看：\r\n\r\n&lt;embed src=\"http://player.youku.com/player.php/sid/XMTQ3Mjc1OTQwNA==/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt;',320,'http://codingcoder.com/?p=322',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (323,1,'2016-03-06 22:39:34','2016-03-06 14:39:34','<h1>ILayoutIgnorer</h1>\n\n如果一个<code>RectTransform</code>上挂载了一个实现了<code>ILayoutIgnorer</code> 接口的组件，那么这个 <code>RectTransform</code> 将会被布局系统忽略掉。\n\n在 LayoutGroup.cs 这个源码里面，有下面这段代码：\n\n<pre class=\"lang:c# decode:true\">public virtual void CalculateLayoutInputHorizontal()\n\n{\n\nm_RectChildren.Clear();\n\nfor (int i = 0; i &lt; rectTransform.childCount; i++) {\n\nRectTransform rect = rectTransform.GetChild(i) as RectTransform;\n\nif (rect == null) {\n\ncontinue;\n\n}\n\nILayoutIgnorer ignorer = rect.GetComponent(typeof(ILayoutIgnorer)) as ILayoutIgnorer;\n\nif (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}\n\nm_Tracker.Clear();\n\n}</pre>\n\n其中，\n\n<pre class=\"lang:c# decode:true\">if (rect.gameObject.activeInHierarchy &amp;&amp; !(ignorer != null &amp;&amp; ignorer.ignoreLayout)) {\n\nm_RectChildren.Add(rect);\n\n}\n\n}</pre>\n\n便是根据 ignoreLayout 来决定是否忽略该 RectTransform 组件。\n\n举个例子，如果一个 GridLayoutGroup 下面有很多个子对象，那么默认情况下这些子对象都是受到 GridLayoutGroup 的管理的。那么，如果我想让其中一个子对象不受到 GridLayoutGroup 的管理，应该怎么办呢？这个时候，我们就可以给这个子对象挂载一个 LayoutElement 组件，然后勾选 ignore Layout 选项，这样这个子对象就不受 GridLayoutGroup 管理了。\n\n注意，我从 Unity 开源的 UI 系统的源码来看，目前只有 LayoutElement 一个系统自带的组件实现了 ILayoutIgnorer 接口。当然，我们也可以自己实现这个接口。\n\n我录制了一个 Demo 的演示视频，欢迎大家观看：\n\n[embed]http://v.youku.com/v_show/id_XMTQ3Mjc1OTQwNA==.html?from=y1.7-1.2[/embed]','Unity UGUI ILayoutIgnorer 源码解析','','inherit','closed','closed','','320-autosave-v1','','','2016-03-06 22:39:34','2016-03-06 14:39:34','',320,'http://codingcoder.com/?p=323',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (325,1,'2016-03-06 22:43:55','0000-00-00 00:00:00','The readonly keyword is a modifier that you can use on fields. When a field declaration includes a readonly modifier, assignments to the fields introduced by the declaration can only occur as part of the declaration or in a constructor in the same class.\n\n在 C# 类中，如果你用 readonly 修饰符限定了一个属性，那么这个属性就只能通过两种方式赋值：\n\n<ul>\n<li>在属性定义时直接赋值；</p></li>\n<li><p>在当前这个类的构造函数里面赋值。</p></li>\n</ul>\n\n<p>如下面的例子所示：\n\nclass Age\n\n{\n\nreadonly int _year;\n\nAge(int year)\n\n{\n\n_year = year;\n\n}\n\nvoid ChangeYear()\n\n{\n\n//_year = 1967; // Compile error if uncommented.\n\n}\n\n}\n\n<hr />\n\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/acdd6hb7.aspx\">readonly (C# Reference)</a></li>\n</ul>','C# readonly 属性','','draft','open','open','','','','','2016-03-06 22:43:55','2016-03-06 14:43:55','The readonly keyword is a modifier that you can use on fields. When a field declaration includes a readonly modifier, assignments to the fields introduced by the declaration can only occur as part of the declaration or in a constructor in the same class.\r\n\r\n在 C# 类中，如果你用 readonly 修饰符限定了一个属性，那么这个属性就只能通过两种方式赋值：\r\n\r\n+ 在属性定义时直接赋值；\r\n\r\n+ 在当前这个类的构造函数里面赋值。\r\n\r\n如下面的例子所示：\r\n\r\nclass Age\r\n\r\n{\r\n\r\nreadonly int _year;\r\n\r\nAge(int year)\r\n\r\n{\r\n\r\n_year = year;\r\n\r\n}\r\n\r\nvoid ChangeYear()\r\n\r\n{\r\n\r\n//_year = 1967; // Compile error if uncommented.\r\n\r\n}\r\n\r\n}\r\n\r\n---\r\n\r\n+ [readonly (C# Reference)](https://msdn.microsoft.com/en-us/library/acdd6hb7.aspx)',0,'http://codingcoder.com/?p=325',0,'post','',0);
INSERT INTO `wp_posts` VALUES (326,1,'2016-03-06 22:41:44','2016-03-06 14:41:44','The readonly keyword is a modifier that you can use on fields. When a field declaration includes a readonly modifier, assignments to the fields introduced by the declaration can only occur as part of the declaration or in a constructor in the same class.\n\n在 C# 类中，如果你用 readonly 修饰符限定了一个属性，那么这个属性就只能通过两种方式赋值：\n\n<ul>\n<li>在属性定义时直接赋值；</p></li>\n<li><p>在当前这个类的构造函数里面赋值。</p></li>\n</ul>\n\n<p>如下面的例子所示：\n\nclass Age\n\n{\n\nreadonly int _year;\n\nAge(int year)\n\n{\n\n_year = year;\n\n}\n\nvoid ChangeYear()\n\n{\n\n//_year = 1967; // Compile error if uncommented.\n\n}\n\n}\n\n<hr />\n\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/acdd6hb7.aspx\">readonly (C# Reference)</a></li>\n</ul>','C# readonly 属性','','inherit','closed','closed','','325-revision-v1','','','2016-03-06 22:41:44','2016-03-06 14:41:44','The readonly keyword is a modifier that you can use on fields. When a field declaration includes a readonly modifier, assignments to the fields introduced by the declaration can only occur as part of the declaration or in a constructor in the same class.\r\n\r\n在 C# 类中，如果你用 readonly 修饰符限定了一个属性，那么这个属性就只能通过两种方式赋值：\r\n\r\n+ 在属性定义时直接赋值；\r\n\r\n+ 在当前这个类的构造函数里面赋值。\r\n\r\n如下面的例子所示：\r\n\r\nclass Age\r\n\r\n{\r\n\r\nreadonly int _year;\r\n\r\nAge(int year)\r\n\r\n{\r\n\r\n_year = year;\r\n\r\n}\r\n\r\nvoid ChangeYear()\r\n\r\n{\r\n\r\n//_year = 1967; // Compile error if uncommented.\r\n\r\n}\r\n\r\n}\r\n\r\n---\r\n\r\n+ [readonly (C# Reference)](https://msdn.microsoft.com/en-us/library/acdd6hb7.aspx)',325,'http://codingcoder.com/?p=326',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (327,1,'2016-03-06 22:46:46','2016-03-06 14:46:46','休息休息的发生大幅度','Unity UGUI 本地坐标系','','inherit','closed','closed','','132-revision-v1','','','2016-03-06 22:46:46','2016-03-06 14:46:46','休息休息的发生大幅度',132,'http://codingcoder.com/?p=327',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (329,1,'2016-03-07 15:38:02','2016-03-07 07:38:02','平凡的人啊，认知的事情有可能不是真实的，认知的信道可能不是真实的，甚至连认知本身都可能不是真实的。平凡的就是一只虫子。知识的边界或许真的存在。思绪切换窗外的车来车往，现实又是那么的活生生。偶尔想想这种超然于万物之上的哲学问题，会越发的觉着生活中这些烦心事，其实真的都不是事儿。\n\n人生短暂，说挂就挂，活着就是一个概率。抓住当下，Follow My Heart。Keep Looking，Never Settle !','就是一只虫子','','publish','open','open','','%e5%b0%b1%e6%98%af%e4%b8%80%e5%8f%aa%e8%99%ab%e5%ad%90','','','2016-03-07 15:38:02','2016-03-07 07:38:02','平凡的人啊，认知的事情有可能不是真实的，认知的信道可能不是真实的，甚至连认知本身都可能不是真实的。平凡的就是一只虫子。知识的边界或许真的存在。思绪切换窗外的车来车往，现实又是那么的活生生。偶尔想想这种超然于万物之上的哲学问题，会越发的觉着生活中这些烦心事，其实真的都不是事儿。\r\n\r\n人生短暂，说挂就挂，活着就是一个概率。抓住当下，Follow My Heart。Keep Looking，Never Settle !',0,'http://codingcoder.com/?p=329',0,'post','',0);
INSERT INTO `wp_posts` VALUES (330,1,'2016-03-07 15:38:02','2016-03-07 07:38:02','平凡的人啊，认知的事情有可能不是真实的，认知的信道可能不是真实的，甚至连认知本身都可能不是真实的。平凡的就是一只虫子。知识的边界或许真的存在。思绪切换窗外的车来车往，现实又是那么的活生生。偶尔想想这种超然于万物之上的哲学问题，会越发的觉着生活中这些烦心事，其实真的都不是事儿。\n\n人生短暂，说挂就挂，活着就是一个概率。抓住当下，Follow My Heart。Keep Looking，Never Settle !','就是一只虫子','','inherit','closed','closed','','329-revision-v1','','','2016-03-07 15:38:02','2016-03-07 07:38:02','平凡的人啊，认知的事情有可能不是真实的，认知的信道可能不是真实的，甚至连认知本身都可能不是真实的。平凡的就是一只虫子。知识的边界或许真的存在。思绪切换窗外的车来车往，现实又是那么的活生生。偶尔想想这种超然于万物之上的哲学问题，会越发的觉着生活中这些烦心事，其实真的都不是事儿。\r\n\r\n人生短暂，说挂就挂，活着就是一个概率。抓住当下，Follow My Heart。Keep Looking，Never Settle !',329,'http://codingcoder.com/?p=330',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (331,1,'2016-03-07 19:42:43','2016-03-07 11:42:43','在 UGUI 的 Button 控件中，我们可以使用如下的代码让 Button 被点击时调用一个响应方法。\n\n<pre class=\"h-align:1 lang:c# decode:true \" style=\"padding-left: 30px;\">protected override void Awake ()\n{\n    this.actionButton.onClick.AddListener (OnButtonClicked);\n}\n\nprivate void OnButtonClicked ()\n{\n            \n}</pre>\n\n但是，有的时候我们可能需要让这个响应方法能够接受一些参数，比如一个事件的发送者 sender。\n\n<pre class=\"h-align:1 lang:c# decode:true\" style=\"padding-left: 30px;\">private void OnButtonClicked (Object sender )\n{\n            \n}</pre>\n\n这个时候我们就发现，Button 的 onClick 只能添加如下结构的响应方法，它是不能传入参数的：\n\n<pre class=\"lang:c# decode:true \">public delegate void UnityAction();</pre>\n\n遇到这种情况时，我们可以再封装一层，如下所示：\n\n<pre class=\"lang:c# mark:4-6 decode:true\">protected override void Awake ()\n{\n    this.actionButton.onClick.AddListener (\n         delegate {\n            OnButtonClicked(this.actionButton);\n         }\n    );\n}\n\nprivate void OnButtonClicked (Object sender)\n{\n            \n}</pre>\n\n这种方式可以解决一些需求，但是因为我们用了匿名 delegate 的方式，所以如果我们想在特殊的情况下 RemoveListener 就有问题了。\n\n如果可以直接 RemoveAllListener ，那么这是最简单的方式，不需要再做多余的工作。但是如果我们想 Remove 一个特定的 Listener，上面这种匿名 delegate 的方式就不能满足需求了。\n\n所以，我们需要把这些匿名 delegate 记录下来，这样再需要 Remove 的时候才能再把它找出来，然后 Remove 掉这个具体的 Listener。可以用一个 Dictionary 来记录这个匿名 delegate, 并为其指定一个 Key，如下所示：\n\n<pre class=\"lang:c# decode:true\">btn.onClick.AddListener(\"ListenerName\", delegate{Callback(btn);});\nbtn.onClick.RemoveListener(\"ListenerName\");</pre>\n\n想要像上面那么使用 AddListenter 和 RemoveListener，我们可以给 UnityEvent 这个类添加方法扩展。 实现起来很简单，读者可以自己实现一下，我不再赘述。\n\n<hr />\n\n&nbsp;\n\n<blockquote>参考资料：\n<ul>\n    <li><a href=\"http://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/\" target=\"_blank\">Forum Unity3d</a></li>\n</ul>\n</blockquote>','UGUI Button onClick事件中如何得到 Event Sender','','publish','open','open','','ugui-button-onclick%e4%ba%8b%e4%bb%b6%e4%b8%ad%e5%a6%82%e4%bd%95%e5%be%97%e5%88%b0-event-sender','','','2016-03-07 19:42:43','2016-03-07 11:42:43','在 UGUI 的 Button 控件中，我们可以使用如下的代码让 Button 被点击时调用一个响应方法。\r\n<pre class=\"h-align:1 lang:c# decode:true crayon-selected\" style=\"padding-left: 30px;\">protected override void Awake ()\r\n{\r\n    this.actionButton.onClick.AddListener (OnButtonClicked);\r\n}\r\n\r\nprivate void OnButtonClicked ()\r\n{\r\n			\r\n}</pre>\r\n但是，有的时候我们可能需要让这个响应方法能够接受一些参数，比如一个事件的发送者 sender。\r\n<pre class=\"h-align:1 lang:c# decode:true\" style=\"padding-left: 30px;\">private void OnButtonClicked (Object sender )\r\n{\r\n			\r\n}</pre>\r\n这个时候我们就发现，Button 的 onClick 只能添加如下结构的响应方法，它是不能传入参数的：\r\n<pre class=\"lang:c# decode:true \">public delegate void UnityAction();</pre>\r\n遇到这种情况时，我们可以再封装一层，如下所示：\r\n<pre class=\"lang:c# mark:4-6 decode:true\">protected override void Awake ()\r\n{\r\n    this.actionButton.onClick.AddListener (\r\n         delegate {\r\n            OnButtonClicked(this.actionButton);\r\n         }\r\n    );\r\n}\r\n\r\nprivate void OnButtonClicked (Object sender)\r\n{\r\n			\r\n}</pre>\r\n这种方式可以解决一些需求，但是因为我们用了匿名 delegate 的方式，所以如果我们想在特殊的情况下 RemoveListener 就有问题了。\r\n\r\n如果可以直接 RemoveAllListener ，那么这是最简单的方式，不需要再做多余的工作。但是如果我们想 Remove 一个特定的 Listener，上面这种匿名 delegate 的方式就不能满足需求了。\r\n\r\n所以，我们需要把这些匿名 delegate 记录下来，这样再需要 Remove 的时候才能再把它找出来，然后 Remove 掉这个具体的 Listener。可以用一个 Dictionary 来记录这个匿名 delegate, 并为其指定一个 Key，如下所示：\r\n<pre class=\"lang:c# decode:true\">btn.onClick.AddListener(\"ListenerName\", delegate{Callback(btn);});\r\nbtn.onClick.RemoveListener(\"ListenerName\");</pre>\r\n想要像上面那么使用 AddListenter 和 RemoveListener，我们可以给 UnityEvent 这个类添加方法扩展。 实现起来很简单，读者可以自己实现一下，我不再赘述。\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n<blockquote>参考资料：\r\n<ul>\r\n	<li><a href=\"http://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/\" target=\"_blank\">Forum Unity3d</a></li>\r\n</ul>\r\n</blockquote>',0,'http://codingcoder.com/?p=331',0,'post','',0);
INSERT INTO `wp_posts` VALUES (332,1,'2016-03-07 17:33:21','2016-03-07 09:33:21','http://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/','Get event sender in event handler (UnityAction)?','','inherit','closed','closed','','331-revision-v1','','','2016-03-07 17:33:21','2016-03-07 09:33:21','http://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/',331,'http://codingcoder.com/?p=332',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (333,1,'2016-03-07 22:25:29','2016-03-07 14:25:29','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\n\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\n\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\n\n<pre class=\"lang:c# mark:6 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.hideFlags = HideFlags.NotEditable;\n}\n</pre>\n\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\n\n<pre class=\"lang:c# mark:6 decode:true \">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.gameObject.hideFlags = HideFlags.NotEditable;\n}</pre>\n\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\n\n&nbsp;','Hide Flags','','publish','open','open','','hide-flags','','','2016-03-07 22:34:12','2016-03-07 14:34:12','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\r\n\r\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\r\n\r\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\r\n<pre class=\"lang:c# mark:6 decode:true\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.hideFlags = HideFlags.NotEditable;\r\n}\r\n</pre>\r\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\r\n<pre class=\"lang:c# mark:6 decode:true crayon-selected\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.gameObject.hideFlags = HideFlags.NotEditable;\r\n}</pre>\r\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\r\n\r\n&nbsp;',0,'http://codingcoder.com/?p=333',0,'post','',0);
INSERT INTO `wp_posts` VALUES (348,1,'2016-03-07 22:25:29','2016-03-07 14:25:29','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\n\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"alignnone size-medium wp-image-346\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a> <a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignright\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\n\n你会发现右边的TabBarViewController组件是不可编辑的状态。\n\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\n\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.hideFlags = HideFlags.NotEditable;\n}\n</pre>\n\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\n\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.gameObject.hideFlags = HideFlags.NotEditable;\n}</pre>\n\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\n\n&nbsp;','Hide Flags','','inherit','closed','closed','','333-revision-v1','','','2016-03-07 22:25:29','2016-03-07 14:25:29','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\r\n\r\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"alignnone size-medium wp-image-346\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a> <a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignright\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\r\n\r\n你会发现右边的TabBarViewController组件是不可编辑的状态。\r\n\r\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\r\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.hideFlags = HideFlags.NotEditable;\r\n}\r\n</pre>\r\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\r\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.gameObject.hideFlags = HideFlags.NotEditable;\r\n}</pre>\r\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\r\n\r\n&nbsp;',333,'http://codingcoder.com/?p=348',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (334,1,'2016-03-07 17:33:45','2016-03-07 09:33:45','<span style=\"font-family: Menlo;\"> <span style=\"color: #647a83;\">  </span><span style=\"color: #849900;\">private</span><span style=\"color: #647a83;\"> </span><span style=\"color: #849900;\">static</span><span style=\"color: #647a83;\"> </span><span style=\"color: #b58800;\">void</span><span style=\"color: #647a83;\"> LockObject</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">GameObject go</span><span style=\"color: #647a83;\">)</span>\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">addUndoRedoPrefKey</span><span style=\"color: #647a83;\">))</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">            Undo</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">RegisterSceneUndo</span><span style=\"color: #647a83;\">(</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #29a198;\">Lock</span><span style=\"color: #29a198;\"> </span><span style=\"color: #29a198;\">Object</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">        go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">foreach</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component comp </span><span style=\"color: #849900;\">in</span><span style=\"color: #647a83;\"> go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetComponents</span><span style=\"color: #647a83;\">(</span><span style=\"color: #849900;\">typeof</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component</span><span style=\"color: #647a83;\">)))</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">            </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">!</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">comp </span><span style=\"color: #849900;\">is</span><span style=\"color: #647a83;\"> Transform</span><span style=\"color: #647a83;\">))</span>\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">                </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">disableSelectionPrefKey</span><span style=\"color: #647a83;\">))</span>\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">HideInHierarchy</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">        EditorUtility</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">SetDirty</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">go</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">}</span>\n</span>','Hide Flags','','inherit','closed','closed','','333-revision-v1','','','2016-03-07 17:33:45','2016-03-07 09:33:45','<span style=\"font-family: Menlo;\"> <span style=\"color: #647a83;\">  </span><span style=\"color: #849900;\">private</span><span style=\"color: #647a83;\"> </span><span style=\"color: #849900;\">static</span><span style=\"color: #647a83;\"> </span><span style=\"color: #b58800;\">void</span><span style=\"color: #647a83;\"> LockObject</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">GameObject go</span><span style=\"color: #647a83;\">)</span>\r\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">addUndoRedoPrefKey</span><span style=\"color: #647a83;\">))</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">            Undo</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">RegisterSceneUndo</span><span style=\"color: #647a83;\">(</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #29a198;\">Lock</span><span style=\"color: #29a198;\"> </span><span style=\"color: #29a198;\">Object</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">        go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">foreach</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component comp </span><span style=\"color: #849900;\">in</span><span style=\"color: #647a83;\"> go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetComponents</span><span style=\"color: #647a83;\">(</span><span style=\"color: #849900;\">typeof</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component</span><span style=\"color: #647a83;\">)))</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">            </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">!</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">comp </span><span style=\"color: #849900;\">is</span><span style=\"color: #647a83;\"> Transform</span><span style=\"color: #647a83;\">))</span>\r\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">                </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">disableSelectionPrefKey</span><span style=\"color: #647a83;\">))</span>\r\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">HideInHierarchy</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">        EditorUtility</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">SetDirty</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">go</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">}</span>\r\n</span>',333,'http://codingcoder.com/?p=334',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (335,1,'2016-03-07 17:52:04','2016-03-07 09:52:04','http://docs.unity3d.com/Manual/InspectorOptions.html\n\n&nbsp;\n\n<span style=\"font-family: Menlo;\"><span style=\"color: #647a83;\">  </span><span style=\"color: #849900;\">private</span><span style=\"color: #647a83;\"> </span><span style=\"color: #849900;\">static</span><span style=\"color: #647a83;\"> </span><span style=\"color: #b58800;\">void</span><span style=\"color: #647a83;\"> LockObject</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">GameObject go</span><span style=\"color: #647a83;\">)</span>\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">addUndoRedoPrefKey</span><span style=\"color: #647a83;\">))</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">            Undo</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">RegisterSceneUndo</span><span style=\"color: #647a83;\">(</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #29a198;\">Lock</span><span style=\"color: #29a198;\"> </span><span style=\"color: #29a198;\">Object</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">        go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">foreach</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component comp </span><span style=\"color: #849900;\">in</span><span style=\"color: #647a83;\"> go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetComponents</span><span style=\"color: #647a83;\">(</span><span style=\"color: #849900;\">typeof</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component</span><span style=\"color: #647a83;\">)))</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">            </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">!</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">comp </span><span style=\"color: #849900;\">is</span><span style=\"color: #647a83;\"> Transform</span><span style=\"color: #647a83;\">))</span>\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">                </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">disableSelectionPrefKey</span><span style=\"color: #647a83;\">))</span>\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">{</span>\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">HideInHierarchy</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\n<span style=\"color: #647a83;\">        EditorUtility</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">SetDirty</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">go</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">}</span>\n</span>','Hide Flags','','inherit','closed','closed','','333-revision-v1','','','2016-03-07 17:52:04','2016-03-07 09:52:04','http://docs.unity3d.com/Manual/InspectorOptions.html\r\n\r\n&nbsp;\r\n\r\n<span style=\"font-family: Menlo;\"><span style=\"color: #647a83;\">  </span><span style=\"color: #849900;\">private</span><span style=\"color: #647a83;\"> </span><span style=\"color: #849900;\">static</span><span style=\"color: #647a83;\"> </span><span style=\"color: #b58800;\">void</span><span style=\"color: #647a83;\"> LockObject</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">GameObject go</span><span style=\"color: #647a83;\">)</span>\r\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">addUndoRedoPrefKey</span><span style=\"color: #647a83;\">))</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">            Undo</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">RegisterSceneUndo</span><span style=\"color: #647a83;\">(</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #29a198;\">Lock</span><span style=\"color: #29a198;\"> </span><span style=\"color: #29a198;\">Object</span><span style=\"color: #29a198;\">\"</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">        go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #849900;\">foreach</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component comp </span><span style=\"color: #849900;\">in</span><span style=\"color: #647a83;\"> go</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetComponents</span><span style=\"color: #647a83;\">(</span><span style=\"color: #849900;\">typeof</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">Component</span><span style=\"color: #647a83;\">)))</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">            </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">!</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">comp </span><span style=\"color: #849900;\">is</span><span style=\"color: #647a83;\"> Transform</span><span style=\"color: #647a83;\">))</span>\r\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">                </span><span style=\"color: #849900;\">if</span><span style=\"color: #647a83;\"> </span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">EditorPrefs</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">GetBool</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">disableSelectionPrefKey</span><span style=\"color: #647a83;\">))</span>\r\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">{</span>\r\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">NotEditable</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">                    comp</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">hideFlags |</span><span style=\"color: #647a83;\">=</span><span style=\"color: #647a83;\"> HideFlags</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">HideInHierarchy</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">                </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">            </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">        </span><span style=\"color: #647a83;\">}</span>\r\n<span style=\"color: #647a83;\">        EditorUtility</span><span style=\"color: #647a83;\">.</span><span style=\"color: #647a83;\">SetDirty</span><span style=\"color: #647a83;\">(</span><span style=\"color: #647a83;\">go</span><span style=\"color: #647a83;\">)</span><span style=\"color: #647a83;\">;</span>\r\n<span style=\"color: #647a83;\">    </span><span style=\"color: #647a83;\">}</span>\r\n</span>',333,'http://codingcoder.com/?p=335',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (336,1,'2016-03-07 22:01:15','2016-03-07 14:01:15','今天遇到一个问题，我在一个 TestA.cs 文件里面声明了两个组件，他们都继承自 MonoBehaviour ，分别为 TestA 和 TestB。我发现当在 Inspector 面板中添加组件时，我只能添加到这个和 TestA.cs 这个文件名相同的组件 TestA，而 TestB 组件是无法添加到 GameObject 上面的。\n\n经过 Google 后，最终找到了原因。<strong>在 Unity 编辑器环境下</strong>，所有的继承与 UnityEngine.Object 的需要实例化的子类在 Unity 中都是作为一种 Asset 来管理的，.cs脚本文件也是一种 Asset。这里要注意，如果你的子类只是作为一个抽象基类使用，那么这个抽象基类是不需要进行实例化的，需要实例化的是它的具体子类。\n\n只要一个类需要进行实例化，那么就需要使用 Unity 中的序列化和反序列化系统。而这个序列化系统是要把 .cs 脚本文件实例化为一个 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a> 实例来对待，而 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a>  的基类是一个 <a href=\"http://docs.unity3d.com/ScriptReference/TextAsset.html\" target=\"_blank\">TextAsset</a>，这也印证了我们上面提到的脚本文件也是一种 Asset 的观点。\n\n而 MonoScript 在处理这个脚本资源时，就是按照文件名来找对应的类名的，所以只能找到和文件名相同的组件。\n\n需要注意的是，上面的讨论都是基于直接在 Unity Editor 中通过 Inspector 面板添加组件的情况。虽然在 Inspector 面板中不能添加和脚本文件名不同的组件，但是我们使用如下代码是可以直接在运行时添加和文件名不同的组件的。\n\n<pre class=\"lang:c# decode:true \">this.gameObject.AddComponent &lt;Test&gt; ();\n</pre>\n\n好了，原因我们找到了，为了不必要的麻烦，我还是建议把每个代码文件只放一个和文件名同名的组件。\n\n&nbsp;\n\n<hr />\n\n&nbsp;\n\n<blockquote>参考资料：\n<ul>\n    <li><a href=\"http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html\" target=\"_blank\">Answer Unity3D</a></li>\n</ul>\n</blockquote>','为什么 Unity 中同一个.cs 源文件里面不能声明多个组件','','publish','open','open','','%e4%b8%ba%e4%bb%80%e4%b9%88-unity-%e4%b8%ad%e5%90%8c%e4%b8%80%e4%b8%aa-cs-%e6%ba%90%e6%96%87%e4%bb%b6%e9%87%8c%e9%9d%a2%e4%b8%8d%e8%83%bd%e5%a3%b0%e6%98%8e%e5%a4%9a%e4%b8%aa%e7%bb%84%e4%bb%b6','','','2016-03-07 22:01:38','2016-03-07 14:01:38','今天遇到一个问题，我在一个 TestA.cs 文件里面声明了两个组件，他们都继承自 MonoBehaviour ，分别为 TestA 和 TestB。我发现当在 Inspector 面板中添加组件时，我只能添加到这个和 TestA.cs 这个文件名相同的组件 TestA，而 TestB 组件是无法添加到 GameObject 上面的。\r\n\r\n经过 Google 后，最终找到了原因。<strong>在 Unity 编辑器环境下</strong>，所有的继承与 UnityEngine.Object 的需要实例化的子类在 Unity 中都是作为一种 Asset 来管理的，.cs脚本文件也是一种 Asset。这里要注意，如果你的子类只是作为一个抽象基类使用，那么这个抽象基类是不需要进行实例化的，需要实例化的是它的具体子类。\r\n\r\n只要一个类需要进行实例化，那么就需要使用 Unity 中的序列化和反序列化系统。而这个序列化系统是要把 .cs 脚本文件实例化为一个 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a> 实例来对待，而 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a>  的基类是一个 <a href=\"http://docs.unity3d.com/ScriptReference/TextAsset.html\" target=\"_blank\">TextAsset</a>，这也印证了我们上面提到的脚本文件也是一种 Asset 的观点。\r\n\r\n而 MonoScript 在处理这个脚本资源时，就是按照文件名来找对应的类名的，所以只能找到和文件名相同的组件。\r\n\r\n需要注意的是，上面的讨论都是基于直接在 Unity Editor 中通过 Inspector 面板添加组件的情况。虽然在 Inspector 面板中不能添加和脚本文件名不同的组件，但是我们使用如下代码是可以直接在运行时添加和文件名不同的组件的。\r\n<pre class=\"lang:c# decode:true \">this.gameObject.AddComponent &lt;Test&gt; ();\r\n</pre>\r\n好了，原因我们找到了，为了不必要的麻烦，我还是建议把每个代码文件只放一个和文件名同名的组件。\r\n\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n<blockquote>参考资料：\r\n<ul>\r\n	<li><a href=\"http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html\" target=\"_blank\">Answer Unity3D</a></li>\r\n</ul>\r\n</blockquote>',0,'http://codingcoder.com/?p=336',0,'post','',0);
INSERT INTO `wp_posts` VALUES (337,1,'2016-03-07 17:52:33','2016-03-07 09:52:33','http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html','Does every c# class need to have its own script with the class&#39; name?','','inherit','closed','closed','','336-revision-v1','','','2016-03-07 17:52:33','2016-03-07 09:52:33','http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html',336,'http://codingcoder.com/?p=337',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (338,1,'2016-03-07 17:54:26','0000-00-00 00:00:00','http://stackoverflow.com/questions/3769159/overload-indexer-to-have-foreachable-class','override foreach in transform','','draft','open','open','','','','','2016-03-07 17:54:26','2016-03-07 09:54:26','http://stackoverflow.com/questions/3769159/overload-indexer-to-have-foreachable-class',0,'http://codingcoder.com/?p=338',0,'post','',0);
INSERT INTO `wp_posts` VALUES (339,1,'2016-03-07 17:54:12','2016-03-07 09:54:12','','override foreach in transform','','inherit','closed','closed','','338-revision-v1','','','2016-03-07 17:54:12','2016-03-07 09:54:12','',338,'http://codingcoder.com/?p=339',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (340,1,'2016-03-07 17:54:26','2016-03-07 09:54:26','http://stackoverflow.com/questions/3769159/overload-indexer-to-have-foreachable-class','override foreach in transform','','inherit','closed','closed','','338-revision-v1','','','2016-03-07 17:54:26','2016-03-07 09:54:26','http://stackoverflow.com/questions/3769159/overload-indexer-to-have-foreachable-class',338,'http://codingcoder.com/?p=340',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (341,1,'2016-03-07 19:03:12','2016-03-07 11:03:12','在 UGUI 的 Button 控件中，我们可以使用\n\n<pre class=\"lang:c# decode:true  \">      protected override void Awake ()\n        {\n            base.Awake ();\n\n            this.actionButton.onClick.AddListener (OnButtonClicked);\n        }\n\n        private void OnButtonClicked ()\n        {\n            \n        }</pre>\n\n&nbsp;\n\nhttp://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/','UGUI Button onClick事件中如何得到 Event Sender','','inherit','closed','closed','','331-revision-v1','','','2016-03-07 19:03:12','2016-03-07 11:03:12','在 UGUI 的 Button 控件中，我们可以使用\r\n<pre class=\"lang:c# decode:true  crayon-selected\">		protected override void Awake ()\r\n		{\r\n			base.Awake ();\r\n\r\n			this.actionButton.onClick.AddListener (OnButtonClicked);\r\n		}\r\n\r\n		private void OnButtonClicked ()\r\n		{\r\n			\r\n		}</pre>\r\n&nbsp;\r\n\r\nhttp://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/',331,'http://codingcoder.com/?p=341',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (342,1,'2016-03-07 19:42:43','2016-03-07 11:42:43','在 UGUI 的 Button 控件中，我们可以使用如下的代码让 Button 被点击时调用一个响应方法。\n\n<pre class=\"h-align:1 lang:c# decode:true \" style=\"padding-left: 30px;\">protected override void Awake ()\n{\n    this.actionButton.onClick.AddListener (OnButtonClicked);\n}\n\nprivate void OnButtonClicked ()\n{\n            \n}</pre>\n\n但是，有的时候我们可能需要让这个响应方法能够接受一些参数，比如一个事件的发送者 sender。\n\n<pre class=\"h-align:1 lang:c# decode:true\" style=\"padding-left: 30px;\">private void OnButtonClicked (Object sender )\n{\n            \n}</pre>\n\n这个时候我们就发现，Button 的 onClick 只能添加如下结构的响应方法，它是不能传入参数的：\n\n<pre class=\"lang:c# decode:true \">public delegate void UnityAction();</pre>\n\n遇到这种情况时，我们可以再封装一层，如下所示：\n\n<pre class=\"lang:c# mark:4-6 decode:true\">protected override void Awake ()\n{\n    this.actionButton.onClick.AddListener (\n         delegate {\n            OnButtonClicked(this.actionButton);\n         }\n    );\n}\n\nprivate void OnButtonClicked (Object sender)\n{\n            \n}</pre>\n\n这种方式可以解决一些需求，但是因为我们用了匿名 delegate 的方式，所以如果我们想在特殊的情况下 RemoveListener 就有问题了。\n\n如果可以直接 RemoveAllListener ，那么这是最简单的方式，不需要再做多余的工作。但是如果我们想 Remove 一个特定的 Listener，上面这种匿名 delegate 的方式就不能满足需求了。\n\n所以，我们需要把这些匿名 delegate 记录下来，这样再需要 Remove 的时候才能再把它找出来，然后 Remove 掉这个具体的 Listener。可以用一个 Dictionary 来记录这个匿名 delegate, 并为其指定一个 Key，如下所示：\n\n<pre class=\"lang:c# decode:true\">btn.onClick.AddListener(\"ListenerName\", delegate{Callback(btn);});\nbtn.onClick.RemoveListener(\"ListenerName\");</pre>\n\n想要像上面那么使用 AddListenter 和 RemoveListener，我们可以给 UnityEvent 这个类添加方法扩展。 实现起来很简单，读者可以自己实现一下，我不再赘述。\n\n<hr />\n\n&nbsp;\n\n<blockquote>参考资料：\n<ul>\n    <li><a href=\"http://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/\" target=\"_blank\">Forum Unity3d</a></li>\n</ul>\n</blockquote>','UGUI Button onClick事件中如何得到 Event Sender','','inherit','closed','closed','','331-revision-v1','','','2016-03-07 19:42:43','2016-03-07 11:42:43','在 UGUI 的 Button 控件中，我们可以使用如下的代码让 Button 被点击时调用一个响应方法。\r\n<pre class=\"h-align:1 lang:c# decode:true crayon-selected\" style=\"padding-left: 30px;\">protected override void Awake ()\r\n{\r\n    this.actionButton.onClick.AddListener (OnButtonClicked);\r\n}\r\n\r\nprivate void OnButtonClicked ()\r\n{\r\n			\r\n}</pre>\r\n但是，有的时候我们可能需要让这个响应方法能够接受一些参数，比如一个事件的发送者 sender。\r\n<pre class=\"h-align:1 lang:c# decode:true\" style=\"padding-left: 30px;\">private void OnButtonClicked (Object sender )\r\n{\r\n			\r\n}</pre>\r\n这个时候我们就发现，Button 的 onClick 只能添加如下结构的响应方法，它是不能传入参数的：\r\n<pre class=\"lang:c# decode:true \">public delegate void UnityAction();</pre>\r\n遇到这种情况时，我们可以再封装一层，如下所示：\r\n<pre class=\"lang:c# mark:4-6 decode:true\">protected override void Awake ()\r\n{\r\n    this.actionButton.onClick.AddListener (\r\n         delegate {\r\n            OnButtonClicked(this.actionButton);\r\n         }\r\n    );\r\n}\r\n\r\nprivate void OnButtonClicked (Object sender)\r\n{\r\n			\r\n}</pre>\r\n这种方式可以解决一些需求，但是因为我们用了匿名 delegate 的方式，所以如果我们想在特殊的情况下 RemoveListener 就有问题了。\r\n\r\n如果可以直接 RemoveAllListener ，那么这是最简单的方式，不需要再做多余的工作。但是如果我们想 Remove 一个特定的 Listener，上面这种匿名 delegate 的方式就不能满足需求了。\r\n\r\n所以，我们需要把这些匿名 delegate 记录下来，这样再需要 Remove 的时候才能再把它找出来，然后 Remove 掉这个具体的 Listener。可以用一个 Dictionary 来记录这个匿名 delegate, 并为其指定一个 Key，如下所示：\r\n<pre class=\"lang:c# decode:true\">btn.onClick.AddListener(\"ListenerName\", delegate{Callback(btn);});\r\nbtn.onClick.RemoveListener(\"ListenerName\");</pre>\r\n想要像上面那么使用 AddListenter 和 RemoveListener，我们可以给 UnityEvent 这个类添加方法扩展。 实现起来很简单，读者可以自己实现一下，我不再赘述。\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n<blockquote>参考资料：\r\n<ul>\r\n	<li><a href=\"http://forum.unity3d.com/threads/get-event-sender-in-event-handler-unityaction.265118/\" target=\"_blank\">Forum Unity3d</a></li>\r\n</ul>\r\n</blockquote>',331,'http://codingcoder.com/?p=342',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (343,1,'2016-03-07 21:35:09','2016-03-07 13:35:09','今天遇到一个问题，我在一个 TestA.cs 文件里面声明了两个组件，他们都继承自 MonoBehaviour ，分别为 TestA 和 TestB。我发现当在 Inspector 面板中添加组件时，我只能添加到这个和 TestA.cs 这个文件名相同的组件 TestA，而 TestB 组件是无法添加到 GameObject 上面的。\n\n经过 Google 后，最终找到了原因。所有的继承与 UnityEngine.Object 的需要实例化的子类在 Unity 中都是作为一种 asset 来管理的，这里要注意，如果你的子类只是作为一个抽象基类使用，那么这个抽象基类是不需要进行实例化的，需要实例化的是它的具体子类。\n\n只要一个类需要进行实例化，那么就需要使用 Unity 中的序列化和反序列化系统。而这个序列化系统是要把\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n<hr />\n\n&nbsp;\n\n&nbsp;\n\n<blockquote>参考资料：\n<ul>\n    <li><a href=\"http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html\" target=\"_blank\">Answer Unity3D</a></li>\n</ul>\n</blockquote>','为什么 Unity 中同一个.cs 源文件里面不能声明多个组件','','inherit','closed','closed','','336-revision-v1','','','2016-03-07 21:35:09','2016-03-07 13:35:09','今天遇到一个问题，我在一个 TestA.cs 文件里面声明了两个组件，他们都继承自 MonoBehaviour ，分别为 TestA 和 TestB。我发现当在 Inspector 面板中添加组件时，我只能添加到这个和 TestA.cs 这个文件名相同的组件 TestA，而 TestB 组件是无法添加到 GameObject 上面的。\r\n\r\n经过 Google 后，最终找到了原因。所有的继承与 UnityEngine.Object 的需要实例化的子类在 Unity 中都是作为一种 asset 来管理的，这里要注意，如果你的子类只是作为一个抽象基类使用，那么这个抽象基类是不需要进行实例化的，需要实例化的是它的具体子类。\r\n\r\n只要一个类需要进行实例化，那么就需要使用 Unity 中的序列化和反序列化系统。而这个序列化系统是要把\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<blockquote>参考资料：\r\n<ul>\r\n	<li><a href=\"http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html\" target=\"_blank\">Answer Unity3D</a></li>\r\n</ul>\r\n</blockquote>',336,'http://codingcoder.com/?p=343',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (344,1,'2016-03-07 22:01:15','2016-03-07 14:01:15','今天遇到一个问题，我在一个 TestA.cs 文件里面声明了两个组件，他们都继承自 MonoBehaviour ，分别为 TestA 和 TestB。我发现当在 Inspector 面板中添加组件时，我只能添加到这个和 TestA.cs 这个文件名相同的组件 TestA，而 TestB 组件是无法添加到 GameObject 上面的。\n\n经过 Google 后，最终找到了原因。<strong>在 Unity 编辑器环境下</strong>，所有的继承与 UnityEngine.Object 的需要实例化的子类在 Unity 中都是作为一种 Asset 来管理的，.cs脚本文件也是一种 Asset。这里要注意，如果你的子类只是作为一个抽象基类使用，那么这个抽象基类是不需要进行实例化的，需要实例化的是它的具体子类。\n\n只要一个类需要进行实例化，那么就需要使用 Unity 中的序列化和反序列化系统。而这个序列化系统是要把 .cs 脚本文件实例化为一个 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a> 实例来对待，而 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a>  的基类是一个 <a href=\"http://docs.unity3d.com/ScriptReference/TextAsset.html\" target=\"_blank\">TextAsset</a>，这也印证了我们上面提到的脚本文件也是一种 Asset 的观点。\n\n而 MonoScript 在处理这个脚本资源时，就是按照文件名来找对应的类名的，所以只能找到和文件名相同的组件。\n\n需要注意的是，上面的讨论都是基于直接在 Unity Editor 中通过 Inspector 面板添加组件的情况。虽然在 Inspector 面板中不能添加和脚本文件名不同的组件，但是我们使用如下代码是可以直接在运行时添加和文件名不同的组件的。\n\n<pre class=\"lang:c# decode:true \">this.gameObject.AddComponent &lt;Test&gt; ();\n</pre>\n\n好了，原因我们找到了，为了不必要的麻烦，我还是建议把每个代码文件只放一个和文件名同名的组件。\n\n&nbsp;\n\n<hr />\n\n&nbsp;\n\n<blockquote>参考资料：\n<ul>\n    <li><a href=\"http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html\" target=\"_blank\">Answer Unity3D</a></li>\n</ul>\n</blockquote>','为什么 Unity 中同一个.cs 源文件里面不能声明多个组件','','inherit','closed','closed','','336-revision-v1','','','2016-03-07 22:01:15','2016-03-07 14:01:15','今天遇到一个问题，我在一个 TestA.cs 文件里面声明了两个组件，他们都继承自 MonoBehaviour ，分别为 TestA 和 TestB。我发现当在 Inspector 面板中添加组件时，我只能添加到这个和 TestA.cs 这个文件名相同的组件 TestA，而 TestB 组件是无法添加到 GameObject 上面的。\r\n\r\n经过 Google 后，最终找到了原因。<strong>在 Unity 编辑器环境下</strong>，所有的继承与 UnityEngine.Object 的需要实例化的子类在 Unity 中都是作为一种 Asset 来管理的，.cs脚本文件也是一种 Asset。这里要注意，如果你的子类只是作为一个抽象基类使用，那么这个抽象基类是不需要进行实例化的，需要实例化的是它的具体子类。\r\n\r\n只要一个类需要进行实例化，那么就需要使用 Unity 中的序列化和反序列化系统。而这个序列化系统是要把 .cs 脚本文件实例化为一个 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a> 实例来对待，而 <a href=\"http://docs.unity3d.com/ScriptReference/MonoScript.html\" target=\"_blank\">MonoScript</a>  的基类是一个 <a href=\"http://docs.unity3d.com/ScriptReference/TextAsset.html\" target=\"_blank\">TextAsset</a>，这也印证了我们上面提到的脚本文件也是一种 Asset 的观点。\r\n\r\n而 MonoScript 在处理这个脚本资源时，就是按照文件名来找对应的类名的，所以只能找到和文件名相同的组件。\r\n\r\n需要注意的是，上面的讨论都是基于直接在 Unity Editor 中通过 Inspector 面板添加组件的情况。虽然在 Inspector 面板中不能添加和脚本文件名不同的组件，但是我们使用如下代码是可以直接在运行时添加和文件名不同的组件的。\r\n<pre class=\"lang:c# decode:true \">this.gameObject.AddComponent &lt;Test&gt; ();\r\n</pre>\r\n好了，原因我们找到了，为了不必要的麻烦，我还是建议把每个代码文件只放一个和文件名同名的组件。\r\n\r\n&nbsp;\r\n\r\n<hr />\r\n\r\n&nbsp;\r\n<blockquote>参考资料：\r\n<ul>\r\n	<li><a href=\"http://answers.unity3d.com/questions/497914/does-every-c-class-need-to-have-its-own-script-wit.html\" target=\"_blank\">Answer Unity3D</a></li>\r\n</ul>\r\n</blockquote>',336,'http://codingcoder.com/?p=344',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (345,1,'2016-03-07 22:07:38','2016-03-07 14:07:38','','Screen Shot 2016-03-07 at 10.07.05 PM','','inherit','open','closed','','screen-shot-2016-03-07-at-10-07-05-pm','','','2016-03-07 22:07:38','2016-03-07 14:07:38','',333,'http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (346,1,'2016-03-07 22:11:48','2016-03-07 14:11:48','','Screen Shot 2016-03-07 at 10.10.35 PM','','inherit','open','closed','','screen-shot-2016-03-07-at-10-10-35-pm','','','2016-03-07 22:11:48','2016-03-07 14:11:48','',333,'http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (347,1,'2016-03-07 22:11:50','2016-03-07 14:11:50','','Screen Shot 2016-03-07 at 10.11.26 PM','','inherit','open','closed','','screen-shot-2016-03-07-at-10-11-26-pm','','','2016-03-07 22:11:50','2016-03-07 14:11:50','',333,'http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (349,1,'2016-03-07 22:32:53','2016-03-07 14:32:53','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\n\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\n\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\n\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.hideFlags = HideFlags.NotEditable;\n}\n</pre>\n\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\n\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.gameObject.hideFlags = HideFlags.NotEditable;\n}</pre>\n\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\n\n&nbsp;','Hide Flags','','inherit','closed','closed','','333-autosave-v1','','','2016-03-07 22:32:53','2016-03-07 14:32:53','',333,'http://codingcoder.com/?p=349',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (350,1,'2016-03-07 22:33:09','2016-03-07 14:33:09','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\n\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\n\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\n\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.hideFlags = HideFlags.NotEditable;\n}\n</pre>\n\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\n\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.gameObject.hideFlags = HideFlags.NotEditable;\n}</pre>\n\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\n\n&nbsp;','Hide Flags','','inherit','closed','closed','','333-revision-v1','','','2016-03-07 22:33:09','2016-03-07 14:33:09','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\r\n\r\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\r\n\r\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\r\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.hideFlags = HideFlags.NotEditable;\r\n}\r\n</pre>\r\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\r\n<pre class=\"lang:c# mark:7 decode:true\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.gameObject.hideFlags = HideFlags.NotEditable;\r\n}</pre>\r\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\r\n\r\n&nbsp;',333,'http://codingcoder.com/?p=350',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (351,1,'2016-03-07 22:34:12','2016-03-07 14:34:12','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\n\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\n\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\n\n<pre class=\"lang:c# mark:6 decode:true\">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.hideFlags = HideFlags.NotEditable;\n}\n</pre>\n\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\n\n<pre class=\"lang:c# mark:6 decode:true \">protected override void Awake ()\n{\n    base.Awake ();\n\n    this.tabBar.Init (this);\n    this.gameObject.hideFlags = HideFlags.NotEditable;\n}</pre>\n\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\n\n&nbsp;','Hide Flags','','inherit','closed','closed','','333-revision-v1','','','2016-03-07 22:34:12','2016-03-07 14:34:12','在 Unity 中，有时候我们封装了一个通用的控件，比如如下结构中：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM.png\" rel=\"attachment wp-att-345\"><img class=\"alignnone size-medium wp-image-345\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.07.05-PM-300x133.png\" alt=\"Screen Shot 2016-03-07 at 10.07.05 PM\" width=\"300\" height=\"133\" /></a>\r\n\r\n我们想让 TabBarViewController 这个 GameObject 上挂载的 TabBarViewController 组件不能被其他人编辑，也就是说要让它处于不可编辑的状态。这种情况怎么处理呢？我们先来看看两种状态的差别吧。\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM.png\" rel=\"attachment wp-att-346\"><img class=\"size-medium wp-image-346 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.10.35-PM-260x300.png\" alt=\"Screen Shot 2016-03-07 at 10.10.35 PM\" width=\"260\" height=\"300\" /></a>\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM.png\" rel=\"attachment wp-att-347\"><img class=\"size-medium wp-image-347 alignleft\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-07-at-10.11.26-PM-254x300.png\" alt=\"Screen Shot 2016-03-07 at 10.11.26 PM\" width=\"254\" height=\"300\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n你会发现第二幅图的TabBarViewController组件是不可编辑的状态。\r\n\r\n其实我们通过设置 <a href=\"http://docs.unity3d.com/ScriptReference/Object-hideFlags.html\" target=\"_blank\">HideFlags</a> 字段就可以达到这个目的。\r\n<pre class=\"lang:c# mark:6 decode:true\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.hideFlags = HideFlags.NotEditable;\r\n}\r\n</pre>\r\n如果你想让整个 GameObject 都不可编辑，直接换成 this.gameObject.hideFlags 即可：\r\n<pre class=\"lang:c# mark:6 decode:true crayon-selected\">protected override void Awake ()\r\n{\r\n	base.Awake ();\r\n\r\n	this.tabBar.Init (this);\r\n	this.gameObject.hideFlags = HideFlags.NotEditable;\r\n}</pre>\r\n你还可以设置是否要在编辑器视图结构中显示等等好几个选项，具体信息请参看 <a href=\"http://docs.unity3d.com/ScriptReference/HideFlags.html\" target=\"_blank\">HideFlags 详细介绍</a> 。通过合理使用 HideFlags 我们可以做一些有用的 Unity Editor 扩展，比如说类似于 <a href=\"https://www.assetstore.unity3d.com/en/#!/content/28577\" target=\"_blank\">QHierarchy</a> 这样的插件。\r\n\r\n&nbsp;',333,'http://codingcoder.com/?p=351',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (352,1,'2016-03-08 11:31:48','2016-03-08 03:31:48','<blockquote>\n<ul>\n    <li>花落花又开 风儿吹过吹黄了树叶 吹老了好少年</li>\n    <li> 小楼昨夜又东风，故国不堪回首月明中。</li>\n    <li>雕栏玉砌应犹在，只是朱颜改。</li>\n    <li>相见不如怀念</li>\n</ul>\n</blockquote>','只那一句词，偷走你的心','','inherit','closed','closed','','301-autosave-v1','','','2016-03-08 11:31:48','2016-03-08 03:31:48','',301,'http://codingcoder.com/?p=352',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (353,1,'2016-03-08 11:31:52','2016-03-08 03:31:52','<blockquote>\n<ul>\n    <li>花落花又开 风儿吹过吹黄了树叶 吹老了好少年</li>\n    <li> 小楼昨夜又东风，故国不堪回首月明中。</li>\n    <li>雕栏玉砌应犹在，只是朱颜改。</li>\n    <li>相见不如怀念</li>\n</ul>\n</blockquote>','只那一句词，偷走你的心','','inherit','closed','closed','','301-revision-v1','','','2016-03-08 11:31:52','2016-03-08 03:31:52','<blockquote>\r\n<ul>\r\n	<li>花落花又开 风儿吹过吹黄了树叶 吹老了好少年</li>\r\n	<li> 小楼昨夜又东风，故国不堪回首月明中。</li>\r\n	<li>雕栏玉砌应犹在，只是朱颜改。</li>\r\n	<li>相见不如怀念</li>\r\n</ul>\r\n</blockquote>',301,'http://codingcoder.com/?p=353',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (393,1,'2016-03-15 20:07:28','2016-03-15 12:07:28','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\n\n然后，你会得到下面的结果页面：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\n\n这样我们就可以知道选中对象的依赖关系了。\n\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\n\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\n\n<ol>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\n</ol>\n\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\n\n<pre class=\"lang:c# mark:21,24 decode:true \">#if UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing UnityEditor;\n\nnamespace PT.Find\n{\n    [ExecuteInEditMode]\n    public static class Find\n    {\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\n        public static void SelectSceneUsesOfAsset()\n        {\n            Object selectedObject = Selection.activeObject;\n            if (selectedObject == null)\n            {\n                return;\n            }\n            Object[] roots = new Object[]{ selectedObject };\n\n            var objs = EditorUtility.CollectDependencies(roots);\n\n            string path = AssetDatabase.GetAssetPath(selectedObject);\n            var objs2 = AssetDatabase.GetDependencies(path);\n\n            foreach (var obj in objs)\n            {\n                Debug.Log(obj.GetType().Name); \n            }\n\n        }\n        \n    }\n}\n#endif</pre>\n\n不得不说，Unity Editor 提供的默认的依赖查找的功能好弱，包括反向依赖关系，引用关系丢失等功能。或许我们可以利用这些接口自己做一个好用点的依赖关系查找插件。\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何在 Unity 中获取某个对象的依赖关系','','publish','open','open','','%e5%a6%82%e4%bd%95%e5%9c%a8-unity-%e4%b8%ad%e8%8e%b7%e5%8f%96%e6%9f%90%e4%b8%aa%e5%af%b9%e8%b1%a1%e7%9a%84%e4%be%9d%e8%b5%96%e5%85%b3%e7%b3%bb','','','2016-03-15 20:07:28','2016-03-15 12:07:28','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\r\n\r\n然后，你会得到下面的结果页面：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\r\n\r\n这样我们就可以知道选中对象的依赖关系了。\r\n\r\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\r\n\r\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\r\n<ol>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\r\n</ol>\r\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\r\n<pre class=\"lang:c# mark:21,24 decode:true crayon-selected\">#if UNITY_EDITOR\r\nusing UnityEngine;\r\nusing System.Collections;\r\nusing UnityEditor;\r\n\r\nnamespace PT.Find\r\n{\r\n    [ExecuteInEditMode]\r\n    public static class Find\r\n    {\r\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\r\n        public static void SelectSceneUsesOfAsset()\r\n        {\r\n            Object selectedObject = Selection.activeObject;\r\n            if (selectedObject == null)\r\n            {\r\n                return;\r\n            }\r\n            Object[] roots = new Object[]{ selectedObject };\r\n\r\n            var objs = EditorUtility.CollectDependencies(roots);\r\n\r\n            string path = AssetDatabase.GetAssetPath(selectedObject);\r\n            var objs2 = AssetDatabase.GetDependencies(path);\r\n\r\n            foreach (var obj in objs)\r\n            {\r\n                Debug.Log(obj.GetType().Name); \r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n#endif</pre>\r\n不得不说，Unity Editor 提供的默认的依赖查找的功能好弱，包括反向依赖关系，引用关系丢失等功能。或许我们可以利用这些接口自己做一个好用点的依赖关系查找插件。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',0,'http://codingcoder.com/?p=393',0,'post','',0);
INSERT INTO `wp_posts` VALUES (357,1,'2016-03-08 16:40:28','2016-03-08 08:40:28','http://blog.csdn.net/akof1314/article/details/49077983','Unity Text 插入超链接','','inherit','closed','closed','','356-revision-v1','','','2016-03-08 16:40:28','2016-03-08 08:40:28','http://blog.csdn.net/akof1314/article/details/49077983',356,'http://codingcoder.com/?p=357',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (358,1,'2016-03-08 18:59:34','2016-03-08 10:59:34','http://blog.csdn.net/akof1314/article/details/49077983\n\nText 源码解析\n\n&nbsp;','Unity Text 插入超链接','','inherit','closed','closed','','356-revision-v1','','','2016-03-08 18:59:34','2016-03-08 10:59:34','http://blog.csdn.net/akof1314/article/details/49077983\r\n\r\nText 源码解析\r\n\r\n&nbsp;',356,'http://codingcoder.com/?p=358',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (359,1,'2016-03-09 10:14:03','0000-00-00 00:00:00','http://www.cnblogs.com/xdp-gacl/p/3729033.html\n\nweb server vs app server\n\nhttp://stackoverflow.com/questions/936197/what-is-the-difference-between-application-server-and-web-server','JavaWeb开发入门','','draft','open','open','','','','','2016-03-09 10:14:03','2016-03-09 02:14:03','http://www.cnblogs.com/xdp-gacl/p/3729033.html\r\n\r\nweb server vs app server\r\n\r\nhttp://stackoverflow.com/questions/936197/what-is-the-difference-between-application-server-and-web-server',0,'http://codingcoder.com/?p=359',0,'post','',0);
INSERT INTO `wp_posts` VALUES (360,1,'2016-03-08 18:59:55','2016-03-08 10:59:55','http://www.cnblogs.com/xdp-gacl/p/3729033.html','JavaWeb开发入门','','inherit','closed','closed','','359-revision-v1','','','2016-03-08 18:59:55','2016-03-08 10:59:55','http://www.cnblogs.com/xdp-gacl/p/3729033.html',359,'http://codingcoder.com/?p=360',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (361,1,'2016-03-08 22:44:36','0000-00-00 00:00:00','https://wolfpaulus.com/journal/mac/tomcat8/','install tomcate on mac','','draft','open','open','','','','','2016-03-08 22:44:36','2016-03-08 14:44:36','https://wolfpaulus.com/journal/mac/tomcat8/',0,'http://codingcoder.com/?p=361',0,'post','',0);
INSERT INTO `wp_posts` VALUES (362,1,'2016-03-08 22:44:33','2016-03-08 14:44:33','https://wolfpaulus.com/journal/mac/tomcat8/','install tomcate on mac','','inherit','closed','closed','','361-revision-v1','','','2016-03-08 22:44:33','2016-03-08 14:44:33','https://wolfpaulus.com/journal/mac/tomcat8/',361,'http://codingcoder.com/?p=362',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (363,1,'2016-03-09 09:20:59','2016-03-09 01:20:59','http://www.cnblogs.com/xdp-gacl/p/3729033.html\n\nweb server vs app server\n\nhttp://stackoverflow.com/questions/936197/what-is-the-difference-between-application-server-and-web-server','JavaWeb开发入门','','inherit','closed','closed','','359-revision-v1','','','2016-03-09 09:20:59','2016-03-09 01:20:59','http://www.cnblogs.com/xdp-gacl/p/3729033.html\r\n\r\nweb server vs app server\r\n\r\nhttp://stackoverflow.com/questions/936197/what-is-the-difference-between-application-server-and-web-server',359,'http://codingcoder.com/?p=363',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (364,1,'2016-03-10 21:13:13','0000-00-00 00:00:00','https://www.assetstore.unity3d.com/en/#!/content/45693\n\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\n\nPrefabUtility\n\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\n\n&nbsp;\n\nhttp://docs.unity3d.com/Manual/ClassIDReference.html\n\n<p class=\"p1\"><span class=\"s1\"><b>AssetPostprocessor  prefab add Tracking  <span style=\"font-family: Menlo;\"> <span style=\"color: #268ad1;\">OnPostprocessAllAssets</span></span> </b></span></p>','Find References in unity','','draft','open','open','','','','','2016-03-10 21:13:13','2016-03-10 13:13:13','https://www.assetstore.unity3d.com/en/#!/content/45693\r\n\r\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\r\n\r\nPrefabUtility\r\n\r\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\r\n\r\n&nbsp;\r\n\r\nhttp://docs.unity3d.com/Manual/ClassIDReference.html\r\n<p class=\"p1\"><span class=\"s1\"><b>AssetPostprocessor  prefab add Tracking  <span style=\"font-family: Menlo;\"> <span style=\"color: #268ad1;\">OnPostprocessAllAssets</span></span> </b></span></p>',0,'http://codingcoder.com/?p=364',0,'post','',0);
INSERT INTO `wp_posts` VALUES (365,1,'2016-03-10 12:02:34','2016-03-10 04:02:34','https://www.assetstore.unity3d.com/en/#!/content/45693','Find References in unity','','inherit','closed','closed','','364-revision-v1','','','2016-03-10 12:02:34','2016-03-10 04:02:34','https://www.assetstore.unity3d.com/en/#!/content/45693',364,'http://codingcoder.com/?p=365',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (366,1,'2016-03-10 14:17:48','2016-03-10 06:17:48','https://www.assetstore.unity3d.com/en/#!/content/45693\n\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\n\nPrefabUtility\n\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\n\n&nbsp;\n\nhttp://docs.unity3d.com/Manual/ClassIDReference.html','Find References in unity','','inherit','closed','closed','','364-revision-v1','','','2016-03-10 14:17:48','2016-03-10 06:17:48','https://www.assetstore.unity3d.com/en/#!/content/45693\r\n\r\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\r\n\r\nPrefabUtility\r\n\r\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\r\n\r\n&nbsp;\r\n\r\nhttp://docs.unity3d.com/Manual/ClassIDReference.html',364,'http://codingcoder.com/?p=366',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (367,1,'2016-03-10 15:31:06','2016-03-10 07:31:06','https://www.assetstore.unity3d.com/en/#!/content/45693\n\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\n\nPrefabUtility\n\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\n\n&nbsp;\n\nhttp://docs.unity3d.com/Manual/ClassIDReference.html\n\n<p class=\"p1\"><span class=\"s1\"><b>AssetPostprocessor  prefab add Tracking </b></span></p>','Find References in unity','','inherit','closed','closed','','364-revision-v1','','','2016-03-10 15:31:06','2016-03-10 07:31:06','https://www.assetstore.unity3d.com/en/#!/content/45693\r\n\r\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\r\n\r\nPrefabUtility\r\n\r\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\r\n\r\n&nbsp;\r\n\r\nhttp://docs.unity3d.com/Manual/ClassIDReference.html\r\n<p class=\"p1\"><span class=\"s1\"><b>AssetPostprocessor  prefab add Tracking </b></span></p>',364,'http://codingcoder.com/?p=367',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (368,1,'2016-03-10 21:13:13','2016-03-10 13:13:13','https://www.assetstore.unity3d.com/en/#!/content/45693\n\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\n\nPrefabUtility\n\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\n\n&nbsp;\n\nhttp://docs.unity3d.com/Manual/ClassIDReference.html\n\n<p class=\"p1\"><span class=\"s1\"><b>AssetPostprocessor  prefab add Tracking  <span style=\"font-family: Menlo;\"> <span style=\"color: #268ad1;\">OnPostprocessAllAssets</span></span> </b></span></p>','Find References in unity','','inherit','closed','closed','','364-revision-v1','','','2016-03-10 21:13:13','2016-03-10 13:13:13','https://www.assetstore.unity3d.com/en/#!/content/45693\r\n\r\nhttp://forum.unity3d.com/threads/can-we-find-out-an-objects-prefab-asset-in-the-editor.31822/\r\n\r\nPrefabUtility\r\n\r\nfildID vs GUID http://forum.unity3d.com/threads/yaml-fileid-hash-function-for-dll-scripts.252075/\r\n\r\n&nbsp;\r\n\r\nhttp://docs.unity3d.com/Manual/ClassIDReference.html\r\n<p class=\"p1\"><span class=\"s1\"><b>AssetPostprocessor  prefab add Tracking  <span style=\"font-family: Menlo;\"> <span style=\"color: #268ad1;\">OnPostprocessAllAssets</span></span> </b></span></p>',364,'http://codingcoder.com/?p=368',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (369,1,'2016-03-11 13:27:44','2016-03-11 05:27:44','<p class=\"p1\"><span class=\"s1\">作曲 : 陈鸿宇</span></p>\n\n<p class=\"p1\"><span class=\"s1\">作词 : 唐映枫</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">臂弯做衣架</span></p>\n\n<p class=\"p1\"><span class=\"s1\">摇晃在庭前</span></p>\n\n<p class=\"p1\"><span class=\"s1\">腰杆做长椅</span></p>\n\n<p class=\"p1\"><span class=\"s1\">你轻靠</span></p>\n\n<p class=\"p1\"><span class=\"s1\">或躺下看书</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">耳朵做一串项链</span></p>\n\n<p class=\"p1\"><span class=\"s1\">被你锁进铁盒子</span></p>\n\n<p class=\"p1\"><span class=\"s1\">眉目流转做扇窗</span></p>\n\n<p class=\"p1\"><span class=\"s1\">你常在</span></p>\n\n<p class=\"p1\"><span class=\"s1\">沉默时凝望</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">而我的身世，已经早春</span></p>\n\n<p class=\"p1\"><span class=\"s1\">弃于某片荒芜，你经过我</span></p>\n\n<p class=\"p1\"><span class=\"s1\">半生的意义，如此取舍</span></p>\n\n<p class=\"p1\"><span class=\"s1\">骨头在晒干后，还能生火</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">背脊做张床</span></p>\n\n<p class=\"p1\"><span class=\"s1\">偷听你呓语</span></p>\n\n<p class=\"p1\"><span class=\"s1\">发丝做门帘</span></p>\n\n<p class=\"p1\"><span class=\"s1\">折叠成</span></p>\n\n<p class=\"p1\"><span class=\"s1\">深秋的阴影</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">双脚支起一面镜</span></p>\n\n<p class=\"p1\"><span class=\"s1\">清早时你好梳妆</span></p>\n\n<p class=\"p1\"><span class=\"s1\">手指耐看做陈设</span></p>\n\n<p class=\"p1\"><span class=\"s1\">掌心纹精致得</span></p>\n\n<p class=\"p1\"><span class=\"s1\">不需要打磨</span></p>\n\n<p class=\"p2\"><span class=\"s1\"><b> </b></span></p>\n\n<p class=\"p1\"><span class=\"s1\">雨季一过，门栏前吐新芽是我</span></p>\n\n<p class=\"p1\"><span class=\"s1\">隆冬时节，壁炉烟尘是我</span></p>\n\n<p class=\"p1\"><span class=\"s1\">枝桠伸往，更远处的芦边湖泊</span></p>\n\n<p class=\"p3\"><span class=\"s2\">鸟儿惊起，便将叶子抖落</span></p>','早春的树','','publish','open','open','','%e6%97%a9%e6%98%a5%e7%9a%84%e6%a0%91','','','2016-03-11 13:27:44','2016-03-11 05:27:44','<p class=\"p1\"><span class=\"s1\">作曲 : 陈鸿宇</span></p>\r\n<p class=\"p1\"><span class=\"s1\">作词 : 唐映枫</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">臂弯做衣架</span></p>\r\n<p class=\"p1\"><span class=\"s1\">摇晃在庭前</span></p>\r\n<p class=\"p1\"><span class=\"s1\">腰杆做长椅</span></p>\r\n<p class=\"p1\"><span class=\"s1\">你轻靠</span></p>\r\n<p class=\"p1\"><span class=\"s1\">或躺下看书</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">耳朵做一串项链</span></p>\r\n<p class=\"p1\"><span class=\"s1\">被你锁进铁盒子</span></p>\r\n<p class=\"p1\"><span class=\"s1\">眉目流转做扇窗</span></p>\r\n<p class=\"p1\"><span class=\"s1\">你常在</span></p>\r\n<p class=\"p1\"><span class=\"s1\">沉默时凝望</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">而我的身世，已经早春</span></p>\r\n<p class=\"p1\"><span class=\"s1\">弃于某片荒芜，你经过我</span></p>\r\n<p class=\"p1\"><span class=\"s1\">半生的意义，如此取舍</span></p>\r\n<p class=\"p1\"><span class=\"s1\">骨头在晒干后，还能生火</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">背脊做张床</span></p>\r\n<p class=\"p1\"><span class=\"s1\">偷听你呓语</span></p>\r\n<p class=\"p1\"><span class=\"s1\">发丝做门帘</span></p>\r\n<p class=\"p1\"><span class=\"s1\">折叠成</span></p>\r\n<p class=\"p1\"><span class=\"s1\">深秋的阴影</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">双脚支起一面镜</span></p>\r\n<p class=\"p1\"><span class=\"s1\">清早时你好梳妆</span></p>\r\n<p class=\"p1\"><span class=\"s1\">手指耐看做陈设</span></p>\r\n<p class=\"p1\"><span class=\"s1\">掌心纹精致得</span></p>\r\n<p class=\"p1\"><span class=\"s1\">不需要打磨</span></p>\r\n<p class=\"p2\"><span class=\"s1\"><b> </b></span></p>\r\n<p class=\"p1\"><span class=\"s1\">雨季一过，门栏前吐新芽是我</span></p>\r\n<p class=\"p1\"><span class=\"s1\">隆冬时节，壁炉烟尘是我</span></p>\r\n<p class=\"p1\"><span class=\"s1\">枝桠伸往，更远处的芦边湖泊</span></p>\r\n<p class=\"p3\"><span class=\"s2\">鸟儿惊起，便将叶子抖落</span></p>',0,'http://codingcoder.com/?p=369',0,'post','',0);
INSERT INTO `wp_posts` VALUES (370,1,'2016-03-11 13:27:44','2016-03-11 05:27:44','<p class=\"p1\"><span class=\"s1\">作曲 : 陈鸿宇</span></p>\n\n<p class=\"p1\"><span class=\"s1\">作词 : 唐映枫</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">臂弯做衣架</span></p>\n\n<p class=\"p1\"><span class=\"s1\">摇晃在庭前</span></p>\n\n<p class=\"p1\"><span class=\"s1\">腰杆做长椅</span></p>\n\n<p class=\"p1\"><span class=\"s1\">你轻靠</span></p>\n\n<p class=\"p1\"><span class=\"s1\">或躺下看书</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">耳朵做一串项链</span></p>\n\n<p class=\"p1\"><span class=\"s1\">被你锁进铁盒子</span></p>\n\n<p class=\"p1\"><span class=\"s1\">眉目流转做扇窗</span></p>\n\n<p class=\"p1\"><span class=\"s1\">你常在</span></p>\n\n<p class=\"p1\"><span class=\"s1\">沉默时凝望</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">而我的身世，已经早春</span></p>\n\n<p class=\"p1\"><span class=\"s1\">弃于某片荒芜，你经过我</span></p>\n\n<p class=\"p1\"><span class=\"s1\">半生的意义，如此取舍</span></p>\n\n<p class=\"p1\"><span class=\"s1\">骨头在晒干后，还能生火</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">背脊做张床</span></p>\n\n<p class=\"p1\"><span class=\"s1\">偷听你呓语</span></p>\n\n<p class=\"p1\"><span class=\"s1\">发丝做门帘</span></p>\n\n<p class=\"p1\"><span class=\"s1\">折叠成</span></p>\n\n<p class=\"p1\"><span class=\"s1\">深秋的阴影</span></p>\n\n<p class=\"p1\"><span class=\"s1\"> </span></p>\n\n<p class=\"p1\"><span class=\"s1\">双脚支起一面镜</span></p>\n\n<p class=\"p1\"><span class=\"s1\">清早时你好梳妆</span></p>\n\n<p class=\"p1\"><span class=\"s1\">手指耐看做陈设</span></p>\n\n<p class=\"p1\"><span class=\"s1\">掌心纹精致得</span></p>\n\n<p class=\"p1\"><span class=\"s1\">不需要打磨</span></p>\n\n<p class=\"p2\"><span class=\"s1\"><b> </b></span></p>\n\n<p class=\"p1\"><span class=\"s1\">雨季一过，门栏前吐新芽是我</span></p>\n\n<p class=\"p1\"><span class=\"s1\">隆冬时节，壁炉烟尘是我</span></p>\n\n<p class=\"p1\"><span class=\"s1\">枝桠伸往，更远处的芦边湖泊</span></p>\n\n<p class=\"p3\"><span class=\"s2\">鸟儿惊起，便将叶子抖落</span></p>','早春的树','','inherit','closed','closed','','369-revision-v1','','','2016-03-11 13:27:44','2016-03-11 05:27:44','<p class=\"p1\"><span class=\"s1\">作曲 : 陈鸿宇</span></p>\r\n<p class=\"p1\"><span class=\"s1\">作词 : 唐映枫</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">臂弯做衣架</span></p>\r\n<p class=\"p1\"><span class=\"s1\">摇晃在庭前</span></p>\r\n<p class=\"p1\"><span class=\"s1\">腰杆做长椅</span></p>\r\n<p class=\"p1\"><span class=\"s1\">你轻靠</span></p>\r\n<p class=\"p1\"><span class=\"s1\">或躺下看书</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">耳朵做一串项链</span></p>\r\n<p class=\"p1\"><span class=\"s1\">被你锁进铁盒子</span></p>\r\n<p class=\"p1\"><span class=\"s1\">眉目流转做扇窗</span></p>\r\n<p class=\"p1\"><span class=\"s1\">你常在</span></p>\r\n<p class=\"p1\"><span class=\"s1\">沉默时凝望</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">而我的身世，已经早春</span></p>\r\n<p class=\"p1\"><span class=\"s1\">弃于某片荒芜，你经过我</span></p>\r\n<p class=\"p1\"><span class=\"s1\">半生的意义，如此取舍</span></p>\r\n<p class=\"p1\"><span class=\"s1\">骨头在晒干后，还能生火</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">背脊做张床</span></p>\r\n<p class=\"p1\"><span class=\"s1\">偷听你呓语</span></p>\r\n<p class=\"p1\"><span class=\"s1\">发丝做门帘</span></p>\r\n<p class=\"p1\"><span class=\"s1\">折叠成</span></p>\r\n<p class=\"p1\"><span class=\"s1\">深秋的阴影</span></p>\r\n<p class=\"p1\"><span class=\"s1\"> </span></p>\r\n<p class=\"p1\"><span class=\"s1\">双脚支起一面镜</span></p>\r\n<p class=\"p1\"><span class=\"s1\">清早时你好梳妆</span></p>\r\n<p class=\"p1\"><span class=\"s1\">手指耐看做陈设</span></p>\r\n<p class=\"p1\"><span class=\"s1\">掌心纹精致得</span></p>\r\n<p class=\"p1\"><span class=\"s1\">不需要打磨</span></p>\r\n<p class=\"p2\"><span class=\"s1\"><b> </b></span></p>\r\n<p class=\"p1\"><span class=\"s1\">雨季一过，门栏前吐新芽是我</span></p>\r\n<p class=\"p1\"><span class=\"s1\">隆冬时节，壁炉烟尘是我</span></p>\r\n<p class=\"p1\"><span class=\"s1\">枝桠伸往，更远处的芦边湖泊</span></p>\r\n<p class=\"p3\"><span class=\"s2\">鸟儿惊起，便将叶子抖落</span></p>',369,'http://codingcoder.com/?p=370',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (371,1,'2016-03-11 22:28:47','2016-03-11 14:28:47','外地农村出来的孩子，在上海打拼。\n\n我知道，只有比别人付出更多的努力，才有可能获得和别人同样多的成果。\n\n所以，我一直都很努力的拼搏，努力提高自己的能力，积极学习。基本上每天晚上我都会工作到很晚，有的是为了工作，也有时是为了抓住仅有的晚上的一点时间提升自己。\n\n留在上海，只为这里有一个公平的平台，一个一无所有的年轻人，可以凭借自己的才干和努力，赢得尊重，被自己，也被社会。\n\n不公平，让我今晚感受到了耻辱。晚上加班回来的路上，眼睛里一直酸楚楚的，想哭。\n\n但是，我知道，我必须坚强，这个社会希望看到你的软弱，我偏不！\n\n&nbsp;\n\n&nbsp;','今晚，我感受到了耻辱','','publish','open','open','','%e4%bb%8a%e6%99%9a%ef%bc%8c%e6%88%91%e6%84%9f%e5%8f%97%e5%88%b0%e4%ba%86%e8%80%bb%e8%be%b1','','','2016-03-11 22:28:47','2016-03-11 14:28:47','外地农村出来的孩子，在上海打拼。\r\n\r\n我知道，只有比别人付出更多的努力，才有可能获得和别人同样多的成果。\r\n\r\n所以，我一直都很努力的拼搏，努力提高自己的能力，积极学习。基本上每天晚上我都会工作到很晚，有的是为了工作，也有时是为了抓住仅有的晚上的一点时间提升自己。\r\n\r\n留在上海，只为这里有一个公平的平台，一个一无所有的年轻人，可以凭借自己的才干和努力，赢得尊重，被自己，也被社会。\r\n\r\n不公平，让我今晚感受到了耻辱。晚上加班回来的路上，眼睛里一直酸楚楚的，想哭。\r\n\r\n但是，我知道，我必须坚强，这个社会希望看到你的软弱，我偏不！\r\n\r\n&nbsp;\r\n\r\n&nbsp;',0,'http://codingcoder.com/?p=371',0,'post','',0);
INSERT INTO `wp_posts` VALUES (372,1,'2016-03-11 22:28:47','2016-03-11 14:28:47','外地农村出来的孩子，在上海打拼。\n\n我知道，只有比别人付出更多的努力，才有可能获得和别人同样多的成果。\n\n所以，我一直都很努力的拼搏，努力提高自己的能力，积极学习。基本上每天晚上我都会工作到很晚，有的是为了工作，也有时是为了抓住仅有的晚上的一点时间提升自己。\n\n留在上海，只为这里有一个公平的平台，一个一无所有的年轻人，可以凭借自己的才干和努力，赢得尊重，被自己，也被社会。\n\n不公平，让我今晚感受到了耻辱。晚上加班回来的路上，眼睛里一直酸楚楚的，想哭。\n\n但是，我知道，我必须坚强，这个社会希望看到你的软弱，我偏不！\n\n&nbsp;\n\n&nbsp;','今晚，我感受到了耻辱','','inherit','closed','closed','','371-revision-v1','','','2016-03-11 22:28:47','2016-03-11 14:28:47','外地农村出来的孩子，在上海打拼。\r\n\r\n我知道，只有比别人付出更多的努力，才有可能获得和别人同样多的成果。\r\n\r\n所以，我一直都很努力的拼搏，努力提高自己的能力，积极学习。基本上每天晚上我都会工作到很晚，有的是为了工作，也有时是为了抓住仅有的晚上的一点时间提升自己。\r\n\r\n留在上海，只为这里有一个公平的平台，一个一无所有的年轻人，可以凭借自己的才干和努力，赢得尊重，被自己，也被社会。\r\n\r\n不公平，让我今晚感受到了耻辱。晚上加班回来的路上，眼睛里一直酸楚楚的，想哭。\r\n\r\n但是，我知道，我必须坚强，这个社会希望看到你的软弱，我偏不！\r\n\r\n&nbsp;\r\n\r\n&nbsp;',371,'http://codingcoder.com/?p=372',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (373,1,'2016-03-11 23:20:58','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2016-03-11 23:20:58','0000-00-00 00:00:00','',0,'http://codingcoder.com/?p=373',0,'post','',0);
INSERT INTO `wp_posts` VALUES (374,1,'2016-03-12 22:10:56','2016-03-12 14:10:56','今天在研究 Unity 的源码，突然看到一个有意思的函数：\n\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b);\n</pre>\n\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a>  这个函数用来判断两个浮点数是否差不多。我们都知道，如果是两个 int 类型的数a、b，我们可以用 <code>==</code>来进行是否相等的比较。\n\n<pre class=\"lang:c# decode:true\">int a = 2;\nint b = 2;\nif (a == b) {\n// same\n}</pre>\n\n但是，对于浮点数，因为底层存储格式原因我们无法进行精确的比较。比如，浮点数 1.0，在底层可能存储为 0.99999999999，也有可能存储为 1.0000000001，所以他们无法直接进行精确的相等判断。\n\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a> 这个函数的作用就是用来判断这两个浮点数是不是差不多，比如我们认为 1.0 和 10.0/10.0 这两个数应该是差不多相等的。\n\n我们来看一下这个函数的实现：\n\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b)\n{\n    return Mathf.Abs(b - a) &lt; Mathf.Max(1E-06 * Mathf.Max(Mathf.Abs(a), Mathf.Abs(b)), Mathf.Epsilon * 8);\n}\n</pre>\n\n这个代码都在一行里面，有点难读，我把它分拆一下：\n\n<pre class=\"lang:c# decode:true\">    public static bool Approximately(float a, float b)\n    {\n        float maxAbs = Mathf.Max(Mathf.Abs(a), Mathf.Abs(b));\n        float delta = Mathf.Max(1E-06 * maxAbs, Mathf.Epsilon * 8);\n\n        return Mathf.Abs(b - a) &lt; delta;\n    }\n</pre>\n\n基本思路就是判断这两个数的绝对值的差值是否足够的小，如果足够的小，那么就认为它们是差不多大的。\n\n这里有个有意思的 <a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量，这个常量代表两个浮点数之间差值的最小值，比如，1.0000001和1.000002的差值就是0.0000001，这个<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量就是 Unity 所能支持的最小的 浮点数差值。\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何判断两个 float 的数是否相等','','publish','open','open','','%e5%a6%82%e4%bd%95%e5%88%a4%e6%96%ad%e4%b8%a4%e4%b8%aa-float-%e7%9a%84%e6%95%b0%e6%98%af%e5%90%a6%e7%9b%b8%e7%ad%89','','','2016-03-12 22:10:56','2016-03-12 14:10:56','今天在研究 Unity 的源码，突然看到一个有意思的函数：\r\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b);\r\n</pre>\r\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a>  这个函数用来判断两个浮点数是否差不多。我们都知道，如果是两个 int 类型的数a、b，我们可以用 `==`来进行是否相等的比较。\r\n<pre class=\"lang:c# decode:true\">int a = 2;\r\nint b = 2;\r\nif (a == b) {\r\n// same\r\n}</pre>\r\n但是，对于浮点数，因为底层存储格式原因我们无法进行精确的比较。比如，浮点数 1.0，在底层可能存储为 0.99999999999，也有可能存储为 1.0000000001，所以他们无法直接进行精确的相等判断。\r\n\r\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a> 这个函数的作用就是用来判断这两个浮点数是不是差不多，比如我们认为 1.0 和 10.0/10.0 这两个数应该是差不多相等的。\r\n\r\n我们来看一下这个函数的实现：\r\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b)\r\n{\r\n	return Mathf.Abs(b - a) &lt; Mathf.Max(1E-06 * Mathf.Max(Mathf.Abs(a), Mathf.Abs(b)), Mathf.Epsilon * 8);\r\n}\r\n</pre>\r\n这个代码都在一行里面，有点难读，我把它分拆一下：\r\n<pre class=\"lang:c# decode:true\">    public static bool Approximately(float a, float b)\r\n    {\r\n        float maxAbs = Mathf.Max(Mathf.Abs(a), Mathf.Abs(b));\r\n        float delta = Mathf.Max(1E-06 * maxAbs, Mathf.Epsilon * 8);\r\n\r\n        return Mathf.Abs(b - a) &lt; delta;\r\n    }\r\n</pre>\r\n基本思路就是判断这两个数的绝对值的差值是否足够的小，如果足够的小，那么就认为它们是差不多大的。\r\n\r\n这里有个有意思的 <a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量，这个常量代表两个浮点数之间差值的最小值，比如，1.0000001和1.000002的差值就是0.0000001，这个<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量就是 Unity 所能支持的最小的 浮点数差值。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',0,'http://codingcoder.com/?p=374',0,'post','',0);
INSERT INTO `wp_posts` VALUES (375,1,'2016-03-12 22:10:56','2016-03-12 14:10:56','今天在研究 Unity 的源码，突然看到一个有意思的函数：\n\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b);\n</pre>\n\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a>  这个函数用来判断两个浮点数是否差不多。我们都知道，如果是两个 int 类型的数a、b，我们可以用 <code>==</code>来进行是否相等的比较。\n\n<pre class=\"lang:c# decode:true\">int a = 2;\nint b = 2;\nif (a == b) {\n// same\n}</pre>\n\n但是，对于浮点数，因为底层存储格式原因我们无法进行精确的比较。比如，浮点数 1.0，在底层可能存储为 0.99999999999，也有可能存储为 1.0000000001，所以他们无法直接进行精确的相等判断。\n\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a> 这个函数的作用就是用来判断这两个浮点数是不是差不多，比如我们认为 1.0 和 10.0/10.0 这两个数应该是差不多相等的。\n\n我们来看一下这个函数的实现：\n\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b)\n{\n    return Mathf.Abs(b - a) &lt; Mathf.Max(1E-06 * Mathf.Max(Mathf.Abs(a), Mathf.Abs(b)), Mathf.Epsilon * 8);\n}\n</pre>\n\n这个代码都在一行里面，有点难读，我把它分拆一下：\n\n<pre class=\"lang:c# decode:true\">    public static bool Approximately(float a, float b)\n    {\n        float maxAbs = Mathf.Max(Mathf.Abs(a), Mathf.Abs(b));\n        float delta = Mathf.Max(1E-06 * maxAbs, Mathf.Epsilon * 8);\n\n        return Mathf.Abs(b - a) &lt; delta;\n    }\n</pre>\n\n基本思路就是判断这两个数的绝对值的差值是否足够的小，如果足够的小，那么就认为它们是差不多大的。\n\n这里有个有意思的 <a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量，这个常量代表两个浮点数之间差值的最小值，比如，1.0000001和1.000002的差值就是0.0000001，这个<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量就是 Unity 所能支持的最小的 浮点数差值。\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何判断两个 float 的数是否相等','','inherit','closed','closed','','374-revision-v1','','','2016-03-12 22:10:56','2016-03-12 14:10:56','今天在研究 Unity 的源码，突然看到一个有意思的函数：\r\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b);\r\n</pre>\r\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a>  这个函数用来判断两个浮点数是否差不多。我们都知道，如果是两个 int 类型的数a、b，我们可以用 `==`来进行是否相等的比较。\r\n<pre class=\"lang:c# decode:true\">int a = 2;\r\nint b = 2;\r\nif (a == b) {\r\n// same\r\n}</pre>\r\n但是，对于浮点数，因为底层存储格式原因我们无法进行精确的比较。比如，浮点数 1.0，在底层可能存储为 0.99999999999，也有可能存储为 1.0000000001，所以他们无法直接进行精确的相等判断。\r\n\r\n<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\" target=\"_blank\">Mathf.Approximately</a> 这个函数的作用就是用来判断这两个浮点数是不是差不多，比如我们认为 1.0 和 10.0/10.0 这两个数应该是差不多相等的。\r\n\r\n我们来看一下这个函数的实现：\r\n<pre class=\"lang:c# decode:true\">public static bool Approximately(float a, float b)\r\n{\r\n	return Mathf.Abs(b - a) &lt; Mathf.Max(1E-06 * Mathf.Max(Mathf.Abs(a), Mathf.Abs(b)), Mathf.Epsilon * 8);\r\n}\r\n</pre>\r\n这个代码都在一行里面，有点难读，我把它分拆一下：\r\n<pre class=\"lang:c# decode:true\">    public static bool Approximately(float a, float b)\r\n    {\r\n        float maxAbs = Mathf.Max(Mathf.Abs(a), Mathf.Abs(b));\r\n        float delta = Mathf.Max(1E-06 * maxAbs, Mathf.Epsilon * 8);\r\n\r\n        return Mathf.Abs(b - a) &lt; delta;\r\n    }\r\n</pre>\r\n基本思路就是判断这两个数的绝对值的差值是否足够的小，如果足够的小，那么就认为它们是差不多大的。\r\n\r\n这里有个有意思的 <a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量，这个常量代表两个浮点数之间差值的最小值，比如，1.0000001和1.000002的差值就是0.0000001，这个<a href=\"http://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html\" target=\"_blank\">Mathf.Epsilon</a> 常量就是 Unity 所能支持的最小的 浮点数差值。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',374,'http://codingcoder.com/?p=375',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (376,1,'2016-03-13 13:09:19','2016-03-13 05:09:19','今天看 Unity 的文档，才知道原来在 Unity Editor 中是可以同时打开多个 Scene 的，效果如下图所示，还有一些其他的详细介绍，请参考 <a href=\"http://docs.unity3d.com/Manual/MultiSceneEditing.html\" target=\"_blank\">Multi Scene Editing</a> 。\n\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/MultiSceneEditingHierarchy.png\" alt=\"\" width=\"244\" height=\"441\" />','在 Unity Editor 中同时打开多个 Scene','','publish','open','open','','%e5%9c%a8-unity-editor-%e4%b8%ad%e5%90%8c%e6%97%b6%e6%89%93%e5%bc%80%e5%a4%9a%e4%b8%aa-scene','','','2016-03-13 13:09:19','2016-03-13 05:09:19','今天看 Unity 的文档，才知道原来在 Unity Editor 中是可以同时打开多个 Scene 的，效果如下图所示，还有一些其他的详细介绍，请参考 <a href=\"http://docs.unity3d.com/Manual/MultiSceneEditing.html\" target=\"_blank\">Multi Scene Editing</a> 。\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/MultiSceneEditingHierarchy.png\" alt=\"\" width=\"244\" height=\"441\" />',0,'http://codingcoder.com/?p=376',0,'post','',0);
INSERT INTO `wp_posts` VALUES (377,1,'2016-03-13 13:09:19','2016-03-13 05:09:19','今天看 Unity 的文档，才知道原来在 Unity Editor 中是可以同时打开多个 Scene 的，效果如下图所示，还有一些其他的详细介绍，请参考 <a href=\"http://docs.unity3d.com/Manual/MultiSceneEditing.html\" target=\"_blank\">Multi Scene Editing</a> 。\n\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/MultiSceneEditingHierarchy.png\" alt=\"\" width=\"244\" height=\"441\" />','在 Unity Editor 中同时打开多个 Scene','','inherit','closed','closed','','376-revision-v1','','','2016-03-13 13:09:19','2016-03-13 05:09:19','今天看 Unity 的文档，才知道原来在 Unity Editor 中是可以同时打开多个 Scene 的，效果如下图所示，还有一些其他的详细介绍，请参考 <a href=\"http://docs.unity3d.com/Manual/MultiSceneEditing.html\" target=\"_blank\">Multi Scene Editing</a> 。\r\n\r\n<img class=\"alignnone\" src=\"http://docs.unity3d.com/uploads/Main/MultiSceneEditingHierarchy.png\" alt=\"\" width=\"244\" height=\"441\" />',376,'http://codingcoder.com/?p=377',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (378,1,'2016-03-13 13:47:00','0000-00-00 00:00:00','<ol>\n    <li>\n<h2>使游戏可以从任何一个 Scene 运行</h2>\n</li>\n</ol>\n\n为了方便多人合作时的分工，一般会按照功能模块把相对独立的页面放在不同的 Scene 里面。如果可以使游戏能够在任何一个 Scene 里面都可以运行，那么这将非常节省测试时间。\n\n要达到游戏可以从任何一个 Scene 运行，我们就需要对一些数据方面的依赖做处理。比如，可能正常的运行顺序时，在 Scene B 运行时，Scene A 必然已经运行了，这个时候有些数据我们是放在 SceneA 里面处理的，然后 SceneB 拿过数据来用就可以了。但是当 Scene 的启动顺序改变后，我们就需要对 Scene B 首先运行的情况做特殊的处理。\n\n&nbsp;\n\n&nbsp;\n\nhttp://devmag.org.za/2012/07/12/50-tips-for-working-with-unity-best-practices/\n\nhttp://www.rivellomultimediaconsulting.com/unity-best-practices/\n\nhttp://www.glenstevens.ca/unity3d-best-practices/','Unity 开发最佳实践','','draft','open','open','','','','','2016-03-13 13:47:00','2016-03-13 05:47:00','<ol>\n	<li>\n<h2>使游戏可以从任何一个 Scene 运行</h2>\n</li>\n</ol>\n为了方便多人合作时的分工，一般会按照功能模块把相对独立的页面放在不同的 Scene 里面。如果可以使游戏能够在任何一个 Scene 里面都可以运行，那么这将非常节省测试时间。\n\n要达到游戏可以从任何一个 Scene 运行，我们就需要对一些数据方面的依赖做处理。比如，可能正常的运行顺序时，在 Scene B 运行时，Scene A 必然已经运行了，这个时候有些数据我们是放在 SceneA 里面处理的，然后 SceneB 拿过数据来用就可以了。但是当 Scene 的启动顺序改变后，我们就需要对 Scene B 首先运行的情况做特殊的处理。\n\n&nbsp;\n\n&nbsp;\n\nhttp://devmag.org.za/2012/07/12/50-tips-for-working-with-unity-best-practices/\n\nhttp://www.rivellomultimediaconsulting.com/unity-best-practices/\n\nhttp://www.glenstevens.ca/unity3d-best-practices/',0,'http://codingcoder.com/?p=378',0,'post','',0);
INSERT INTO `wp_posts` VALUES (379,1,'2016-03-13 14:29:25','2016-03-13 06:29:25','<a href=\"http://www.jianshu.com/p/7cd99a05cfea\">Unity Mesh 初体验</a>','Unity Mesh 初体验','','publish','open','open','','unity-mesh-%e5%88%9d%e4%bd%93%e9%aa%8c','','','2016-03-13 14:29:25','2016-03-13 06:29:25','<a href=\"http://www.jianshu.com/p/7cd99a05cfea\">Unity Mesh 初体验</a>',0,'http://codingcoder.com/?p=379',0,'post','',0);
INSERT INTO `wp_posts` VALUES (381,1,'2016-03-13 14:29:25','2016-03-13 06:29:25','<a href=\"http://www.jianshu.com/p/7cd99a05cfea\">Unity Mesh 初体验</a>','Unity Mesh 初体验','','inherit','closed','closed','','379-revision-v1','','','2016-03-13 14:29:25','2016-03-13 06:29:25','<a href=\"http://www.jianshu.com/p/7cd99a05cfea\">Unity Mesh 初体验</a>',379,'http://codingcoder.com/?p=381',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (382,1,'2016-03-13 14:36:11','2016-03-13 06:36:11','<a href=\"http://www.jianshu.com/p/afe829b073ef\" target=\"_blank\">Unity坐标系统</a>','Unity坐标系统','','publish','open','open','','unity%e5%9d%90%e6%a0%87%e7%b3%bb%e7%bb%9f','','','2016-03-13 14:36:11','2016-03-13 06:36:11','<a href=\"http://www.jianshu.com/p/afe829b073ef\" target=\"_blank\">Unity坐标系统</a>',0,'http://codingcoder.com/?p=382',0,'post','',0);
INSERT INTO `wp_posts` VALUES (383,1,'2016-03-13 14:30:29','2016-03-13 06:30:29','<a href=\"http://www.jianshu.com/p/afe829b073ef\" target=\"_blank\">Unity坐标系统</a>','Unity坐标系统','','inherit','closed','closed','','382-revision-v1','','','2016-03-13 14:30:29','2016-03-13 06:30:29','<a href=\"http://www.jianshu.com/p/afe829b073ef\" target=\"_blank\">Unity坐标系统</a>',382,'http://codingcoder.com/?p=383',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (384,1,'2016-03-13 19:56:22','0000-00-00 00:00:00','','自动草稿','','auto-draft','closed','closed','','','','','2016-03-13 19:56:22','0000-00-00 00:00:00','',0,'http://codingcoder.com/?page_id=384',0,'page','',0);
INSERT INTO `wp_posts` VALUES (385,1,'2016-03-13 19:58:13','2016-03-13 11:58:13','这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样：\n\n<blockquote>我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。</blockquote>\n\n……或下面这样：\n\n<blockquote>XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的贡献。</blockquote>\n\n作为一个新的WordPress用户，您可以前往<a href=\"http://115.159.76.183/wp-admin/\">您的仪表盘</a>删除这个页面，并建立属于您的全新内容。祝您使用愉快！','示例页面','','inherit','closed','closed','','2-revision-v1','','','2016-03-13 19:58:13','2016-03-13 11:58:13','这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样：\n\n<blockquote>我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。</blockquote>\n\n……或下面这样：\n\n<blockquote>XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的贡献。</blockquote>\n\n作为一个新的WordPress用户，您可以前往<a href=\"http://115.159.76.183/wp-admin/\">您的仪表盘</a>删除这个页面，并建立属于您的全新内容。祝您使用愉快！',2,'http://codingcoder.com/?p=385',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (386,1,'2016-03-13 19:59:25','2016-03-13 11:59:25','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\n\n破土君\n\n<blockquote> Keep looking. Don\'t settle!</blockquote>\n\n90后的我，乐观开朗，做自己喜欢的事\n\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\n\n喜欢70、80年代的老歌，有一个怀旧的心\n\n朋友们都说我很靠谱\n\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\n\n在那里，我收获了一枚美眉、一群朋友\n\n还有那一份牵挂一生的友情\n\n后来，我来到了北京\n\n成为了码农\n\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\n\n读点闲书，看个电影\n\n偶尔思考一下宇宙是什么\n\n咖啡是不喜欢喝的\n\n对明信片有种特别的爱好，那里有对远方的憧憬\n\n学点设计，写点代码\n\n自己的理想工作状态是成为一个旅行式的自由职业者\n\n虽然很困难，但是我在不断努力中\n\n人，就该有点梦想不是？\n\n2014年5月13日，我做出了一个让我自己感动的决定\n\n给自己一点时间，给自己一个机会，做自己喜欢的事情\n\n现在的我，身在上海\n\n一群小伙伴，还有一只可爱的猫\n\n一起努力，书写着自己喜欢的故事\n\n这就是我\n\n期待和你相识，分享你的故事\n\n我们的故事未完待续...\n\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>','关于作者','','inherit','closed','closed','','139-revision-v1','','','2016-03-13 19:59:25','2016-03-13 11:59:25','<a href=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1.jpg\" rel=\"attachment wp-att-52\"><img class=\"alignnone size-medium wp-image-52\" src=\"http://115.159.76.183/wp-content/uploads/2016/02/7148d7bfjw1dz3vdz0dnxj-1-300x300.jpg\" alt=\"7148d7bfjw1dz3vdz0dnxj-1\" width=\"300\" height=\"300\" /></a>\r\n\r\n破土君\r\n<blockquote> Keep looking. Don\'t settle!</blockquote>\r\n90后的我，乐观开朗，做自己喜欢的事\r\n\r\n喜欢打羽毛球、乒乓球，足球也可以踢一踢\r\n\r\n喜欢70、80年代的老歌，有一个怀旧的心\r\n\r\n朋友们都说我很靠谱\r\n\r\n青岛，度过了4年的大学时光，也带给了我最美好的回忆\r\n\r\n在那里，我收获了一枚美眉、一群朋友\r\n\r\n还有那一份牵挂一生的友情\r\n\r\n后来，我来到了北京\r\n\r\n成为了码农\r\n\r\n挤着地铁，呼吸着毒气，却总也不敢忘记自己的追求和梦想\r\n\r\n读点闲书，看个电影\r\n\r\n偶尔思考一下宇宙是什么\r\n\r\n咖啡是不喜欢喝的\r\n\r\n对明信片有种特别的爱好，那里有对远方的憧憬\r\n\r\n学点设计，写点代码\r\n\r\n自己的理想工作状态是成为一个旅行式的自由职业者\r\n\r\n虽然很困难，但是我在不断努力中\r\n\r\n人，就该有点梦想不是？\r\n\r\n2014年5月13日，我做出了一个让我自己感动的决定\r\n\r\n给自己一点时间，给自己一个机会，做自己喜欢的事情\r\n\r\n现在的我，身在上海\r\n\r\n一群小伙伴，还有一只可爱的猫\r\n\r\n一起努力，书写着自己喜欢的故事\r\n\r\n这就是我\r\n\r\n期待和你相识，分享你的故事\r\n\r\n我们的故事未完待续...\r\n\r\n欢迎逛逛我的微博：<a href=\"http://weibo.com/p/1005051900599231/home?from=page_100505&amp;mod=TAB#place\" target=\"_blank\">破土君</a>',139,'http://codingcoder.com/?p=386',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (387,1,'2016-03-14 13:40:24','0000-00-00 00:00:00','https://bitbucket.org/Chaoseiro/x-unitmx/wiki/Home','Tile Map Editor','','draft','open','open','','','','','2016-03-14 13:40:24','2016-03-14 05:40:24','https://bitbucket.org/Chaoseiro/x-unitmx/wiki/Home',0,'http://codingcoder.com/?p=387',0,'post','',0);
INSERT INTO `wp_posts` VALUES (388,1,'2016-03-14 13:40:24','2016-03-14 05:40:24','https://bitbucket.org/Chaoseiro/x-unitmx/wiki/Home','Tile Map Editor','','inherit','closed','closed','','387-revision-v1','','','2016-03-14 13:40:24','2016-03-14 05:40:24','https://bitbucket.org/Chaoseiro/x-unitmx/wiki/Home',387,'http://codingcoder.com/?p=388',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (380,1,'2016-03-13 14:27:57','2016-03-13 06:27:57','<h2>什么是Mesh</h2>\n\nMesh是Unity中的一个组件，称为网格组件。通俗的讲，Mesh是指模型的网格，3D模型是由多边形拼接而成，而一个复杂的多边形，实际上是由多个三角面拼接而成。所以一个3D模型的表面是由多个彼此相连的三角面构成。三维空间中，构成这些三角面的点以及三角形的边的集合就是Mesh。如下图所示：\n\n<img src=\"http://upload-images.jianshu.io/upload_images/60413-0ef1f70fc19b5590.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240\" alt=\"mesh.png\" />\n\n所以建模型就是就是要画一些列的三角形，而定位一个三角形就是只需要3个顶点而已。很简单哦。\n\n比如我们要画一个五边形，如下：\n\n<img src=\"http://upload-images.jianshu.io/upload_images/60413-3f51fcc88bed3223.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240\" alt=\"demo1.png\" />\n\n它有五个顶点，但是在Unity中是通过把它转换成一系列的三角形来绘制的。所以我们需要想一想用几个三角形通过什么样的组合才能拼成这个五边形呢。\n\n我们可以由(1, 2, 3), (1, 3, 4)和(1, 4, 5)三个三角形组成，\n<img src=\"http://upload-images.jianshu.io/upload_images/60413-8fc0d6f29f3ec91b.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240\" alt=\"demo2.png\" />\n\n也可以由(2, 1, 5)，(2, 4, 5) 和(2, 3, 4)三个三角形组成。\n\n<img src=\"http://upload-images.jianshu.io/upload_images/60413-814870014adaf9ef.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240\" alt=\"demo3.png\" />\n\n组成同一个形状的三角形排列方案可以有很多种，但是并不是所有的方案都能组合成我们希望的图形，比如下面这个：\n<img src=\"http://upload-images.jianshu.io/upload_images/60413-27f08069a098cec6.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240\" alt=\"demo4.png\" />\n\n在Unity Mesh这个类中，数组mesh.vertices就是用于存储三角形顶点坐标。当顶点数超过3个的时候，我们连接点的顺序不同，就会绘制出不同形状的图形，所以我们必须要获得我们想要的连接点的顺序。数组mesh.triangles就是用来记录连接三角形的顺序的。由于每绘制一个三角形需要知道其三个顶点的顺序，那么绘制n个三角形就需要知道3*n个点的顺序。即数组mesh.triangles的长度是3的倍数。\n##手写代码创建Mesh\n为了简单，我们先来学习下如何用代码创建一个三角形Mesh。\n```c#\npublic class MeshDemo : MonoBehaviour\n{\n// Use this for initialization\nvoid Start ()\n{\nthis.GetTriangle ();\n}\n\n// Update is called once per frame\nvoid Update ()\n{\n\n}\n\npublic GameObject GetTriangle ()\n{\nGameObject go = new GameObject (&quot;Triangle&quot;);\nMeshFilter filter = go.AddComponent&lt;MeshFilter&gt; ();\n\n// 构建三角形的三个顶点，并赋值给Mesh.vertices\nMesh mesh = new Mesh ();\nfilter.sharedMesh = mesh;\nmesh.vertices = new Vector3[] {\nnew Vector3 (0, 0, 1),\nnew Vector3 (0, 2, 0),\nnew Vector3 (2, 0, 5),\n};\n\n// 构建三角形的顶点顺序，因为这里只有一个三角形，\n// 所以只能是(0, 1, 2)这个顺序。\nmesh.triangles = new int[3] {0, 1, 2};\n\nmesh.RecalculateNormals ();\nmesh.RecalculateBounds ();\n\n// 使用Shader构建一个材质，并设置材质的颜色。\nMaterial material = new Material (Shader.Find (&quot;Diffuse&quot;));\nmaterial.SetColor (&quot;_Color&quot;, Color.yellow);\n\n// 构建一个MeshRender并把上面创建的材质赋值给它，\n// 然后使其把上面构造的Mesh渲染到屏幕上。\nMeshRenderer renderer = go.AddComponent&lt;MeshRenderer&gt; ();\nrenderer.sharedMaterial = material;\n\nreturn go;\n}\n}\n\n&lt;pre&gt;&lt;code&gt;代码比较简单，里面关于MeshFilter和MeshRenderer，以及Shader相关的知识，这部分我另外会单独介绍，大家可以先关注Mesh相关的部分。\n\n下面我们再来创建一个稍微复杂一点的五边形。\n\n&lt;/code&gt;&lt;/pre&gt;\n\npublic GameObject GetPentagon ()\n{\nGameObject go = new GameObject (&quot;Pentagon&quot;);\nMeshFilter filter = go.AddComponent&lt;MeshFilter&gt; ();\n\nMesh mesh = new Mesh ();\nfilter.sharedMesh = mesh;\nmesh.vertices = new Vector3[] {\nnew Vector3 (0, 0, 0),\nnew Vector3 (0, 2, 0),\nnew Vector3 (2, 0, 0),\nnew Vector3 (2, -2, 0),\nnew Vector3 (1, -2, 0),\n};\n\nmesh.triangles = new int[9] {0, 1, 2, 0, 2, 3, 0, 3, 4};\n\nmesh.RecalculateNormals ();\nmesh.RecalculateBounds ();\n\nMaterial material = new Material (Shader.Find (&quot;Diffuse&quot;));\nmaterial.SetColor (&quot;_Color&quot;, Color.yellow);\n\nMeshRenderer renderer = go.AddComponent&lt;MeshRenderer&gt; ();\nrenderer.sharedMaterial = material;\n\nreturn go;\n}\n```\n\n代码也很简单，不再废话。大家可以自己动手试试看，改变mest.triangles中三角形的顺序，看看会产生什么不同的结果。\n\n好了，关于Mesh相关的知识就暂时讲这些，我也是一个Unity的新手，有任何问题欢迎大家指正，一起进步。','Unity Mesh 初体验','','inherit','closed','closed','','379-revision-v1','','','2016-03-13 14:27:57','2016-03-13 06:27:57','## 什么是Mesh\r\nMesh是Unity中的一个组件，称为网格组件。通俗的讲，Mesh是指模型的网格，3D模型是由多边形拼接而成，而一个复杂的多边形，实际上是由多个三角面拼接而成。所以一个3D模型的表面是由多个彼此相连的三角面构成。三维空间中，构成这些三角面的点以及三角形的边的集合就是Mesh。如下图所示：\r\n\r\n![mesh.png](http://upload-images.jianshu.io/upload_images/60413-0ef1f70fc19b5590.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240)\r\n\r\n所以建模型就是就是要画一些列的三角形，而定位一个三角形就是只需要3个顶点而已。很简单哦。\r\n\r\n比如我们要画一个五边形，如下：\r\n\r\n![demo1.png](http://upload-images.jianshu.io/upload_images/60413-3f51fcc88bed3223.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240)\r\n\r\n它有五个顶点，但是在Unity中是通过把它转换成一系列的三角形来绘制的。所以我们需要想一想用几个三角形通过什么样的组合才能拼成这个五边形呢。\r\n\r\n我们可以由(1, 2, 3), (1, 3, 4)和(1, 4, 5)三个三角形组成，\r\n![demo2.png](http://upload-images.jianshu.io/upload_images/60413-8fc0d6f29f3ec91b.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240)\r\n\r\n也可以由(2, 1, 5)，(2, 4, 5) 和(2, 3, 4)三个三角形组成。\r\n\r\n![demo3.png](http://upload-images.jianshu.io/upload_images/60413-814870014adaf9ef.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240)\r\n\r\n组成同一个形状的三角形排列方案可以有很多种，但是并不是所有的方案都能组合成我们希望的图形，比如下面这个：\r\n![demo4.png](http://upload-images.jianshu.io/upload_images/60413-27f08069a098cec6.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240)\r\n\r\n在Unity Mesh这个类中，数组mesh.vertices就是用于存储三角形顶点坐标。当顶点数超过3个的时候，我们连接点的顺序不同，就会绘制出不同形状的图形，所以我们必须要获得我们想要的连接点的顺序。数组mesh.triangles就是用来记录连接三角形的顺序的。由于每绘制一个三角形需要知道其三个顶点的顺序，那么绘制n个三角形就需要知道3*n个点的顺序。即数组mesh.triangles的长度是3的倍数。\r\n##手写代码创建Mesh\r\n为了简单，我们先来学习下如何用代码创建一个三角形Mesh。\r\n```c#\r\npublic class MeshDemo : MonoBehaviour\r\n{\r\n// Use this for initialization\r\nvoid Start ()\r\n{\r\nthis.GetTriangle ();\r\n}\r\n\r\n// Update is called once per frame\r\nvoid Update ()\r\n{\r\n\r\n}\r\n\r\npublic GameObject GetTriangle ()\r\n{\r\nGameObject go = new GameObject (&quot;Triangle&quot;);\r\nMeshFilter filter = go.AddComponent&lt;MeshFilter&gt; ();\r\n\r\n// 构建三角形的三个顶点，并赋值给Mesh.vertices\r\nMesh mesh = new Mesh ();\r\nfilter.sharedMesh = mesh;\r\nmesh.vertices = new Vector3[] {\r\nnew Vector3 (0, 0, 1),\r\nnew Vector3 (0, 2, 0),\r\nnew Vector3 (2, 0, 5),\r\n};\r\n\r\n// 构建三角形的顶点顺序，因为这里只有一个三角形，\r\n// 所以只能是(0, 1, 2)这个顺序。\r\nmesh.triangles = new int[3] {0, 1, 2};\r\n\r\nmesh.RecalculateNormals ();\r\nmesh.RecalculateBounds ();\r\n\r\n// 使用Shader构建一个材质，并设置材质的颜色。\r\nMaterial material = new Material (Shader.Find (&quot;Diffuse&quot;));\r\nmaterial.SetColor (&quot;_Color&quot;, Color.yellow);\r\n\r\n// 构建一个MeshRender并把上面创建的材质赋值给它，\r\n// 然后使其把上面构造的Mesh渲染到屏幕上。\r\nMeshRenderer renderer = go.AddComponent&lt;MeshRenderer&gt; ();\r\nrenderer.sharedMaterial = material;\r\n\r\nreturn go;\r\n}\r\n}\r\n```\r\n代码比较简单，里面关于MeshFilter和MeshRenderer，以及Shader相关的知识，这部分我另外会单独介绍，大家可以先关注Mesh相关的部分。\r\n\r\n下面我们再来创建一个稍微复杂一点的五边形。\r\n\r\n```\r\npublic GameObject GetPentagon ()\r\n{\r\nGameObject go = new GameObject (&quot;Pentagon&quot;);\r\nMeshFilter filter = go.AddComponent&lt;MeshFilter&gt; ();\r\n\r\nMesh mesh = new Mesh ();\r\nfilter.sharedMesh = mesh;\r\nmesh.vertices = new Vector3[] {\r\nnew Vector3 (0, 0, 0),\r\nnew Vector3 (0, 2, 0),\r\nnew Vector3 (2, 0, 0),\r\nnew Vector3 (2, -2, 0),\r\nnew Vector3 (1, -2, 0),\r\n};\r\n\r\nmesh.triangles = new int[9] {0, 1, 2, 0, 2, 3, 0, 3, 4};\r\n\r\nmesh.RecalculateNormals ();\r\nmesh.RecalculateBounds ();\r\n\r\nMaterial material = new Material (Shader.Find (&quot;Diffuse&quot;));\r\nmaterial.SetColor (&quot;_Color&quot;, Color.yellow);\r\n\r\nMeshRenderer renderer = go.AddComponent&lt;MeshRenderer&gt; ();\r\nrenderer.sharedMaterial = material;\r\n\r\nreturn go;\r\n}\r\n```\r\n\r\n代码也很简单，不再废话。大家可以自己动手试试看，改变mest.triangles中三角形的顺序，看看会产生什么不同的结果。\r\n\r\n好了，关于Mesh相关的知识就暂时讲这些，我也是一个Unity的新手，有任何问题欢迎大家指正，一起进步。',379,'http://codingcoder.com/?p=380',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (389,1,'2016-03-14 18:03:42','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2016-03-14 18:03:42','0000-00-00 00:00:00','',0,'http://codingcoder.com/?p=389',0,'post','',0);
INSERT INTO `wp_posts` VALUES (390,1,'2016-03-14 18:03:46','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2016-03-14 18:03:46','0000-00-00 00:00:00','',0,'http://codingcoder.com/?p=390',0,'post','',0);
INSERT INTO `wp_posts` VALUES (391,1,'2016-03-14 18:04:16','0000-00-00 00:00:00','','Nested Prefab & Find Pro','','draft','open','open','','','','','2016-03-14 18:04:16','2016-03-14 10:04:16','',0,'http://codingcoder.com/?p=391',0,'post','',0);
INSERT INTO `wp_posts` VALUES (392,1,'2016-03-14 18:04:16','2016-03-14 10:04:16','','Nested Prefab & Find Pro','','inherit','closed','closed','','391-revision-v1','','','2016-03-14 18:04:16','2016-03-14 10:04:16','',391,'http://codingcoder.com/?p=392',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (394,1,'2016-03-15 19:54:21','2016-03-15 11:54:21','','Screen Shot 2016-03-15 at 7.51.16 PM','','inherit','open','closed','','screen-shot-2016-03-15-at-7-51-16-pm','','','2016-03-15 19:54:21','2016-03-15 11:54:21','',393,'http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (395,1,'2016-03-15 19:54:22','2016-03-15 11:54:22','','Screen Shot 2016-03-15 at 7.51.40 PM','','inherit','open','closed','','screen-shot-2016-03-15-at-7-51-40-pm','','','2016-03-15 19:54:22','2016-03-15 11:54:22','',393,'http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png',0,'attachment','image/png',0);
INSERT INTO `wp_posts` VALUES (396,1,'2016-03-15 20:03:34','2016-03-15 12:03:34','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\n\n然后，你会得到下面的结果页面：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\n\n这样我们就可以知道选中对象的依赖关系了。\n\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\n\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\n\n<ol>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\n</ol>\n\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\n\n<pre class=\"lang:c# decode:true\">#if UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing UnityEditor;\n\nnamespace PT.Find\n{\n    [ExecuteInEditMode]\n    public static class Find\n    {\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\n        public static void SelectSceneUsesOfAsset()\n        {\n            Object selectedObject = Selection.activeObject;\n            if (selectedObject == null)\n            {\n                return;\n            }\n            Object[] roots = new Object[]{ selectedObject };\n\n            var objs = EditorUtility.CollectDependencies(roots);\n\n            string path = AssetDatabase.GetAssetPath(selectedObject);\n            var objs2 = AssetDatabase.GetDependencies(path);\n\n            foreach (var obj in objs)\n            {\n                Debug.Log(obj.GetType().Name); \n            }\n\n        }\n        \n    }\n}\n#endif</pre>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何在 Unity 中获取某个对象的依赖关系','','inherit','closed','closed','','393-revision-v1','','','2016-03-15 20:03:34','2016-03-15 12:03:34','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\r\n\r\n然后，你会得到下面的结果页面：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\r\n\r\n这样我们就可以知道选中对象的依赖关系了。\r\n\r\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\r\n\r\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\r\n<ol>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\r\n</ol>\r\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\r\n<pre class=\"lang:c# decode:true\">#if UNITY_EDITOR\r\nusing UnityEngine;\r\nusing System.Collections;\r\nusing UnityEditor;\r\n\r\nnamespace PT.Find\r\n{\r\n    [ExecuteInEditMode]\r\n    public static class Find\r\n    {\r\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\r\n        public static void SelectSceneUsesOfAsset()\r\n        {\r\n            Object selectedObject = Selection.activeObject;\r\n            if (selectedObject == null)\r\n            {\r\n                return;\r\n            }\r\n            Object[] roots = new Object[]{ selectedObject };\r\n\r\n            var objs = EditorUtility.CollectDependencies(roots);\r\n\r\n            string path = AssetDatabase.GetAssetPath(selectedObject);\r\n            var objs2 = AssetDatabase.GetDependencies(path);\r\n\r\n            foreach (var obj in objs)\r\n            {\r\n                Debug.Log(obj.GetType().Name); \r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n#endif</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',393,'http://codingcoder.com/?p=396',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (397,1,'2016-03-15 20:04:17','2016-03-15 12:04:17','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\n\n然后，你会得到下面的结果页面：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\n\n这样我们就可以知道选中对象的依赖关系了。\n\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\n\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\n\n<ol>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\n</ol>\n\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\n\n<pre class=\"lang:c# mark:21，24 decode:true \">#if UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing UnityEditor;\n\nnamespace PT.Find\n{\n    [ExecuteInEditMode]\n    public static class Find\n    {\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\n        public static void SelectSceneUsesOfAsset()\n        {\n            Object selectedObject = Selection.activeObject;\n            if (selectedObject == null)\n            {\n                return;\n            }\n            Object[] roots = new Object[]{ selectedObject };\n\n            var objs = EditorUtility.CollectDependencies(roots);\n\n            string path = AssetDatabase.GetAssetPath(selectedObject);\n            var objs2 = AssetDatabase.GetDependencies(path);\n\n            foreach (var obj in objs)\n            {\n                Debug.Log(obj.GetType().Name); \n            }\n\n        }\n        \n    }\n}\n#endif</pre>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何在 Unity 中获取某个对象的依赖关系','','inherit','closed','closed','','393-revision-v1','','','2016-03-15 20:04:17','2016-03-15 12:04:17','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\r\n\r\n然后，你会得到下面的结果页面：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\r\n\r\n这样我们就可以知道选中对象的依赖关系了。\r\n\r\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\r\n\r\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\r\n<ol>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\r\n</ol>\r\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\r\n<pre class=\"lang:c# mark:21，24 decode:true crayon-selected\">#if UNITY_EDITOR\r\nusing UnityEngine;\r\nusing System.Collections;\r\nusing UnityEditor;\r\n\r\nnamespace PT.Find\r\n{\r\n    [ExecuteInEditMode]\r\n    public static class Find\r\n    {\r\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\r\n        public static void SelectSceneUsesOfAsset()\r\n        {\r\n            Object selectedObject = Selection.activeObject;\r\n            if (selectedObject == null)\r\n            {\r\n                return;\r\n            }\r\n            Object[] roots = new Object[]{ selectedObject };\r\n\r\n            var objs = EditorUtility.CollectDependencies(roots);\r\n\r\n            string path = AssetDatabase.GetAssetPath(selectedObject);\r\n            var objs2 = AssetDatabase.GetDependencies(path);\r\n\r\n            foreach (var obj in objs)\r\n            {\r\n                Debug.Log(obj.GetType().Name); \r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n#endif</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',393,'http://codingcoder.com/?p=397',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (398,1,'2016-03-15 20:04:44','2016-03-15 12:04:44','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\n\n然后，你会得到下面的结果页面：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\n\n这样我们就可以知道选中对象的依赖关系了。\n\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\n\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\n\n<ol>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\n</ol>\n\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\n\n<pre class=\"lang:c# mark:21,24 decode:true \">#if UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing UnityEditor;\n\nnamespace PT.Find\n{\n    [ExecuteInEditMode]\n    public static class Find\n    {\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\n        public static void SelectSceneUsesOfAsset()\n        {\n            Object selectedObject = Selection.activeObject;\n            if (selectedObject == null)\n            {\n                return;\n            }\n            Object[] roots = new Object[]{ selectedObject };\n\n            var objs = EditorUtility.CollectDependencies(roots);\n\n            string path = AssetDatabase.GetAssetPath(selectedObject);\n            var objs2 = AssetDatabase.GetDependencies(path);\n\n            foreach (var obj in objs)\n            {\n                Debug.Log(obj.GetType().Name); \n            }\n\n        }\n        \n    }\n}\n#endif</pre>\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何在 Unity 中获取某个对象的依赖关系','','inherit','closed','closed','','393-revision-v1','','','2016-03-15 20:04:44','2016-03-15 12:04:44','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\r\n\r\n然后，你会得到下面的结果页面：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\r\n\r\n这样我们就可以知道选中对象的依赖关系了。\r\n\r\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\r\n\r\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\r\n<ol>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\r\n</ol>\r\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\r\n<pre class=\"lang:c# mark:21,24 decode:true crayon-selected\">#if UNITY_EDITOR\r\nusing UnityEngine;\r\nusing System.Collections;\r\nusing UnityEditor;\r\n\r\nnamespace PT.Find\r\n{\r\n    [ExecuteInEditMode]\r\n    public static class Find\r\n    {\r\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\r\n        public static void SelectSceneUsesOfAsset()\r\n        {\r\n            Object selectedObject = Selection.activeObject;\r\n            if (selectedObject == null)\r\n            {\r\n                return;\r\n            }\r\n            Object[] roots = new Object[]{ selectedObject };\r\n\r\n            var objs = EditorUtility.CollectDependencies(roots);\r\n\r\n            string path = AssetDatabase.GetAssetPath(selectedObject);\r\n            var objs2 = AssetDatabase.GetDependencies(path);\r\n\r\n            foreach (var obj in objs)\r\n            {\r\n                Debug.Log(obj.GetType().Name); \r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n#endif</pre>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',393,'http://codingcoder.com/?p=398',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (399,1,'2016-03-15 20:07:22','2016-03-15 12:07:22','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\n\n然后，你会得到下面的结果页面：\n\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\n\n这样我们就可以知道选中对象的依赖关系了。\n\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\n\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\n\n<ol>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\n    <li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\n</ol>\n\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\n\n<pre class=\"lang:c# mark:21,24 decode:true \">#if UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing UnityEditor;\n\nnamespace PT.Find\n{\n    [ExecuteInEditMode]\n    public static class Find\n    {\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\n        public static void SelectSceneUsesOfAsset()\n        {\n            Object selectedObject = Selection.activeObject;\n            if (selectedObject == null)\n            {\n                return;\n            }\n            Object[] roots = new Object[]{ selectedObject };\n\n            var objs = EditorUtility.CollectDependencies(roots);\n\n            string path = AssetDatabase.GetAssetPath(selectedObject);\n            var objs2 = AssetDatabase.GetDependencies(path);\n\n            foreach (var obj in objs)\n            {\n                Debug.Log(obj.GetType().Name); \n            }\n\n        }\n        \n    }\n}\n#endif</pre>\n\n不得不说，Unity Editor 提供的默认的依赖查找的功能好弱，包括反向依赖关系，引用关系丢失等功能。或许我们可以利用这些接口自己做一个好用点的依赖关系查找插件。\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;','如何在 Unity 中获取某个对象的依赖关系','','inherit','closed','closed','','393-revision-v1','','','2016-03-15 20:07:22','2016-03-15 12:07:22','在 Unity 中我们可以使用下面的菜单获取这个 Prefab 或者脚本有哪些依赖，\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM.png\" rel=\"attachment wp-att-394\"><img class=\"alignnone size-medium wp-image-394\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.16-PM-300x245.png\" alt=\"Screen Shot 2016-03-15 at 7.51.16 PM\" width=\"300\" height=\"245\" /></a>\r\n\r\n然后，你会得到下面的结果页面：\r\n\r\n<a href=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM.png\" rel=\"attachment wp-att-395\"><img class=\"alignnone size-medium wp-image-395\" src=\"http://codingcoder.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-7.51.40-PM-300x165.png\" alt=\"Screen Shot 2016-03-15 at 7.51.40 PM\" width=\"300\" height=\"165\" /></a>\r\n\r\n这样我们就可以知道选中对象的依赖关系了。\r\n\r\n 但是，这种方式只能获取到一个大粒度的依赖关系，比如依赖那个脚本，依赖哪个 Prefab 等，但是并不能给我们列出这个对象可能依赖于哪个Mesh、或者那个材质等这种比较小粒度的依赖关系。\r\n\r\n在 Unity 中目前我发现了获取依赖关系的两个 API 接口，分别是：\r\n<ol>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a></li>\r\n	<li><a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a></li>\r\n</ol>\r\n其中 <a href=\"http://docs.unity3d.com/ScriptReference/AssetDatabase.GetDependencies.html\" target=\"_blank\">AssetDatabase.GetDependencies</a> 获取到的结果就是上面演示的那样，是大粒度的依赖关系。而 <a href=\"http://docs.unity3d.com/ScriptReference/EditorUtility.CollectDependencies.html\" target=\"_blank\">EditorUtility.CollectDependencies</a> 获取到的是小粒度的依赖关系，所依赖的组件和 Shader 等都会列出来，非常的仔细。\r\n<pre class=\"lang:c# mark:21,24 decode:true crayon-selected\">#if UNITY_EDITOR\r\nusing UnityEngine;\r\nusing System.Collections;\r\nusing UnityEditor;\r\n\r\nnamespace PT.Find\r\n{\r\n    [ExecuteInEditMode]\r\n    public static class Find\r\n    {\r\n        [MenuItem(\"Find/What objects in scene use this?\", false, 20)]\r\n        public static void SelectSceneUsesOfAsset()\r\n        {\r\n            Object selectedObject = Selection.activeObject;\r\n            if (selectedObject == null)\r\n            {\r\n                return;\r\n            }\r\n            Object[] roots = new Object[]{ selectedObject };\r\n\r\n            var objs = EditorUtility.CollectDependencies(roots);\r\n\r\n            string path = AssetDatabase.GetAssetPath(selectedObject);\r\n            var objs2 = AssetDatabase.GetDependencies(path);\r\n\r\n            foreach (var obj in objs)\r\n            {\r\n                Debug.Log(obj.GetType().Name); \r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n#endif</pre>\r\n不得不说，Unity Editor 提供的默认的依赖查找的功能好弱，包括反向依赖关系，引用关系丢失等功能。或许我们可以利用这些接口自己做一个好用点的依赖关系查找插件。\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;',393,'http://codingcoder.com/?p=399',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (400,1,'2016-03-15 22:13:20','2016-03-15 14:13:20','<img class=\"alignnone\" src=\"http://docs.unity3d.com/StaticFiles/ScriptRefImages/GenericMenu.png\" alt=\"\" width=\"334\" height=\"192\" />\n\n<pre class=\"lang:c# decode:true \">using UnityEngine;\nusing UnityEditor;\nusing System.Collections;\n\n// This example shows how to create a context menu inside a custom EditorWindow.\n// context-click the green area to show the menu\n\npublic class GenericMenuExample : EditorWindow\n{\n\n    [MenuItem(\"Example/Open Window\")]\n    static void Init()\n    {\n        var window = GetWindow&lt;GenericMenuExample&gt;();\n        window.position = new Rect(50, 50, 250, 60);\n        window.Show();\n    }\n\n    void Callback(object obj)\n    {\n        Debug.Log(\"Selected: \" + obj);\n    }\n\n    void OnGUI()\n    {\n        Event currentEvent = Event.current;\n        Rect contextRect = new Rect(10, 10, 100, 100);\n        EditorGUI.DrawRect(contextRect, Color.green);\n\n        if (currentEvent.type == EventType.ContextClick)\n        {\n            Vector2 mousePos = currentEvent.mousePosition;\n            if (contextRect.Contains(mousePos))\n            {\n                // Now create the menu, add items and show it\n                GenericMenu menu = new GenericMenu();\n                menu.AddItem(new GUIContent(\"MenuItem1\"), false, Callback, \"item 1\");\n                menu.AddItem(new GUIContent(\"MenuItem2\"), false, Callback, \"item 2\");\n                menu.AddSeparator(\"\");\n                menu.AddItem(new GUIContent(\"SubMenu/MenuItem3\"), false, Callback, \"item 3\");\n                menu.ShowAsContext();\n                currentEvent.Use();\n            }\n        }\n    }\n}</pre>\n\n<blockquote><a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a></blockquote>','如何在 Unity Editor 中绘制自定义菜单','','publish','open','open','','%e5%a6%82%e4%bd%95%e5%9c%a8-unity-editor-%e4%b8%ad%e7%bb%98%e5%88%b6%e8%87%aa%e5%ae%9a%e4%b9%89%e8%8f%9c%e5%8d%95','','','2016-03-15 22:13:20','2016-03-15 14:13:20','<img class=\"alignnone\" src=\"http://docs.unity3d.com/StaticFiles/ScriptRefImages/GenericMenu.png\" alt=\"\" width=\"334\" height=\"192\" />\r\n<pre class=\"lang:c# decode:true crayon-selected\">using UnityEngine;\r\nusing UnityEditor;\r\nusing System.Collections;\r\n\r\n// This example shows how to create a context menu inside a custom EditorWindow.\r\n// context-click the green area to show the menu\r\n\r\npublic class GenericMenuExample : EditorWindow\r\n{\r\n\r\n    [MenuItem(\"Example/Open Window\")]\r\n    static void Init()\r\n    {\r\n        var window = GetWindow&lt;GenericMenuExample&gt;();\r\n        window.position = new Rect(50, 50, 250, 60);\r\n        window.Show();\r\n    }\r\n\r\n    void Callback(object obj)\r\n    {\r\n        Debug.Log(\"Selected: \" + obj);\r\n    }\r\n\r\n    void OnGUI()\r\n    {\r\n        Event currentEvent = Event.current;\r\n        Rect contextRect = new Rect(10, 10, 100, 100);\r\n        EditorGUI.DrawRect(contextRect, Color.green);\r\n\r\n        if (currentEvent.type == EventType.ContextClick)\r\n        {\r\n            Vector2 mousePos = currentEvent.mousePosition;\r\n            if (contextRect.Contains(mousePos))\r\n            {\r\n                // Now create the menu, add items and show it\r\n                GenericMenu menu = new GenericMenu();\r\n                menu.AddItem(new GUIContent(\"MenuItem1\"), false, Callback, \"item 1\");\r\n                menu.AddItem(new GUIContent(\"MenuItem2\"), false, Callback, \"item 2\");\r\n                menu.AddSeparator(\"\");\r\n                menu.AddItem(new GUIContent(\"SubMenu/MenuItem3\"), false, Callback, \"item 3\");\r\n                menu.ShowAsContext();\r\n                currentEvent.Use();\r\n            }\r\n        }\r\n    }\r\n}</pre>\r\n<blockquote><a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a></blockquote>',0,'http://codingcoder.com/?p=400',0,'post','',0);
INSERT INTO `wp_posts` VALUES (401,1,'2016-03-15 21:00:47','2016-03-15 13:00:47','&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n<a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a>','如何在 Unity Editor 中绘制自定义菜单','','inherit','closed','closed','','400-revision-v1','','','2016-03-15 21:00:47','2016-03-15 13:00:47','&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a>',400,'http://codingcoder.com/?p=401',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (402,1,'2016-03-15 21:01:41','2016-03-15 13:01:41','&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n<blockquote><a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a></blockquote>','如何在 Unity Editor 中绘制自定义菜单','','inherit','closed','closed','','400-revision-v1','','','2016-03-15 21:01:41','2016-03-15 13:01:41','&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n<blockquote><a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a></blockquote>',400,'http://codingcoder.com/?p=402',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (403,1,'2016-03-15 22:13:20','2016-03-15 14:13:20','<img class=\"alignnone\" src=\"http://docs.unity3d.com/StaticFiles/ScriptRefImages/GenericMenu.png\" alt=\"\" width=\"334\" height=\"192\" />\n\n<pre class=\"lang:c# decode:true \">using UnityEngine;\nusing UnityEditor;\nusing System.Collections;\n\n// This example shows how to create a context menu inside a custom EditorWindow.\n// context-click the green area to show the menu\n\npublic class GenericMenuExample : EditorWindow\n{\n\n    [MenuItem(\"Example/Open Window\")]\n    static void Init()\n    {\n        var window = GetWindow&lt;GenericMenuExample&gt;();\n        window.position = new Rect(50, 50, 250, 60);\n        window.Show();\n    }\n\n    void Callback(object obj)\n    {\n        Debug.Log(\"Selected: \" + obj);\n    }\n\n    void OnGUI()\n    {\n        Event currentEvent = Event.current;\n        Rect contextRect = new Rect(10, 10, 100, 100);\n        EditorGUI.DrawRect(contextRect, Color.green);\n\n        if (currentEvent.type == EventType.ContextClick)\n        {\n            Vector2 mousePos = currentEvent.mousePosition;\n            if (contextRect.Contains(mousePos))\n            {\n                // Now create the menu, add items and show it\n                GenericMenu menu = new GenericMenu();\n                menu.AddItem(new GUIContent(\"MenuItem1\"), false, Callback, \"item 1\");\n                menu.AddItem(new GUIContent(\"MenuItem2\"), false, Callback, \"item 2\");\n                menu.AddSeparator(\"\");\n                menu.AddItem(new GUIContent(\"SubMenu/MenuItem3\"), false, Callback, \"item 3\");\n                menu.ShowAsContext();\n                currentEvent.Use();\n            }\n        }\n    }\n}</pre>\n\n<blockquote><a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a></blockquote>','如何在 Unity Editor 中绘制自定义菜单','','inherit','closed','closed','','400-revision-v1','','','2016-03-15 22:13:20','2016-03-15 14:13:20','<img class=\"alignnone\" src=\"http://docs.unity3d.com/StaticFiles/ScriptRefImages/GenericMenu.png\" alt=\"\" width=\"334\" height=\"192\" />\r\n<pre class=\"lang:c# decode:true crayon-selected\">using UnityEngine;\r\nusing UnityEditor;\r\nusing System.Collections;\r\n\r\n// This example shows how to create a context menu inside a custom EditorWindow.\r\n// context-click the green area to show the menu\r\n\r\npublic class GenericMenuExample : EditorWindow\r\n{\r\n\r\n    [MenuItem(\"Example/Open Window\")]\r\n    static void Init()\r\n    {\r\n        var window = GetWindow&lt;GenericMenuExample&gt;();\r\n        window.position = new Rect(50, 50, 250, 60);\r\n        window.Show();\r\n    }\r\n\r\n    void Callback(object obj)\r\n    {\r\n        Debug.Log(\"Selected: \" + obj);\r\n    }\r\n\r\n    void OnGUI()\r\n    {\r\n        Event currentEvent = Event.current;\r\n        Rect contextRect = new Rect(10, 10, 100, 100);\r\n        EditorGUI.DrawRect(contextRect, Color.green);\r\n\r\n        if (currentEvent.type == EventType.ContextClick)\r\n        {\r\n            Vector2 mousePos = currentEvent.mousePosition;\r\n            if (contextRect.Contains(mousePos))\r\n            {\r\n                // Now create the menu, add items and show it\r\n                GenericMenu menu = new GenericMenu();\r\n                menu.AddItem(new GUIContent(\"MenuItem1\"), false, Callback, \"item 1\");\r\n                menu.AddItem(new GUIContent(\"MenuItem2\"), false, Callback, \"item 2\");\r\n                menu.AddSeparator(\"\");\r\n                menu.AddItem(new GUIContent(\"SubMenu/MenuItem3\"), false, Callback, \"item 3\");\r\n                menu.ShowAsContext();\r\n                currentEvent.Use();\r\n            }\r\n        }\r\n    }\r\n}</pre>\r\n<blockquote><a href=\"http://docs.unity3d.com/ScriptReference/GenericMenu.html\" target=\"_blank\">GenericMenu</a></blockquote>',400,'http://codingcoder.com/?p=403',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (404,1,'2016-03-15 22:44:40','0000-00-00 00:00:00','http://docs.unity3d.com/ScriptReference/Handles.html','Handles','','draft','open','open','','','','','2016-03-15 22:44:40','2016-03-15 14:44:40','http://docs.unity3d.com/ScriptReference/Handles.html',0,'http://codingcoder.com/?p=404',0,'post','',0);
INSERT INTO `wp_posts` VALUES (405,1,'2016-03-15 22:44:40','2016-03-15 14:44:40','http://docs.unity3d.com/ScriptReference/Handles.html','Handles','','inherit','closed','closed','','404-revision-v1','','','2016-03-15 22:44:40','2016-03-15 14:44:40','http://docs.unity3d.com/ScriptReference/Handles.html',404,'http://codingcoder.com/?p=405',0,'revision','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (184,3,0);
INSERT INTO `wp_term_relationships` VALUES (132,4,0);
INSERT INTO `wp_term_relationships` VALUES (132,3,0);
INSERT INTO `wp_term_relationships` VALUES (1,7,0);
INSERT INTO `wp_term_relationships` VALUES (143,4,0);
INSERT INTO `wp_term_relationships` VALUES (143,3,0);
INSERT INTO `wp_term_relationships` VALUES (161,1,0);
INSERT INTO `wp_term_relationships` VALUES (155,3,0);
INSERT INTO `wp_term_relationships` VALUES (162,1,0);
INSERT INTO `wp_term_relationships` VALUES (1,9,0);
INSERT INTO `wp_term_relationships` VALUES (171,3,0);
INSERT INTO `wp_term_relationships` VALUES (165,10,0);
INSERT INTO `wp_term_relationships` VALUES (172,3,0);
INSERT INTO `wp_term_relationships` VALUES (186,3,0);
INSERT INTO `wp_term_relationships` VALUES (201,3,0);
INSERT INTO `wp_term_relationships` VALUES (201,11,0);
INSERT INTO `wp_term_relationships` VALUES (224,3,0);
INSERT INTO `wp_term_relationships` VALUES (232,3,0);
INSERT INTO `wp_term_relationships` VALUES (225,6,0);
INSERT INTO `wp_term_relationships` VALUES (240,3,0);
INSERT INTO `wp_term_relationships` VALUES (234,6,0);
INSERT INTO `wp_term_relationships` VALUES (243,3,0);
INSERT INTO `wp_term_relationships` VALUES (245,3,0);
INSERT INTO `wp_term_relationships` VALUES (247,3,0);
INSERT INTO `wp_term_relationships` VALUES (249,3,0);
INSERT INTO `wp_term_relationships` VALUES (253,3,0);
INSERT INTO `wp_term_relationships` VALUES (258,3,0);
INSERT INTO `wp_term_relationships` VALUES (266,3,0);
INSERT INTO `wp_term_relationships` VALUES (262,12,0);
INSERT INTO `wp_term_relationships` VALUES (270,3,0);
INSERT INTO `wp_term_relationships` VALUES (272,3,0);
INSERT INTO `wp_term_relationships` VALUES (274,3,0);
INSERT INTO `wp_term_relationships` VALUES (276,3,0);
INSERT INTO `wp_term_relationships` VALUES (279,3,0);
INSERT INTO `wp_term_relationships` VALUES (282,3,0);
INSERT INTO `wp_term_relationships` VALUES (286,3,0);
INSERT INTO `wp_term_relationships` VALUES (284,9,0);
INSERT INTO `wp_term_relationships` VALUES (288,3,0);
INSERT INTO `wp_term_relationships` VALUES (294,3,0);
INSERT INTO `wp_term_relationships` VALUES (290,9,0);
INSERT INTO `wp_term_relationships` VALUES (292,14,0);
INSERT INTO `wp_term_relationships` VALUES (298,3,0);
INSERT INTO `wp_term_relationships` VALUES (305,3,0);
INSERT INTO `wp_term_relationships` VALUES (301,15,0);
INSERT INTO `wp_term_relationships` VALUES (303,16,0);
INSERT INTO `wp_term_relationships` VALUES (309,3,0);
INSERT INTO `wp_term_relationships` VALUES (307,9,0);
INSERT INTO `wp_term_relationships` VALUES (311,3,0);
INSERT INTO `wp_term_relationships` VALUES (316,3,0);
INSERT INTO `wp_term_relationships` VALUES (320,3,0);
INSERT INTO `wp_term_relationships` VALUES (325,3,0);
INSERT INTO `wp_term_relationships` VALUES (329,13,0);
INSERT INTO `wp_term_relationships` VALUES (329,9,0);
INSERT INTO `wp_term_relationships` VALUES (331,3,0);
INSERT INTO `wp_term_relationships` VALUES (333,3,0);
INSERT INTO `wp_term_relationships` VALUES (336,3,0);
INSERT INTO `wp_term_relationships` VALUES (338,3,0);
INSERT INTO `wp_term_relationships` VALUES (356,3,0);
INSERT INTO `wp_term_relationships` VALUES (361,3,0);
INSERT INTO `wp_term_relationships` VALUES (359,12,0);
INSERT INTO `wp_term_relationships` VALUES (364,3,0);
INSERT INTO `wp_term_relationships` VALUES (374,3,0);
INSERT INTO `wp_term_relationships` VALUES (369,15,0);
INSERT INTO `wp_term_relationships` VALUES (371,9,0);
INSERT INTO `wp_term_relationships` VALUES (376,3,0);
INSERT INTO `wp_term_relationships` VALUES (378,3,0);
INSERT INTO `wp_term_relationships` VALUES (379,3,0);
INSERT INTO `wp_term_relationships` VALUES (382,3,0);
INSERT INTO `wp_term_relationships` VALUES (387,3,0);
INSERT INTO `wp_term_relationships` VALUES (391,3,0);
INSERT INTO `wp_term_relationships` VALUES (393,3,0);
INSERT INTO `wp_term_relationships` VALUES (400,3,0);
INSERT INTO `wp_term_relationships` VALUES (404,3,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,0);
INSERT INTO `wp_term_taxonomy` VALUES (2,2,'post_format','',0,0);
INSERT INTO `wp_term_taxonomy` VALUES (3,3,'category','',0,34);
INSERT INTO `wp_term_taxonomy` VALUES (4,4,'post_tag','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (5,5,'category','',0,0);
INSERT INTO `wp_term_taxonomy` VALUES (6,6,'category','',0,2);
INSERT INTO `wp_term_taxonomy` VALUES (7,7,'post_format','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (9,9,'category','',0,6);
INSERT INTO `wp_term_taxonomy` VALUES (10,10,'category','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (11,11,'post_tag','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (12,12,'category','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (13,13,'category','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (14,14,'category','',0,1);
INSERT INTO `wp_term_taxonomy` VALUES (15,15,'category','',0,2);
INSERT INTO `wp_term_taxonomy` VALUES (16,16,'category','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'未分类','uncategorized',0);
INSERT INTO `wp_terms` VALUES (2,'post-format-aside','post-format-aside',0);
INSERT INTO `wp_terms` VALUES (3,'Unity','unity',0);
INSERT INTO `wp_terms` VALUES (4,'UGUI','ugui',0);
INSERT INTO `wp_terms` VALUES (5,'iOS','ios',0);
INSERT INTO `wp_terms` VALUES (6,'设计','%e8%ae%be%e8%ae%a1',0);
INSERT INTO `wp_terms` VALUES (7,'post-format-chat','post-format-chat',0);
INSERT INTO `wp_terms` VALUES (9,'扯淡','%e6%89%af%e6%b7%a1',0);
INSERT INTO `wp_terms` VALUES (10,'图形图像','%e5%9b%be%e5%bd%a2%e5%9b%be%e5%83%8f',0);
INSERT INTO `wp_terms` VALUES (11,'Shader','shader',0);
INSERT INTO `wp_terms` VALUES (12,'服务器','%e6%9c%8d%e5%8a%a1%e5%99%a8',0);
INSERT INTO `wp_terms` VALUES (13,'哲学','%e5%93%b2%e5%ad%a6',0);
INSERT INTO `wp_terms` VALUES (14,'技术思考','%e6%8a%80%e6%9c%af%e6%80%9d%e8%80%83',0);
INSERT INTO `wp_terms` VALUES (15,'假装文艺','%e5%81%87%e8%a3%85%e6%96%87%e8%89%ba',0);
INSERT INTO `wp_terms` VALUES (16,'创业思考','%e5%88%9b%e4%b8%9a%e6%80%9d%e8%80%83',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM AUTO_INCREMENT=44 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','破土君');
INSERT INTO `wp_usermeta` VALUES (2,1,'first_name','');
INSERT INTO `wp_usermeta` VALUES (3,1,'last_name','');
INSERT INTO `wp_usermeta` VALUES (4,1,'description','');
INSERT INTO `wp_usermeta` VALUES (5,1,'rich_editing','true');
INSERT INTO `wp_usermeta` VALUES (6,1,'comment_shortcuts','false');
INSERT INTO `wp_usermeta` VALUES (7,1,'admin_color','fresh');
INSERT INTO `wp_usermeta` VALUES (8,1,'use_ssl','0');
INSERT INTO `wp_usermeta` VALUES (9,1,'show_admin_bar_front','true');
INSERT INTO `wp_usermeta` VALUES (10,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}');
INSERT INTO `wp_usermeta` VALUES (11,1,'wp_user_level','10');
INSERT INTO `wp_usermeta` VALUES (12,1,'dismissed_wp_pointers','tp09_edit_drag_drop_sort');
INSERT INTO `wp_usermeta` VALUES (13,1,'show_welcome_panel','1');
INSERT INTO `wp_usermeta` VALUES (21,1,'session_tokens','a:8:{s:64:\"6965922397cdd415b9c778e58148ef33f1bf780d185f42428481aa0f79b93ef9\";a:4:{s:10:\"expiration\";i:1457176561;s:2:\"ip\";s:15:\"116.230.148.226\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.47 Safari/537.36\";s:5:\"login\";i:1455966961;}s:64:\"5a7153d77415358e03e26033bd9e476421a246645765aaf7cca53ec96d6b4556\";a:4:{s:10:\"expiration\";i:1457238690;s:2:\"ip\";s:15:\"116.230.148.226\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.54 Safari/537.36\";s:5:\"login\";i:1456029090;}s:64:\"c235483037893248247350231ab8bc90184cf0cc982b916a0121507350bb520d\";a:4:{s:10:\"expiration\";i:1457433666;s:2:\"ip\";s:13:\"124.77.187.84\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.54 Safari/537.36\";s:5:\"login\";i:1456224066;}s:64:\"27eb0423ca53a151e1f2f06264060db18a8355c0d878e7bec6b5d2d4c6e6a9f8\";a:4:{s:10:\"expiration\";i:1457536915;s:2:\"ip\";s:12:\"124.77.9.248\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.54 Safari/537.36\";s:5:\"login\";i:1456327315;}s:64:\"6d52f26612aad9fa7560fe14db24ab08c0ef7e8fcad223fa2a78decbdb29d68c\";a:4:{s:10:\"expiration\";i:1457537194;s:2:\"ip\";s:12:\"124.77.9.248\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.54 Safari/537.36\";s:5:\"login\";i:1456327594;}s:64:\"c6fb547ccaf66b12f7038998dd59ccebe6dab838c5590d6d590300dde0e81335\";a:4:{s:10:\"expiration\";i:1457572829;s:2:\"ip\";s:13:\"124.77.187.84\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.54 Safari/537.36\";s:5:\"login\";i:1456363229;}s:64:\"da73fba7c87ea549cceab17b656ce61fb4392348ca1ad2c0df9daf7f24da3e59\";a:4:{s:10:\"expiration\";i:1458043382;s:2:\"ip\";s:13:\"124.77.184.37\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.63 Safari/537.36\";s:5:\"login\";i:1456833782;}s:64:\"1ab0d687495203927d8fd6df50f12652e2e90108c36135edb280466b8150e551\";a:4:{s:10:\"expiration\";i:1458138193;s:2:\"ip\";s:12:\"222.70.11.88\";s:2:\"ua\";s:120:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.63 Safari/537.36\";s:5:\"login\";i:1456928593;}}');
INSERT INTO `wp_usermeta` VALUES (15,1,'wp_dashboard_quick_press_last_post_id','373');
INSERT INTO `wp_usermeta` VALUES (16,1,'wporg_favorites','');
INSERT INTO `wp_usermeta` VALUES (17,1,'wp_user-settings','libraryContent=browse&editor=tinymce&wplink=0&hidetb=1&post_dfw=off&mfold=o&advImgDetails=show');
INSERT INTO `wp_usermeta` VALUES (18,1,'wp_user-settings-time','1457260495');
INSERT INTO `wp_usermeta` VALUES (19,1,'managenav-menuscolumnshidden','a:0:{}');
INSERT INTO `wp_usermeta` VALUES (20,1,'meta-box-order_dashboard','a:4:{s:6:\"normal\";s:38:\"dashboard_right_now,dashboard_activity\";s:4:\"side\";s:39:\"dashboard_quick_press,dashboard_primary\";s:7:\"column3\";s:0:\"\";s:7:\"column4\";s:0:\"\";}');
INSERT INTO `wp_usermeta` VALUES (22,1,'manageedit-postcolumnshidden','a:0:{}');
INSERT INTO `wp_usermeta` VALUES (23,1,'closedpostboxes_post','a:0:{}');
INSERT INTO `wp_usermeta` VALUES (24,1,'metaboxhidden_post','a:6:{i:0;s:9:\"formatdiv\";i:1;s:11:\"postexcerpt\";i:2;s:13:\"trackbacksdiv\";i:3;s:16:\"commentstatusdiv\";i:4;s:7:\"slugdiv\";i:5;s:9:\"authordiv\";}');
INSERT INTO `wp_usermeta` VALUES (25,1,'metaboxhidden_nav-menus','a:2:{i:0;s:12:\"add-post_tag\";i:1;s:15:\"add-post_format\";}');
INSERT INTO `wp_usermeta` VALUES (26,1,'nav_menu_recently_edited','8');
INSERT INTO `wp_usermeta` VALUES (27,1,'jetpack_tracks_wpcom_id','101278835');
INSERT INTO `wp_usermeta` VALUES (28,1,'wp_tablepress_user_options','{\"user_options_db_version\":32,\"admin_menu_parent_page\":\"middle\",\"message_first_visit\":true}');
INSERT INTO `wp_usermeta` VALUES (29,1,'managetablepress_listcolumnshidden','a:1:{i:0;s:22:\"table_last_modified_by\";}');
INSERT INTO `wp_usermeta` VALUES (30,2,'nickname','gasmanOl');
INSERT INTO `wp_usermeta` VALUES (31,2,'first_name','');
INSERT INTO `wp_usermeta` VALUES (32,2,'last_name','');
INSERT INTO `wp_usermeta` VALUES (33,2,'description','');
INSERT INTO `wp_usermeta` VALUES (34,2,'rich_editing','true');
INSERT INTO `wp_usermeta` VALUES (35,2,'comment_shortcuts','false');
INSERT INTO `wp_usermeta` VALUES (36,2,'admin_color','fresh');
INSERT INTO `wp_usermeta` VALUES (37,2,'use_ssl','0');
INSERT INTO `wp_usermeta` VALUES (38,2,'show_admin_bar_front','true');
INSERT INTO `wp_usermeta` VALUES (39,2,'wp_capabilities','a:1:{s:10:\"subscriber\";b:1;}');
INSERT INTO `wp_usermeta` VALUES (40,2,'wp_user_level','0');
INSERT INTO `wp_usermeta` VALUES (41,2,'default_password_nag','1');
INSERT INTO `wp_usermeta` VALUES (42,1,'closedpostboxes_dashboard','a:0:{}');
INSERT INTO `wp_usermeta` VALUES (43,1,'metaboxhidden_dashboard','a:0:{}');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'admin','$P$BKwI4soWfG8We/DJG2TzjZSLCB4qgg/','admin','happyjiahan@gmail.com','http://www.codingcoder.com','2016-02-20 04:58:59','',0,'破土君');
INSERT INTO `wp_users` VALUES (2,'gasmanOl','$P$BmGlxcikslNg2x1Te1cE7oa4NMHpCj0','gasmanol','afinemer@yandex.com','','2016-03-02 17:21:02','1456939263:$P$B1rGgcAql.hWLVRBsjezOiURqb75K8.',0,'gasmanOl');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed
